Bottom: a313cc8140b5f3d84bb938edf2d5f3647127f54e
Top:    d32958ecd79bdb5c6c025d2b3279649a1ae5f083
Author: Peter Clifton <peter@clifton-electronics.co.uk>
Date:   2016-12-04 19:24:33 +0000

Add "store_undo" parameter to some find.c functions.

Tying the store of undo information and redrawing together is unhelpful!


---

diff --git a/src/action.c b/src/action.c
index c16ea79..01cf9aa 100644
--- a/src/action.c
+++ b/src/action.c
@@ -895,8 +895,8 @@ NotifyLine (void)
 	  type = SearchScreen (Crosshair.X, Crosshair.Y,
 			       PIN_TYPE | PAD_TYPE | VIA_TYPE, &ptr1, &ptr2,
 			       &ptr3);
-	  LookupConnection (Crosshair.X, Crosshair.Y, true, 1, CONNECTEDFLAG, false);
-	  LookupConnection (Crosshair.X, Crosshair.Y, true, 1, FOUNDFLAG, true);
+	  LookupConnection (Crosshair.X, Crosshair.Y, true, 1, CONNECTEDFLAG, false, true);
+	  LookupConnection (Crosshair.X, Crosshair.Y, true, 1, FOUNDFLAG, true, true);
 	}
       if (type == PIN_TYPE || type == VIA_TYPE)
 	{
@@ -1343,7 +1343,7 @@ NotifyMode (void)
 		}
 	    }
 	  if (TEST_FLAG (AUTODRCFLAG, PCB) && !TEST_SILK_LAYER (CURRENT))
-	    LookupConnection (Note.X, Note.Y, true, 1, CONNECTEDFLAG, false);
+	    LookupConnection (Note.X, Note.Y, true, 1, CONNECTEDFLAG, false, true);
 	  Draw ();
 	}
       break;
@@ -2331,13 +2331,13 @@ ActionConnection (int argc, char **argv, Coord x, Coord y)
 	case F_Find:
 	  {
 	    gui->get_coords (_("Click on a connection"), &x, &y);
-	    LookupConnection (x, y, true, 1, CONNECTEDFLAG, false);
-	    LookupConnection (x, y, true, 1, FOUNDFLAG, true);
+	    LookupConnection (x, y, true, 1, CONNECTEDFLAG, false, true);
+	    LookupConnection (x, y, true, 1, FOUNDFLAG, true, true);
 	    break;
 	  }
 
 	case F_ResetLinesAndPolygons:
-	  if (ClearFlagOnLinesAndPolygons (true, CONNECTEDFLAG | FOUNDFLAG))
+	  if (ClearFlagOnLinesAndPolygons (true, CONNECTEDFLAG | FOUNDFLAG, true))
 	    {
 	      IncrementUndoSerialNumber ();
 	      Draw ();
@@ -2345,7 +2345,7 @@ ActionConnection (int argc, char **argv, Coord x, Coord y)
 	  break;
 
 	case F_ResetPinsViasAndPads:
-	  if (ClearFlagOnPinsViasAndPads (true, CONNECTEDFLAG | FOUNDFLAG))
+	  if (ClearFlagOnPinsViasAndPads (true, CONNECTEDFLAG | FOUNDFLAG, true))
 	    {
 	      IncrementUndoSerialNumber ();
 	      Draw ();
@@ -2353,7 +2353,7 @@ ActionConnection (int argc, char **argv, Coord x, Coord y)
 	  break;
 
 	case F_Reset:
-	  if (ClearFlagOnAllObjects (true, CONNECTEDFLAG | FOUNDFLAG))
+	  if (ClearFlagOnAllObjects (true, CONNECTEDFLAG | FOUNDFLAG, true))
 	    {
 	      IncrementUndoSerialNumber ();
 	      Draw ();
@@ -2790,7 +2790,7 @@ ActionDisplay (int argc, char **argv, Coord childX, Coord childY)
 	  TOGGLE_FLAG (AUTODRCFLAG, PCB);
 	  if (TEST_FLAG (AUTODRCFLAG, PCB) && Settings.Mode == LINE_MODE)
 	    {
-	      if (ClearFlagOnAllObjects (true, CONNECTEDFLAG | FOUNDFLAG))
+	      if (ClearFlagOnAllObjects (true, CONNECTEDFLAG | FOUNDFLAG, true))
 		{
 		  IncrementUndoSerialNumber ();
 		  Draw ();
@@ -2799,10 +2799,10 @@ ActionDisplay (int argc, char **argv, Coord childX, Coord childY)
 		{
 		  LookupConnection (Crosshair.AttachedLine.Point1.X,
 		                    Crosshair.AttachedLine.Point1.Y,
-		                    true, 1, CONNECTEDFLAG, false);
+		                    true, 1, CONNECTEDFLAG, false, true);
 		  LookupConnection (Crosshair.AttachedLine.Point1.X,
 		                    Crosshair.AttachedLine.Point1.Y,
-		                    true, 1, FOUNDFLAG, true);
+		                    true, 1, FOUNDFLAG, true, true);
 		}
 	    }
 	  notify_crosshair_change (true);
diff --git a/src/find.c b/src/find.c
index 2b6496f..c9b5c78 100644
--- a/src/find.c
+++ b/src/find.c
@@ -2939,7 +2939,7 @@ LookupElementConnections (ElementType *Element, FILE * FP)
 {
   /* reset all currently marked connections */
   User = true;
-  ClearFlagOnAllObjects (true, FOUNDFLAG);
+  ClearFlagOnAllObjects (true, FOUNDFLAG, true);
   InitConnectionLookup ();
   PrintElementConnections (Element, FP, FOUNDFLAG, true);
   SetChangedFlag (true);
@@ -2959,7 +2959,7 @@ LookupConnectionsToAllElements (FILE * FP)
 {
   /* reset all currently marked connections */
   User = false;
-  ClearFlagOnAllObjects (false, FOUNDFLAG);
+  ClearFlagOnAllObjects (false, FOUNDFLAG, false);
   InitConnectionLookup ();
 
   ELEMENT_LOOP (PCB->Data);
@@ -2969,12 +2969,12 @@ LookupConnectionsToAllElements (FILE * FP)
       break;
     SEPARATE (FP);
     if (Settings.ResetAfterElement && n != 1)
-      ClearFlagOnAllObjects (false, FOUNDFLAG);
+      ClearFlagOnAllObjects (false, FOUNDFLAG, false);
   }
   END_LOOP;
   if (Settings.RingBellWhenFinished)
     gui->beep ();
-  ClearFlagOnAllObjects (false, FOUNDFLAG);
+  ClearFlagOnAllObjects (false, FOUNDFLAG, false);
   FreeConnectionLookupMemory ();
   Redraw ();
 }
@@ -3055,7 +3055,7 @@ ListStart (int type, void *ptr1, void *ptr2, void *ptr3, int flag)
  */
 void
 LookupConnection (Coord X, Coord Y, bool AndDraw, Coord Range, int flag,
-                  bool AndRats)
+                  bool AndRats, bool store_undo)
 {
   void *ptr1, *ptr2, *ptr3;
   char *name;
@@ -3088,7 +3088,7 @@ LookupConnection (Coord X, Coord Y, bool AndDraw, Coord Range, int flag,
   name = ConnectionName (type, ptr1, ptr2);
   hid_actionl ("NetlistShow", name, NULL);
 
-  User = AndDraw;
+  User = store_undo;
   InitConnectionLookup ();
 
   /* now add the object to the appropriate list and start scanning
@@ -3096,7 +3096,7 @@ LookupConnection (Coord X, Coord Y, bool AndDraw, Coord Range, int flag,
    */
   ListStart (type, ptr1, ptr2, ptr3, flag);
   DoIt (flag, AndRats, AndDraw);
-  if (AndDraw)
+  if (store_undo)
     IncrementUndoSerialNumber ();
   User = false;
 
@@ -3131,7 +3131,7 @@ LookupUnusedPins (FILE * FP)
 {
   /* reset all currently marked connections */
   User = true;
-  ClearFlagOnAllObjects (true, FOUNDFLAG);
+  ClearFlagOnAllObjects (true, FOUNDFLAG, true);
   InitConnectionLookup ();
 
   ELEMENT_LOOP (PCB->Data);
@@ -3156,7 +3156,7 @@ LookupUnusedPins (FILE * FP)
  * resets all used flags of pins and vias
  */
 bool
-ClearFlagOnPinsViasAndPads (bool AndDraw, int flag)
+ClearFlagOnPinsViasAndPads (bool AndDraw, int flag, bool store_undo)
 {
   bool change = false;
 
@@ -3164,7 +3164,7 @@ ClearFlagOnPinsViasAndPads (bool AndDraw, int flag)
   {
     if (TEST_FLAG (flag, via))
       {
-        if (AndDraw)
+        if (store_undo)
           AddObjectToFlagUndoList (VIA_TYPE, via, via, via);
         CLEAR_FLAG (flag, via);
         if (AndDraw)
@@ -3179,7 +3179,7 @@ ClearFlagOnPinsViasAndPads (bool AndDraw, int flag)
     {
       if (TEST_FLAG (flag, pin))
         {
-          if (AndDraw)
+          if (store_undo)
             AddObjectToFlagUndoList (PIN_TYPE, element, pin, pin);
           CLEAR_FLAG (flag, pin);
           if (AndDraw)
@@ -3192,7 +3192,7 @@ ClearFlagOnPinsViasAndPads (bool AndDraw, int flag)
     {
       if (TEST_FLAG (flag, pad))
         {
-          if (AndDraw)
+          if (store_undo)
             AddObjectToFlagUndoList (PAD_TYPE, element, pad, pad);
           CLEAR_FLAG (flag, pad);
           if (AndDraw)
@@ -3212,7 +3212,7 @@ ClearFlagOnPinsViasAndPads (bool AndDraw, int flag)
  * resets all used flags of LOs
  */
 bool
-ClearFlagOnLinesAndPolygons (bool AndDraw, int flag)
+ClearFlagOnLinesAndPolygons (bool AndDraw, int flag, bool store_undo)
 {
   bool change = false;
 
@@ -3220,7 +3220,7 @@ ClearFlagOnLinesAndPolygons (bool AndDraw, int flag)
   {
     if (TEST_FLAG (flag, line))
       {
-        if (AndDraw)
+        if (store_undo)
           AddObjectToFlagUndoList (RATLINE_TYPE, line, line, line);
         CLEAR_FLAG (flag, line);
         if (AndDraw)
@@ -3233,7 +3233,7 @@ ClearFlagOnLinesAndPolygons (bool AndDraw, int flag)
   {
     if (TEST_FLAG (flag, line))
       {
-        if (AndDraw)
+        if (store_undo)
           AddObjectToFlagUndoList (LINE_TYPE, layer, line, line);
         CLEAR_FLAG (flag, line);
         if (AndDraw)
@@ -3246,7 +3246,7 @@ ClearFlagOnLinesAndPolygons (bool AndDraw, int flag)
   {
     if (TEST_FLAG (flag, arc))
       {
-        if (AndDraw)
+        if (store_undo)
           AddObjectToFlagUndoList (ARC_TYPE, layer, arc, arc);
         CLEAR_FLAG (flag, arc);
         if (AndDraw)
@@ -3259,7 +3259,7 @@ ClearFlagOnLinesAndPolygons (bool AndDraw, int flag)
   {
     if (TEST_FLAG (flag, polygon))
       {
-        if (AndDraw)
+        if (store_undo)
           AddObjectToFlagUndoList (POLYGON_TYPE, layer, polygon, polygon);
         CLEAR_FLAG (flag, polygon);
         if (AndDraw)
@@ -3277,12 +3277,12 @@ ClearFlagOnLinesAndPolygons (bool AndDraw, int flag)
  * resets all found connections
  */
 bool
-ClearFlagOnAllObjects (bool AndDraw, int flag)
+ClearFlagOnAllObjects (bool AndDraw, int flag, bool store_undo)
 {
   bool change = false;
 
-  change = ClearFlagOnPinsViasAndPads  (AndDraw, flag) || change;
-  change = ClearFlagOnLinesAndPolygons (AndDraw, flag) || change;
+  change = ClearFlagOnPinsViasAndPads  (AndDraw, flag, store_undo) || change;
+  change = ClearFlagOnLinesAndPolygons (AndDraw, flag, store_undo) || change;
 
   return change;
 }
@@ -3364,7 +3364,7 @@ DRCFind (int What, void *ptr1, void *ptr2, void *ptr3)
         {
           DumpList ();
           /* make the flag changes undoable */
-          ClearFlagOnAllObjects (false, FOUNDFLAG | SELECTEDFLAG);
+          ClearFlagOnAllObjects (false, FOUNDFLAG | SELECTEDFLAG, false);
           User = true;
           start_do_it_and_dump (What, ptr1, ptr2, ptr3, SELECTEDFLAG, true, -PCB->Shrink, false);
           start_do_it_and_dump (What, ptr1, ptr2, ptr3, FOUNDFLAG, true, 0, true);
@@ -3397,7 +3397,7 @@ DRCFind (int What, void *ptr1, void *ptr2, void *ptr3)
       DumpList ();
     }
   /* now check the bloated condition */
-  ClearFlagOnAllObjects (false, FOUNDFLAG | SELECTEDFLAG);
+  ClearFlagOnAllObjects (false, FOUNDFLAG | SELECTEDFLAG, false);
   start_do_it_and_dump (What, ptr1, ptr2, ptr3, SELECTEDFLAG, false, 0, false);
   flag = FOUNDFLAG;
   ListStart (What, ptr1, ptr2, ptr3, flag);
@@ -3407,7 +3407,7 @@ DRCFind (int What, void *ptr1, void *ptr2, void *ptr3)
     {
       DumpList ();
       /* make the flag changes undoable */
-      ClearFlagOnAllObjects (false, FOUNDFLAG | SELECTEDFLAG);
+      ClearFlagOnAllObjects (false, FOUNDFLAG | SELECTEDFLAG, false);
       User = true;
       start_do_it_and_dump (What, ptr1, ptr2, ptr3, SELECTEDFLAG, true, 0, false);
       start_do_it_and_dump (What, ptr1, ptr2, ptr3, FOUNDFLAG, true, PCB->Bloat, true);
@@ -3444,7 +3444,7 @@ DRCFind (int What, void *ptr1, void *ptr2, void *ptr3)
     }
   drc = false;
   DumpList ();
-  ClearFlagOnAllObjects (false, FOUNDFLAG | SELECTEDFLAG);
+  ClearFlagOnAllObjects (false, FOUNDFLAG | SELECTEDFLAG, false);
   return (false);
 }
 
@@ -3580,7 +3580,7 @@ DRCAll (void)
   hid_action ("LayersChanged");
   InitConnectionLookup ();
 
-  if (ClearFlagOnAllObjects (true, FOUNDFLAG | DRCFLAG | SELECTEDFLAG))
+  if (ClearFlagOnAllObjects (true, FOUNDFLAG | DRCFLAG | SELECTEDFLAG, true))
     {
       IncrementUndoSerialNumber ();
       Draw ();
@@ -3633,7 +3633,7 @@ DRCAll (void)
   }
   END_LOOP;
 
-  ClearFlagOnAllObjects (false, IsBad ? DRCFLAG : (FOUNDFLAG | DRCFLAG | SELECTEDFLAG));
+  ClearFlagOnAllObjects (false, IsBad ? DRCFLAG : (FOUNDFLAG | DRCFLAG | SELECTEDFLAG), false);
   info.flag = SELECTEDFLAG;
   /* check minimum widths and polygon clearances */
   if (!IsBad)
diff --git a/src/find.h b/src/find.h
index 4cc68f8..be25264 100644
--- a/src/find.h
+++ b/src/find.h
@@ -50,11 +50,11 @@ bool LinePadIntersect (LineType *, PadType *);
 bool ArcPadIntersect (ArcType *, PadType *);
 void LookupElementConnections (ElementType *, FILE *);
 void LookupConnectionsToAllElements (FILE *);
-void LookupConnection (Coord, Coord, bool, Coord, int, bool AndRats);
+void LookupConnection (Coord, Coord, bool, Coord, int, bool AndRats, bool store_undo);
 void LookupUnusedPins (FILE *);
-bool ClearFlagOnLinesAndPolygons (bool, int flag);
-bool ClearFlagOnPinsViasAndPads (bool, int flag);
-bool ClearFlagOnAllObjects (bool, int flag);
+bool ClearFlagOnLinesAndPolygons (bool, int flag, bool store_undo);
+bool ClearFlagOnPinsViasAndPads (bool, int flag, bool store_undo);
+bool ClearFlagOnAllObjects (bool, int flag, bool store_undo);
 void InitConnectionLookup (void);
 void FreeConnectionLookupMemory (void);
 void RatFindHook (int, void *, void *, void *, bool, int flag, bool);
diff --git a/src/hid/gtk/gui-drc-window.c b/src/hid/gtk/gui-drc-window.c
index 8f5a352..29232bb 100644
--- a/src/hid/gtk/gui-drc-window.c
+++ b/src/hid/gtk/gui-drc-window.c
@@ -101,7 +101,7 @@ selection_changed_cb (GtkTreeSelection *selection, gpointer user_data)
 
   if (!gtk_tree_selection_get_selected (selection, &model, &iter))
     {
-      if (ClearFlagOnAllObjects (true, FOUNDFLAG))
+      if (ClearFlagOnAllObjects (true, FOUNDFLAG, true))
         {
           IncrementUndoSerialNumber ();
           Draw ();
@@ -115,7 +115,7 @@ selection_changed_cb (GtkTreeSelection *selection, gpointer user_data)
 
   gtk_tree_model_get (model, &iter, DRC_VIOLATION_OBJ_COL, &violation, -1);
 
-  ClearFlagOnAllObjects (true, FOUNDFLAG);
+  ClearFlagOnAllObjects (true, FOUNDFLAG, true);
 
   if (violation == NULL)
     return;
diff --git a/src/hid/gtk/gui-netlist-window.c b/src/hid/gtk/gui-netlist-window.c
index 089aa7c..7be1188 100644
--- a/src/hid/gtk/gui-netlist-window.c
+++ b/src/hid/gtk/gui-netlist-window.c
@@ -536,14 +536,14 @@ netlist_select_cb (GtkWidget * widget, gpointer data)
     node_selected_net = NULL;
 
   InitConnectionLookup ();
-  ClearFlagOnAllObjects (true, FOUNDFLAG);
+  ClearFlagOnAllObjects (true, FOUNDFLAG, true);
 
   for (i = selected_net->EntryN, entry = selected_net->Entry; i; i--, entry++)
     if (SeekPad (entry, &conn, false))
       RatFindHook (conn.type, conn.ptr1, conn.ptr2, conn.ptr2, true, FOUNDFLAG, true);
 
   SelectByFlag (FOUNDFLAG, select_flag);
-  ClearFlagOnAllObjects (false, FOUNDFLAG);
+  ClearFlagOnAllObjects (false, FOUNDFLAG, false);
   FreeConnectionLookupMemory ();
   IncrementUndoSerialNumber ();
   Draw ();
diff --git a/src/netlist.c b/src/netlist.c
index f420fac..9ac7667 100644
--- a/src/netlist.c
+++ b/src/netlist.c
@@ -163,7 +163,7 @@ netlist_find (LibraryMenuType * net, LibraryEntryType * pin)
   int x, y;
   if (pin_name_to_xy (net->Entry, &x, &y))
     return;
-  LookupConnection (x, y, 1, 1, FOUNDFLAG, true);
+  LookupConnection (x, y, 1, 1, FOUNDFLAG, true, true);
 }
 
 static void
@@ -172,7 +172,7 @@ netlist_select (LibraryMenuType * net, LibraryEntryType * pin)
   int x, y;
   if (pin_name_to_xy (net->Entry, &x, &y))
     return;
-  LookupConnection (x, y, 1, 1, SELECTEDFLAG, true);
+  LookupConnection (x, y, 1, 1, SELECTEDFLAG, true, true);
 }
 
 static void
diff --git a/src/rats.c b/src/rats.c
index 5c48055..c35f515 100644
--- a/src/rats.c
+++ b/src/rats.c
@@ -458,7 +458,7 @@ GatherSubnets (NetListType *Netl, bool NoWarn, bool AndRats)
   for (m = 0; Netl->NetN > 0 && m < Netl->NetN; m++)
     {
       a = &Netl->Net[m];
-      ClearFlagOnAllObjects (false, DRCFLAG);
+      ClearFlagOnAllObjects (false, DRCFLAG, false);
       RatFindHook (a->Connection[0].type, a->Connection[0].ptr1,
                    a->Connection[0].ptr2, a->Connection[0].ptr2,
                    false, DRCFLAG, AndRats);
@@ -537,7 +537,7 @@ GatherSubnets (NetListType *Netl, bool NoWarn, bool AndRats)
       if (!NoWarn)
 	Warned |= CheckShorts (a->Connection[0].menu);
     }
-  ClearFlagOnAllObjects (false, DRCFLAG);
+  ClearFlagOnAllObjects (false, DRCFLAG, false);
   return (Warned);
 }
 
diff --git a/src/report.c b/src/report.c
index 1e49d9d..e9a1cba 100644
--- a/src/report.c
+++ b/src/report.c
@@ -569,7 +569,7 @@ XYtoNetLength (Coord x, Coord y, int *found)
   /* NB: The third argument here, 'false' ensures LookupConnection
    *     does not add its changes to the undo system.
    */
-  LookupConnection (x, y, false, PCB->Grid, FOUNDFLAG, true);
+  LookupConnection (x, y, false, PCB->Grid, FOUNDFLAG, true, false);
 
   ALLLINE_LOOP (PCB->Data);
   {
@@ -616,7 +616,7 @@ ReportAllNetLengths (int argc, char **argv, Coord x, Coord y)
    * by resetting the connections with ClearFlagOnAllObjects() before
    * calling Undo() at the end of the procedure.
    */
-  ClearFlagOnAllObjects (true, FOUNDFLAG);
+  ClearFlagOnAllObjects (true, FOUNDFLAG, true);
   IncrementUndoSerialNumber ();
 
   for (ni = 0; ni < PCB->NetlistLib.MenuN; ni++)
@@ -678,14 +678,14 @@ ReportAllNetLengths (int argc, char **argv, Coord x, Coord y)
           length = XYtoNetLength (x, y, &found);
 
           /* Reset connectors for the next lookup */
-          ClearFlagOnAllObjects (false, FOUNDFLAG);
+          ClearFlagOnAllObjects (false, FOUNDFLAG, false);
 
           pcb_snprintf(buf, sizeof (buf), _("%$m*"), units_name, length);
           gui->log(_("Net %s length %s\n"), netname, buf);
         }
     }
 
-  ClearFlagOnAllObjects (false, FOUNDFLAG);
+  ClearFlagOnAllObjects (false, FOUNDFLAG, false);
   Undo (true);
   return 0;
 }
@@ -707,14 +707,14 @@ ReportNetLength (int argc, char **argv, Coord x, Coord y)
    * by resetting the connections with ClearFlagOnAllObjects() before
    * calling Undo() at the end of the procedure.
    */
-  ClearFlagOnAllObjects (true, FOUNDFLAG);
+  ClearFlagOnAllObjects (true, FOUNDFLAG, true);
   IncrementUndoSerialNumber ();
 
   length = XYtoNetLength (x, y, &found);
 
   if (!found)
     {
-      ClearFlagOnAllObjects (false, FOUNDFLAG);
+      ClearFlagOnAllObjects (false, FOUNDFLAG, false);
       Undo (true);
       gui->log (_("No net under cursor.\n"));
       return 1;
@@ -776,7 +776,7 @@ ReportNetLength (int argc, char **argv, Coord x, Coord y)
   END_LOOP;
 
 got_net_name:
-  ClearFlagOnAllObjects (false, FOUNDFLAG);
+  ClearFlagOnAllObjects (false, FOUNDFLAG, false);
   Undo (true);
 
   {
@@ -913,13 +913,13 @@ ReportNetLengthByName (char *tofind, int x, int y)
    * by resetting the connections with ClearFlagOnAllObjects() before
    * calling Undo() when we are finished.
    */
-  ClearFlagOnAllObjects (true, FOUNDFLAG);
+  ClearFlagOnAllObjects (true, FOUNDFLAG, true);
   IncrementUndoSerialNumber ();
 
   length = XYtoNetLength (x, y, &found);
   netname = net->Name + 2;
 
-  ClearFlagOnAllObjects (false, FOUNDFLAG);
+  ClearFlagOnAllObjects (false, FOUNDFLAG, false);
   Undo (true);
 
   if (!found)
diff --git a/src/select.c b/src/select.c
index 3e231d0..2c49342 100644
--- a/src/select.c
+++ b/src/select.c
@@ -976,7 +976,7 @@ SelectObjectByName (int Type, char *Pattern, bool select)
   if (Type & NET_TYPE)
     {
       InitConnectionLookup ();
-      changed = ClearFlagOnAllObjects (true, FOUNDFLAG) || changed;
+      changed = ClearFlagOnAllObjects (true, FOUNDFLAG, true) || changed;
 
       MENU_LOOP (&PCB->NetlistLib);
       {
@@ -997,7 +997,7 @@ SelectObjectByName (int Type, char *Pattern, bool select)
       END_LOOP;
 
       changed = SelectByFlag (FOUNDFLAG, select) || changed;
-      changed = ClearFlagOnAllObjects (false, FOUNDFLAG) || changed;
+      changed = ClearFlagOnAllObjects (false, FOUNDFLAG, false) || changed;
       FreeConnectionLookupMemory ();
     }
 
diff --git a/src/set.c b/src/set.c
index 9bf64b8..03b452a 100644
--- a/src/set.c
+++ b/src/set.c
@@ -300,7 +300,7 @@ SetMode (int Mode)
       Crosshair.AttachedLine.State = STATE_FIRST;
       if (Mode == LINE_MODE && TEST_FLAG (AUTODRCFLAG, PCB))
 	{
-	  if (ClearFlagOnAllObjects (true, CONNECTEDFLAG | FOUNDFLAG))
+	  if (ClearFlagOnAllObjects (true, CONNECTEDFLAG | FOUNDFLAG, true))
 	    {
 	      IncrementUndoSerialNumber ();
 	      Draw ();
