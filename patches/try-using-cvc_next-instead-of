Bottom: 03cfb8a933b7dca122874860832521868e8b6003
Top:    36152d679221d7e1c1d3b7586bb20342b9a88e6f
Author: Peter Clifton <peter@clifton-electronics.co.uk>
Date:   2016-02-03 23:46:22 +0000

Try using cvc_next instead of cvc_prev where possible


---

diff --git a/src/polygon1.c b/src/polygon1.c
index 63d2f6a..c48530e 100644
--- a/src/polygon1.c
+++ b/src/polygon1.c
@@ -241,14 +241,14 @@ new_descriptor (VNODE * a, char poly, char side)
     {
       if (side == 'P')
 	{
-	  if (PREV_VERTEX (a)->cvc_prev == (CVCList *) - 1)
+	  if (PREV_VERTEX (a)->cvc_next == (CVCList *) - 1)
 	    PREV_VERTEX (a)->cvc_prev = PREV_VERTEX (a)->cvc_next = NULL;
 	  poly_ExclVertex (PREV_VERTEX (a));
 	  vect_sub (v, PREV_VERTEX (a)->point, a->point);
 	}
       else
 	{
-	  if (NEXT_VERTEX (a)->cvc_prev == (CVCList *) - 1)
+	  if (NEXT_VERTEX (a)->cvc_next == (CVCList *) - 1)
 	    NEXT_VERTEX (a)->cvc_prev = NEXT_VERTEX (a)->cvc_next = NULL;
 	  poly_ExclVertex (NEXT_VERTEX (a));
 	  vect_sub (v, NEXT_VERTEX (a)->point, a->point);
@@ -488,7 +488,7 @@ add_descriptors (PLINE * pl, char poly, CVCList * list)
 
   do
     {
-      if (node->cvc_prev)
+      if (node->cvc_next)
 	{
 	  assert (node->cvc_prev == (CVCList *) - 1
 		  && node->cvc_next == (CVCList *) - 1);
@@ -1080,14 +1080,15 @@ theState (VNODE * e)
 static void
 print_labels (PLINE * a)
 {
-  VNODE *c = &a->head;
+  VNODE *e = &a->head;
 
   do
     {
-      DEBUGP ("%#mD->%#mD labeled %s\n", c->point[0], c->point[1],
-	      NEXT_VERTEX (c)->point[0], NEXT_VERTEX (c)->point[1], theState (c));
+      DEBUGP ("%#mD->%#mD labeled %s\n",
+              EDGE_BACKWARD_VERTEX (e)->point[0], EDGE_BACKWARD_VERTEX (e)->point[1],
+               EDGE_FORWARD_VERTEX (e)->point[0],  EDGE_FORWARD_VERTEX (e)->point[1], theState (e));
     }
-  while ((c = NEXT_VERTEX (c)) != &a->head);
+  while ((e = NEXT_EDGE (e)) != &a->head);
 }
 #endif
 #endif
@@ -1555,7 +1556,7 @@ jump (VNODE **curv, DIRECTION *cdir, J_Rule j_rule)
   VNODE *e; /* e is considered an edge */
   DIRECTION newone;
 
-  if (!(*curv)->cvc_prev)	/* not a cross-vertex */
+  if (!(*curv)->cvc_next)	/* not a cross-vertex */
     {
       if ((*cdir == FORW) ? VERTEX_FORWARD_EDGE (*curv)->Flags.mark :
                            VERTEX_BACKWARD_EDGE (*curv)->Flags.mark)
