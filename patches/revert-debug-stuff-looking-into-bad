Bottom: 7a1d2a2463890329221e1b7acc8ee57a4118b16f
Top:    949cb33ec34dd47c03e03b463c796377f1c514e9
Author: Peter Clifton <peter@clifton-electronics.co.uk>
Date:   2015-04-21 02:08:38 +0100

Revert "DEBUG STUFF - looking into bad polygons"

This reverts commit 292c3e44c385e3ca13127339cbfdeda1d7f6587e.




---

diff --git a/src/polygon.c b/src/polygon.c
index 6d76ea14..b0cc0e0 100644
--- a/src/polygon.c
+++ b/src/polygon.c
@@ -684,9 +684,6 @@ ArcPoly (ArcType * a, Coord thick)
   return ArcPolyNoIntersect (a, thick);
 }
 
-void pline_dump (VNODE * v);
-void poly_dump (POLYAREA * p);
-
 POLYAREA *
 LinePoly (LineType * L, Coord thick)
 {
@@ -755,8 +752,6 @@ LinePoly (LineType * L, Coord thick)
   if (!(np = ContourToPoly (contour)))
     return NULL;
 
-  poly_dump (np);
-
   return np;
 }
 
@@ -1116,28 +1111,10 @@ line_sub_callback (const BoxType * b, void *cl)
   if (!(np = LinePoly (line, line->Thickness + line->Clearance)))
     longjmp (info->env, 1);
 
-  if (info->batch_size == 2)
-    {
-      printf ("Batch no %i, input:\n",info->batch_size);
-      poly_dump (info->accumulate);
-      printf ("---- subtract from it:\n");
-      poly_dump (np);
-    }
-
   poly_Boolean_free (info->accumulate, np, &merged, PBO_UNITE);
-
-  if (info->batch_size == 2)
-    {
-      printf ("Ouptut:\n");
-      poly_dump (merged);
-      printf ("-----------\n");
-    }
-
   info->accumulate = merged;
   info->batch_size ++;
 
-  pcb_printf ("Line %mm, %mm - %mm, %mm\n", line->Point1.X, line->Point1.Y, line->Point2.X, line->Point2.Y);
-
   if (info->batch_size == SUBTRACT_LINE_BATCH_SIZE)
     subtract_accumulated (info, polygon);
 
@@ -1209,8 +1186,7 @@ clearPoly (DataType *Data, LayerType *Layer, PolygonType * polygon,
         r +=
           r_search (layer->line_tree, &region, NULL, line_sub_callback,
                     &info);
-//        subtract_accumulated (&info, polygon);
-      polygon->Clipped = info.accumulate;
+        subtract_accumulated (&info, polygon);
         r +=
           r_search (layer->arc_tree, &region, NULL, arc_sub_callback, &info);
 	r +=
@@ -1219,7 +1195,7 @@ clearPoly (DataType *Data, LayerType *Layer, PolygonType * polygon,
       END_LOOP;
       r += r_search (Data->via_tree, &region, NULL, pin_sub_callback, &info);
       r += r_search (Data->pin_tree, &region, NULL, pin_sub_callback, &info);
-//      subtract_accumulated (&info, polygon);
+      subtract_accumulated (&info, polygon);
     }
   polygon->NoHolesValid = 0;
   return r;
diff --git a/src/polygon1.c b/src/polygon1.c
index 5218e49..f721685 100644
--- a/src/polygon1.c
+++ b/src/polygon1.c
@@ -95,12 +95,12 @@ int vect_inters2 (Vector A, Vector B, Vector C, Vector D, Vector S1,
   if (UNLIKELY (((ptr) = (type *)malloc(sizeof(type))) == NULL))	\
     error(err_no_memory);
 
-#define DEBUG_LABEL
-#define DEBUG_ALL_LABELS
-#define DEBUG_JUMP
-#define DEBUG_GATHER
-#define DEBUG_ANGLE
-#define DEBUG
+#undef DEBUG_LABEL
+#undef DEBUG_ALL_LABELS
+#undef DEBUG_JUMP
+#undef DEBUG_GATHER
+#undef DEBUG_ANGLE
+#undef DEBUG
 #ifdef DEBUG
 #define DEBUGP(...) pcb_fprintf(stderr, ## __VA_ARGS__)
 #else
@@ -125,7 +125,7 @@ int vect_inters2 (Vector A, Vector B, Vector C, Vector D, Vector S1,
 #ifdef DEBUG
 static char *theState (VNODE * v);
 
-/*static */void
+static void
 pline_dump (VNODE * v)
 {
   VNODE *s, *n;
@@ -134,14 +134,14 @@ pline_dump (VNODE * v)
   do
     {
       n = v->next;
-      pcb_fprintf (stderr, "Line [%mn %mn %mn %mn 10 10 \"%s\"]\n",
+      pcb_fprintf (stderr, "Line [%#mS %#mS %#mS %#mS 10 10 \"%s\"]\n",
 	       v->point[0], v->point[1],
 	       n->point[0], n->point[1], theState (v));
     }
   while ((v = v->next) != s);
 }
 
-/*static */void
+static void
 poly_dump (POLYAREA * p)
 {
   POLYAREA *f = p;
@@ -254,9 +254,8 @@ new_descriptor (VNODE * a, char poly, char side)
   l->angle = ang;
   assert (ang >= 0.0 && ang <= 4.0);
 #ifdef DEBUG_ANGLE
-  DEBUGP ("node on %c at %mn, %mn assigned angle %g on side %c\n", poly,
-	  a->point[0], a->point[1], ang * 10000., side);
-  DEBUGP ("That angle would be %f\n", atan2 (v[1], v[0]) * 180. / M_PI);
+  DEBUGP ("node on %c at %#mD assigned angle %g on side %c\n", poly,
+	  a->point[0], a->point[1], ang, side);
 #endif
   return l;
 }
@@ -1057,7 +1056,7 @@ print_labels (PLINE * a)
 
   do
     {
-      DEBUGP ("%mm, %mm -> %mm, %mm labeled %s\n", c->point[0], c->point[1],
+      DEBUGP ("%#mD->%#mD labeled %s\n", c->point[0], c->point[1],
 	      c->next->point[0], c->next->point[1], theState (c));
     }
   while ((c = c->next) != &a->head);
@@ -1529,7 +1528,7 @@ jump (VNODE ** cur, DIRECTION * cdir, J_Rule rule)
       return TRUE;
     }
 #ifdef DEBUG_JUMP
-  DEBUGP ("jump entering node at %mm, %mm\n", (*cur)->point[0], (*cur)->point[1]);
+  DEBUGP ("jump entering node at %$mD\n", (*cur)->point[0], (*cur)->point[1]);
 #endif
   if (*cdir == FORW)
     d = (*cur)->cvc_prev->prev;
@@ -1549,10 +1548,10 @@ jump (VNODE ** cur, DIRECTION * cdir, J_Rule rule)
 	    {
 #ifdef DEBUG_JUMP
 	      if (newone == FORW)
-		DEBUGP ("jump leaving node at %mm, %mm\n",
+		DEBUGP ("jump leaving node at %#mD\n",
 			e->next->point[0], e->next->point[1]);
 	      else
-		DEBUGP ("jump leaving node at %mm, %mm\n",
+		DEBUGP ("jump leaving node at %#mD\n",
 			e->point[0], e->point[1]);
 #endif
 	      *cur = d->parent;
@@ -1593,7 +1592,7 @@ Gather (VNODE * start, PLINE ** result, J_Rule v_rule, DIRECTION initdir)
 	  poly_InclVertex ((*result)->head.prev, newn);
 	}
 #ifdef DEBUG_GATHER
-      DEBUGP ("gather vertex at %mm, %mm\n", cur->point[0], cur->point[1]);
+      DEBUGP ("gather vertex at %#mD\n", cur->point[0], cur->point[1]);
 #endif
       /* Now mark the edge as included.  */
       newn = (dir == FORW ? cur : cur->prev);
