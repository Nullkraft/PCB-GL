Bottom: 7115dc3ee4ebaca6a41d63b322ecc8e3e107f8ae
Top:    1efc6e468d1a7ad13d4f5d9e74331dde5340f413
Author: Peter Clifton <peter@clifton-electronics.co.uk>
Date:   2016-01-07 02:18:05 +0000

Add calling wrappers for HID_DRAW virtual functions

NB: hid_draw_make_gc() and hid_draw_use_mask() take a HID_DRAW * pointer,
    not a hidGC pointer like all the other hid_draw_*() functions..

Ugly inconsistency, but avoids making the change too disruptive.


---

diff --git a/src/hid_draw.h b/src/hid_draw.h
index d5f5d72..ad984f9 100644
--- a/src/hid_draw.h
+++ b/src/hid_draw.h
@@ -70,3 +70,151 @@ struct hid_gc_struct {
   HID *hid;   /* Used by HIDs to validate the GCs passed belong to them */
   HID_DRAW *hid_draw;
 };
+
+/* Calling wrappers to access the vfunc table */
+
+inline hidGC
+hid_draw_make_gc (HID_DRAW *hid_draw)
+{
+  return hid_draw->make_gc ();
+}
+
+inline void
+hid_draw_destroy_gc (hidGC gc)
+{
+  gc->hid_draw->destroy_gc (gc);
+}
+
+inline void
+hid_draw_use_mask (HID_DRAW *hid_draw, enum mask_mode mode)
+{
+  hid_draw->use_mask (mode);
+}
+
+inline void
+hid_draw_set_color (hidGC gc, char *name)
+{
+  gc->hid_draw->set_color (gc, name);
+}
+
+inline void
+hid_draw_set_line_cap (hidGC gc, EndCapStyle style)
+{
+  gc->hid_draw->set_line_cap (gc, style);
+}
+
+inline void
+hid_draw_set_line_width (hidGC gc, Coord width)
+{
+  gc->hid_draw->set_line_width (gc, width);
+}
+
+inline void
+hid_draw_set_draw_xor (hidGC gc, int xor_)
+{
+  gc->hid_draw->set_draw_xor (gc, xor_);
+}
+
+inline void
+hid_draw_set_draw_faded (hidGC gc, int faded)
+{
+  gc->hid_draw->set_draw_faded (gc, faded);
+}
+
+inline void
+hid_draw_line (hidGC gc, Coord x1, Coord y1, Coord x2, Coord y2)
+{
+  gc->hid_draw->draw_line (gc, x1, y1, x2, y2);
+}
+
+inline void
+hid_draw_arc (hidGC gc, Coord cx, Coord cy, Coord xradius, Coord yradius, Angle start_angle, Angle delta_angle)
+{
+  gc->hid_draw->draw_arc (gc, cx, cy, xradius, yradius, start_angle, delta_angle);
+}
+
+inline void
+hid_draw_rect (hidGC gc, Coord x1, Coord y1, Coord x2, Coord y2)
+{
+  gc->hid_draw->draw_rect (gc, x1, y1, x2, y2);
+}
+
+inline void
+hid_draw_fill_circle (hidGC gc, Coord cx, Coord cy, Coord radius)
+{
+  gc->hid_draw->fill_circle (gc, cx, cy, radius);
+}
+
+inline void
+hid_draw_fill_polygon (hidGC gc, int n_coords, Coord *x, Coord *y)
+{
+  gc->hid_draw->fill_polygon (gc, n_coords, x, y);
+}
+
+inline void
+hid_draw_fill_rect (hidGC gc, Coord x1, Coord y1, Coord x2, Coord y2)
+{
+  gc->hid_draw->fill_rect (gc, x1, y1, x2, y2);
+}
+
+
+inline void
+hid_draw_pcb_line (hidGC gc, LineType *line)
+{
+  gc->hid_draw->draw_pcb_line (gc, line);
+}
+
+inline void
+hid_draw_pcb_arc (hidGC gc, ArcType *arc)
+{
+  gc->hid_draw->draw_pcb_arc (gc, arc);
+}
+
+inline void
+hid_draw_pcb_text (hidGC gc, TextType *text, Coord min_width)
+{
+  gc->hid_draw->draw_pcb_text (gc, text, min_width);
+}
+
+inline void
+hid_draw_pcb_polygon (hidGC gc, PolygonType *poly, const BoxType *clip_box)
+{
+  gc->hid_draw->draw_pcb_polygon (gc, poly, clip_box);
+}
+
+
+inline void
+hid_draw_fill_pcb_polygon (hidGC gc, PolygonType *poly, const BoxType *clip_box)
+{
+  gc->hid_draw->fill_pcb_polygon (gc, poly, clip_box);
+}
+
+inline void
+hid_draw_thin_pcb_polygon (hidGC gc, PolygonType *poly, const BoxType *clip_box)
+{
+  gc->hid_draw->thindraw_pcb_polygon (gc, poly, clip_box);
+}
+
+inline void
+hid_draw_fill_pcb_pad (hidGC gc, PadType *pad, bool clip, bool mask)
+{
+  gc->hid_draw->fill_pcb_pad (gc, pad, clip, mask);
+}
+
+inline void
+hid_draw_thin_pcb_pad (hidGC gc, PadType *pad, bool clip, bool mask)
+{
+  gc->hid_draw->thindraw_pcb_pad (gc, pad, clip, mask);
+}
+
+inline void
+hid_draw_fill_pcb_pv (hidGC fg_gc, hidGC bg_gc, PinType *pv, bool draw_hole, bool mask)
+{
+  fg_gc->hid_draw->fill_pcb_pv (fg_gc, bg_gc, pv, draw_hole, mask);
+}
+
+inline void
+hid_draw_thin_pcb_pv (hidGC fg_gc, hidGC bg_gc, PinType *pv, bool draw_hole, bool mask)
+{
+  fg_gc->hid_draw->thindraw_pcb_pv (fg_gc, bg_gc, pv, draw_hole, mask);
+}
