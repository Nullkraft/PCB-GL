Bottom: 95a08a8fb06ea81eaf1e0f5f498e2d7f4438411f
Top:    d4e15dab1e184c46fff2cb0adf032397d30f0998
Author: Peter Clifton <peter@clifton-electronics.co.uk>
Date:   2016-01-06 17:06:08 +0000

Add HID_DRAW* parameter to (HID_DRAW *)->make_gc() function


---

diff --git a/src/hid/batch/batch.c b/src/hid/batch/batch.c
index 13973b5..77f4725 100644
--- a/src/hid/batch/batch.c
+++ b/src/hid/batch/batch.c
@@ -166,7 +166,7 @@ batch_set_layer (HID_DRAW *hid_draw, const char *name, int idx, int empty)
 }
 
 static hidGC
-batch_make_gc (void)
+batch_make_gc (HID_DRAW *hid_draw)
 {
   return 0;
 }
diff --git a/src/hid/common/extents.c b/src/hid/common/extents.c
index 3838864..cd679c6 100644
--- a/src/hid/common/extents.c
+++ b/src/hid/common/extents.c
@@ -56,7 +56,7 @@ extents_set_layer (HID_DRAW *hid_draw, const char *name, int group, int empty)
 }
 
 static hidGC
-extents_make_gc (void)
+extents_make_gc (HID_DRAW *hid_draw)
 {
   hidGC gc = (hidGC)calloc (1, sizeof (struct extents_gc_struct));
 
diff --git a/src/hid/common/hidnogui.c b/src/hid/common/hidnogui.c
index 2821695..f4b8d2d 100644
--- a/src/hid/common/hidnogui.c
+++ b/src/hid/common/hidnogui.c
@@ -66,7 +66,7 @@ nogui_end_layer (HID_DRAW *hid_draw)
 }
 
 static hidGC
-nogui_make_gc (void)
+nogui_make_gc (HID_DRAW *hid_draw)
 {
   return 0;
 }
diff --git a/src/hid/gcode/gcode.c b/src/hid/gcode/gcode.c
index 9e8b620..c6c749d 100644
--- a/src/hid/gcode/gcode.c
+++ b/src/hid/gcode/gcode.c
@@ -1173,7 +1173,7 @@ gcode_set_layer (HID_DRAW *hid_draw, const char *name, int group, int empty)
 }
 
 static hidGC
-gcode_make_gc (void)
+gcode_make_gc (HID_DRAW *hid_draw)
 {
   hidGC gc = (hidGC) calloc (1, sizeof (struct gcode_gc_struct));
   gcodeGC gcode_gc = (gcodeGC)gc;
diff --git a/src/hid/gerber/gerber.c b/src/hid/gerber/gerber.c
index 707c905..6e4616e 100644
--- a/src/hid/gerber/gerber.c
+++ b/src/hid/gerber/gerber.c
@@ -47,7 +47,7 @@
 static HID_Attribute * gerber_get_export_options (int *n);
 static void gerber_do_export (HID_Attr_Val * options);
 static void gerber_parse_arguments (int *argc, char ***argv);
-static hidGC gerber_make_gc (void);
+static hidGC gerber_make_gc (HID_DRAW *hid_draw);
 static void gerber_destroy_gc (hidGC gc);
 static void gerber_set_color (hidGC gc, const char *name);
 static void gerber_set_line_cap (hidGC gc, EndCapStyle style);
@@ -935,7 +935,7 @@ gerber_set_layer (HID_DRAW *hid_draw, const char *name, int group, int empty)
 }
 
 static hidGC
-gerber_make_gc (void)
+gerber_make_gc (HID_DRAW *hid_draw)
 {
   hidGC gc = (hidGC) calloc (1, sizeof (struct gerber_gc_struct));
   gerberGC gerber_gc = (gerberGC)gc;
diff --git a/src/hid/gtk/gtkhid-gdk.c b/src/hid/gtk/gtkhid-gdk.c
index 332a0a2..0815245 100644
--- a/src/hid/gtk/gtkhid-gdk.c
+++ b/src/hid/gtk/gtkhid-gdk.c
@@ -179,7 +179,7 @@ ghid_destroy_gc (hidGC gc)
 }
 
 hidGC
-ghid_make_gc (void)
+ghid_make_gc (HID_DRAW *hid_draw)
 {
   hidGC gc = (hidGC)g_new0 (struct gtk_gc_struct, 1);
   gtkGC gtk_gc = (gtkGC)gc;
diff --git a/src/hid/gtk/gtkhid-gl.c b/src/hid/gtk/gtkhid-gl.c
index 488154f..279ccc3 100644
--- a/src/hid/gtk/gtkhid-gl.c
+++ b/src/hid/gtk/gtkhid-gl.c
@@ -384,7 +384,7 @@ ghid_destroy_gc (hidGC gc)
 }
 
 hidGC
-ghid_make_gc (void)
+ghid_make_gc (HID_DRAW *hid_draw)
 {
   render_priv *priv = gport->render_priv;
   hidGC gc = (hidGC) g_new0 (struct gtk_gc_struct, 1);
diff --git a/src/hid/gtk/gui.h b/src/hid/gtk/gui.h
index 538e547..32036c8 100644
--- a/src/hid/gtk/gui.h
+++ b/src/hid/gtk/gui.h
@@ -474,8 +474,8 @@ void ghid_pinout_window_show (GHidPort *out, ElementType *Element);
 
 /* gtkhid-gdk.c AND gtkhid-gl.c */
 int ghid_set_layer (HID_DRAW *hid_draw, const char *name, int group, int empty);
-hidGC ghid_make_gc (void);
-void ghid_destroy_gc (hidGC);
+hidGC ghid_make_gc (HID_DRAW *hid_draw);
+void ghid_destroy_gc (hidGC gc);
 void ghid_use_mask (HID_DRAW *hid_draw, enum mask_mode mode);
 void ghid_set_color (hidGC gc, const char *name);
 void ghid_set_line_cap (hidGC gc, EndCapStyle style);
diff --git a/src/hid/lesstif/main.c b/src/hid/lesstif/main.c
index 1e470fb..0b7ced2 100644
--- a/src/hid/lesstif/main.c
+++ b/src/hid/lesstif/main.c
@@ -148,7 +148,7 @@ static bool crosshair_on = true;
 /* ---------------------------------------------------------------------------
  * some local prototypes
  */
-static hidGC lesstif_make_gc (void);
+static hidGC lesstif_make_gc (HID_DRAW *hid_draw);
 
 static void
 ShowCrosshair (bool show)
@@ -1806,7 +1806,7 @@ lesstif_do_export (HID_Attr_Val * options)
   Widget menu;
   Widget work_area_frame;
 
-  crosshair_gc = lesstif_make_gc ();
+  crosshair_gc = lesstif_make_gc (&lesstif_graphics);
 
   n = 0;
   stdarg (XtNwidth, &width);
@@ -3056,7 +3056,7 @@ lesstif_set_layer (HID_DRAW *hid_draw, const char *name, int group, int empty)
 }
 
 static hidGC
-lesstif_make_gc (void)
+lesstif_make_gc (HID_DRAW *hid_draw)
 {
   hidGC gc = (hidGC)calloc (1, sizeof (struct lesstif_gc_struct));
 
diff --git a/src/hid/nelma/nelma.c b/src/hid/nelma/nelma.c
index 755ccbc..f1d912d 100644
--- a/src/hid/nelma/nelma.c
+++ b/src/hid/nelma/nelma.c
@@ -761,7 +761,7 @@ nelma_set_layer (HID_DRAW *hid_draw, const char *name, int group, int empty)
 }
 
 static hidGC 
-nelma_make_gc(void)
+nelma_make_gc (HID_DRAW *hid_draw)
 {
 	hidGC gc = (hidGC) calloc (1, sizeof(struct hid_gc_struct));
 	nelmaGC nelma_gc = (nelmaGC)gc;
diff --git a/src/hid/png/png.c b/src/hid/png/png.c
index 6ccd28d..92f8661 100644
--- a/src/hid/png/png.c
+++ b/src/hid/png/png.c
@@ -1348,7 +1348,7 @@ png_set_layer (HID_DRAW *hid_draw, const char *name, int group, int empty)
 
 
 static hidGC
-png_make_gc (void)
+png_make_gc (HID_DRAW *hid_draw)
 {
   hidGC gc = (hidGC) calloc (1, sizeof (struct png_gc_struct));
   pngGC png_gc = (pngGC)gc;
diff --git a/src/hid/ps/eps.c b/src/hid/ps/eps.c
index e7e964d..4b192cc 100644
--- a/src/hid/ps/eps.c
+++ b/src/hid/ps/eps.c
@@ -33,8 +33,6 @@
 static HID_Attribute * eps_get_export_options (int *n);
 static void eps_do_export (HID_Attr_Val * options);
 static void eps_parse_arguments (int *argc, char ***argv);
-static hidGC eps_make_gc (void);
-static void eps_destroy_gc (hidGC gc);
 static void eps_set_color (hidGC gc, const char *name);
 static void eps_set_line_cap (hidGC gc, EndCapStyle style);
 static void eps_set_line_width (hidGC gc, Coord width);
@@ -418,7 +416,7 @@ eps_set_layer (HID_DRAW *hid_draw, const char *name, int group, int empty)
 }
 
 static hidGC
-eps_make_gc (void)
+eps_make_gc (HID_DRAW *hid_draw)
 {
   hidGC gc = (hidGC) calloc (1, sizeof (struct eps_gc_struct));
   epsGC eps_gc = (epsGC)gc;
diff --git a/src/hid/ps/ps.c b/src/hid/ps/ps.c
index d911315..2f21bee 100644
--- a/src/hid/ps/ps.c
+++ b/src/hid/ps/ps.c
@@ -1015,7 +1015,7 @@ ps_set_layer (HID_DRAW *hid_draw, const char *name, int group, int empty)
 }
 
 static hidGC
-ps_make_gc (void)
+ps_make_gc (HID_DRAW *hid_draw)
 {
   hidGC gc = (hidGC) calloc (1, sizeof (struct ps_gc_struct));
   psGC ps_gc = (psGC)gc;
diff --git a/src/hid_draw.h b/src/hid_draw.h
index d59b0da..4096a26 100644
--- a/src/hid_draw.h
+++ b/src/hid_draw.h
@@ -31,7 +31,7 @@ typedef struct hid_draw_class_st
      and 90 being "up" (positive Y).  */
 
   /* Make an empty graphics context.  */
-  hidGC (*make_gc) (void);
+  hidGC (*make_gc) (HID_DRAW *hid_draw);
   void (*destroy_gc) (hidGC gc);
   void (*use_mask) (HID_DRAW *hid_draw, enum mask_mode mode);
 
@@ -141,7 +141,7 @@ hid_draw_end_layer (HID_DRAW *hid_draw)
 inline hidGC
 hid_draw_make_gc (HID_DRAW *hid_draw)
 {
-  return hid_draw->klass->make_gc ();
+  return hid_draw->klass->make_gc (hid_draw);
 }
 
 inline void
