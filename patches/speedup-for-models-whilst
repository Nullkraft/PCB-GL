Bottom: ac2b9f7304290a276bdc25dadbaa01c42e8f3d17
Top:    4677128c654542650d457a25456e4d4ec953d7d4
Author: Peter Clifton <peter@clifton-electronics.co.uk>
Date:   2015-04-12 17:08:54 +0100

Speedup for models whilst debugging


---

diff --git a/src/hid/step/assembly.cpp b/src/hid/step/assembly.cpp
index 1cc4a3f..87a2a18 100644
--- a/src/hid/step/assembly.cpp
+++ b/src/hid/step/assembly.cpp
@@ -708,7 +708,12 @@ append_model_from_file (Registry *registry,
 //  int file_increment = ( int )( ( ceil( ( max_existing_file_id + 99.0 ) / 1000.0 ) + 1.0 ) * 1000.0 ); /* XXX: RELYING ON SCL NOT CHANGING */
 //  std::cout << "INFO: Expecting a to add " << file_increment << " to entity names" << std::endl;
 
+#if 1
   STEPfile sfile = STEPfile (*registry, *instance_list, "", false);
+#else
+  STEPfile *sfilep = new STEPfile (*registry, *instance_list, "", false);
+  STEPfile &sfile = *sfilep; /* Let us deliberately leak STEPfile for a performance test */
+#endif
 
   // XXX: This appears to throw exceptions from std::ios_base if the file doesn't exist
   try
diff --git a/src/polygon.c b/src/polygon.c
index 841e1ea..245b9bb 100644
--- a/src/polygon.c
+++ b/src/polygon.c
@@ -2111,6 +2111,8 @@ pv_outline_callback (const BoxType * b, void *cl)
     }
   else
     {
+      /* NOT FROM ELEMENT, DROP HOLE */
+      return 1;
       feature_name = STRDUP(pv->Name);
     }
 
diff --git a/src/polygon.h b/src/polygon.h
index 3737f35..767c919 100644
--- a/src/polygon.h
+++ b/src/polygon.h
@@ -34,7 +34,8 @@
 
 /* Implementation constants */
 
-#define POLY_CIRC_SEGS 40
+#define POLY_CIRC_SEGS 8
+//#define POLY_CIRC_SEGS 40
 #define POLY_CIRC_SEGS_F ((float)POLY_CIRC_SEGS)
 
 /* adjustment to make the segments outline the circle rather than connect
diff --git a/src/polygon1.c b/src/polygon1.c
index 04518c3..76e989d 100644
--- a/src/polygon1.c
+++ b/src/polygon1.c
@@ -1564,7 +1564,7 @@ SubJ_Rule (char p, VNODE * v, DIRECTION * cdir)
   // XXX: FIXME: NO cdir set for this case, e.g. possible no initialisation
   if (*cdir == UNINITIALISED)
     {
-      printf ("UNINITIALISED directin in SubJ_Rule\n");
+//      printf ("UNINITIALISED directin in SubJ_Rule\n");
       if (p == 'A')
 	*cdir = FORW;
       else
