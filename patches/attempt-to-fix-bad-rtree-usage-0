Bottom: 52d92b7cf4a46772e5d1095fcc0c85369fab850c
Top:    a4258180fdfe2f76f2fd781e149b216b920688e9
Author: Peter Clifton <peter@clifton-electronics.co.uk>
Date:   2016-02-13 22:05:14 +0000

Attempt to fix bad rtree usage in polygon code

We need to delete the rtree entry before updating any bounds, otherwise
bad things might happen (and certainly, with NDEBUG undefined, we may
get asserts firing in rtree.c)

To avoid computational expense deleting and removing from the rtree in
the general case (where we wouldn't expect bounds to change), a new
test function has been added which determines whether the contour bounds
will be updated or not.


---

diff --git a/src/polygon1.c b/src/polygon1.c
index 802d713..ce70f22 100644
--- a/src/polygon1.c
+++ b/src/polygon1.c
@@ -748,6 +748,15 @@ add_descriptors (PLINE * pl, char poly, CVCList * list)
   return list;
 }
 
+static bool
+cntrbox_check (PLINE * c, Vector p)
+{
+  return (p[0]     < c->xmin ||
+          p[0] + 1 > c->xmax ||
+          p[1]     < c->ymin ||
+          p[1] + 1 > c->ymax);
+}
+
 static inline void
 cntrbox_adjust (PLINE * c, Vector p)
 {
@@ -1750,7 +1759,15 @@ intersect_impl (jmp_buf * jb, POLYAREA * b, POLYAREA * a, int add)
         }
 
 #warning NEED AN UPDATE FOR ROUND CONTOURS HERE?
-      cntrbox_adjust (task->node_seg->p, task->new_node->point); /* XXX: DOES THIS WORK / MATTER FOR ARC SEGMENT INSERTIONS? */
+      if (cntrbox_check (task->node_seg->p, task->new_node->point))
+        {
+          /* First delete the contour from the contour r-tree, as its bounds
+           * may be adjusted whilst inserting nodes
+           */
+          r_delete_entry (b->contour_tree, (const BoxType *) task->node_seg->p);
+          cntrbox_adjust (task->node_seg->p, task->new_node->point); /* XXX: DOES THIS WORK / MATTER FOR ARC SEGMENT INSERTIONS? */
+          r_insert_entry (b->contour_tree, (const BoxType *) task->node_seg->p, 0);
+        }
       if (adjust_tree (task->node_seg->p->tree, task->node_seg))
 	assert (0); /* XXX: Memory allocation failure */
