Bottom: b59c247482a6315b8d9b8327573f4906561ef226
Top:    a8d0b778700f97befbe95b7b9f681e752fd7b927
Author: Peter Clifton <peter@clifton-electronics.co.uk>
Date:   2016-01-09 17:30:19 +0000

Introduce hacky code to switch cursor when over a line we might drag


---

diff --git a/src/crosshair.c b/src/crosshair.c
index 49fab31..1129410 100644
--- a/src/crosshair.c
+++ b/src/crosshair.c
@@ -1092,11 +1092,66 @@ FitCrosshairIntoGrid (Coord X, Coord Y)
       ans = SearchObjectByLocation (LINEPOINT_TYPE | ARCPOINT_TYPE,
                                     &ptr1, &ptr2, &ptr3,
                                     Crosshair.X, Crosshair.Y, PCB->Grid / 2);
-      if (ans == NO_TYPE)
-        hid_action("PointCursor");
-      else if (!TEST_FLAG(SELECTEDFLAG, (LineType *)ptr2))
-        hid_actionl("PointCursor","True", NULL);
+      if (ans != NO_TYPE && !TEST_FLAG(SELECTEDFLAG, (LineType *)ptr2)) {
+        if (gui->endpoint_cursor != NULL)
+          gui->endpoint_cursor ();
+        goto common_tail;
+      }
+
+      if (TEST_FLAG (RUBBERBANDFLAG, PCB))
+        {
+
+          ans = SearchObjectByLocation (LINE_TYPE,
+                                        &ptr1, &ptr2, &ptr3,
+                                        Crosshair.X, Crosshair.Y, PCB->Grid / 2);
+          if (ans != NO_TYPE) {
+            double angle;
+            int octant;
+            int dir;
+            int allowed_directions = 0;
+            LineType *line = ptr2;
+
+            /* XXX: FIX THIS FOR DEGENERATE (POINT) LINES */
+            angle = atan2 (-(line->Point2.Y - line->Point1.Y),
+                           line->Point2.X - line->Point1.X);
+    //      octant = nearbyint (angle / M_PI * 4.) * M_PI / 4.; /* Round to multiples of 45 degrees */
+            octant = lrint (angle / M_PI * 4.); /* Lies between -4 and 4 */
+            dir = (octant + 8) % 4;
+
+            /* Assume constraints are simple, and that we don't blank off motion directions,
+             * this means the user can drag the line perpendicular to its axis
+             */
+
+            switch (dir) {
+              case 0:
+                allowed_directions |= ALLOWED_DIR_90_DEGREES;
+                allowed_directions |= ALLOWED_DIR_270_DEGREES;
+                break;
+              case 1:
+                allowed_directions |= ALLOWED_DIR_135_DEGREES;
+                allowed_directions |= ALLOWED_DIR_315_DEGREES;
+                break;
+              case 2:
+                allowed_directions |= ALLOWED_DIR_0_DEGREES;
+                allowed_directions |= ALLOWED_DIR_180_DEGREES;
+                break;
+              case 3:
+                allowed_directions |= ALLOWED_DIR_45_DEGREES;
+                allowed_directions |= ALLOWED_DIR_225_DEGREES;
+                break;
+            }
+
+            if (gui->grip_cursor != NULL)
+              gui->grip_cursor (allowed_directions);
+            goto common_tail;
+          }
+        }
+
     }
+  if (gui->normal_cursor != NULL)
+    gui->normal_cursor ();
+
+common_tail:
 
   if (Settings.Mode == LINE_MODE
       && Crosshair.AttachedLine.State != STATE_FIRST
diff --git a/src/crosshair.h b/src/crosshair.h
index a037a10..0c11414 100644
--- a/src/crosshair.h
+++ b/src/crosshair.h
@@ -39,6 +39,17 @@
 #define	STATE_SECOND	1
 #define	STATE_THIRD		2
 
+#define ALLOWED_DIR_0_DEGREES   (1 << 0)
+#define ALLOWED_DIR_45_DEGREES  (1 << 1)
+#define ALLOWED_DIR_90_DEGREES  (1 << 2)
+#define ALLOWED_DIR_135_DEGREES (1 << 3)
+#define ALLOWED_DIR_180_DEGREES (1 << 4)
+#define ALLOWED_DIR_225_DEGREES (1 << 5)
+#define ALLOWED_DIR_270_DEGREES (1 << 6)
+#define ALLOWED_DIR_315_DEGREES (1 << 7)
+
+
+
 Coord GridFit (Coord x, Coord grid_spacing, Coord grid_offset);
 void notify_crosshair_change (bool changes_complete);
 void notify_mark_change (bool changes_complete);
diff --git a/src/hid.h b/src/hid.h
index 7943949..5ecf529 100644
--- a/src/hid.h
+++ b/src/hid.h
@@ -492,6 +492,10 @@ typedef enum
 
     /* Notification to the GUI that the PCB file has been renamed. */
     void (*notify_filename_changed) (void);
+
+    void (*normal_cursor) (void);
+    void (*endpoint_cursor) (void);
+    void (*grip_cursor) (int allowed_directions);
   };
 
 /* Call this as soon as possible from main().  No other HID calls are
diff --git a/src/hid/gtk/gtkhid-main.c b/src/hid/gtk/gtkhid-main.c
index 6c6c076..90050c3 100644
--- a/src/hid/gtk/gtkhid-main.c
+++ b/src/hid/gtk/gtkhid-main.c
@@ -1137,6 +1137,16 @@ static int PointCursor (int argc, char **argv, Coord x, Coord y)
   return 0;
 }
 
+static void ghid_endpoint_cursor (void)
+{
+  ghid_point_cursor ();
+}
+
+static void ghid_normal_cursor (void)
+{
+  ghid_mode_cursor (Settings.Mode);
+}
+
 /* ---------------------------------------------------------------------- */
 
 static int
@@ -2183,6 +2193,10 @@ hid_gtk_init ()
   ghid_hid.notify_save_pcb          = ghid_notify_save_pcb;
   ghid_hid.notify_filename_changed  = ghid_notify_filename_changed;
 
+  ghid_hid.normal_cursor            = ghid_normal_cursor;
+  ghid_hid.endpoint_cursor          = ghid_endpoint_cursor;
+  ghid_hid.grip_cursor              = ghid_grip_cursor;
+
   common_nogui_graphics_class_init (&ghid_graphics_class);
   common_draw_helpers_class_init (&ghid_graphics_class);
 
diff --git a/src/hid/gtk/gui-misc.c b/src/hid/gtk/gui-misc.c
index f739d5e..0af6a6d 100644
--- a/src/hid/gtk/gui-misc.c
+++ b/src/hid/gtk/gui-misc.c
@@ -143,6 +143,29 @@ ghid_watch_cursor (void)
     oldCursor = tmp;
 }
 
+/* Hacky translation between allowed_direction and a cursor.. TODO: Make some custom cursors */
+void
+ghid_grip_cursor (int allowed_directions)
+{
+  if      ((allowed_directions & ALLOWED_DIR_0_DEGREES  ||
+            allowed_directions & ALLOWED_DIR_180_DEGREES) &&
+           (allowed_directions & ALLOWED_DIR_90_DEGREES ||
+            allowed_directions & ALLOWED_DIR_270_DEGREES))
+    gport_set_cursor (GDK_FLEUR);
+  else if (allowed_directions & ALLOWED_DIR_0_DEGREES ||
+           allowed_directions & ALLOWED_DIR_180_DEGREES)
+    gport_set_cursor (GDK_SB_H_DOUBLE_ARROW);
+  else if (allowed_directions & ALLOWED_DIR_90_DEGREES ||
+           allowed_directions & ALLOWED_DIR_270_DEGREES)
+    gport_set_cursor (GDK_SB_V_DOUBLE_ARROW);
+  else if (allowed_directions & ALLOWED_DIR_45_DEGREES ||
+           allowed_directions & ALLOWED_DIR_225_DEGREES)
+    gport_set_cursor (GDK_TOP_RIGHT_CORNER);
+  else if (allowed_directions & ALLOWED_DIR_135_DEGREES ||
+           allowed_directions & ALLOWED_DIR_315_DEGREES)
+    gport_set_cursor (GDK_TOP_LEFT_CORNER);
+}
+
 void
 ghid_mode_cursor (int Mode)
 {
diff --git a/src/hid/gtk/gui.h b/src/hid/gtk/gui.h
index 202b5d4..e37fd26 100644
--- a/src/hid/gtk/gui.h
+++ b/src/hid/gtk/gui.h
@@ -269,6 +269,7 @@ void ghid_cursor_position_relative_label_set_text (gchar * text);
 void ghid_hand_cursor (void);
 void ghid_point_cursor (void);
 void ghid_watch_cursor (void);
+void ghid_grip_cursor (int allowed_directions);
 void ghid_mode_cursor (gint mode);
 void ghid_corner_cursor (void);
 void ghid_restore_cursor (void);
