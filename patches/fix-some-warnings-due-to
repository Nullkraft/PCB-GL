Bottom: 911cffe376b5a9fda7d045dc7eb441c6fd741588
Top:    77042c85570cd022e3acfb8c96bfe4a2c6472f8a
Author: Peter Clifton <peter@clifton-electronics.co.uk>
Date:   2016-03-12 16:15:30 +0000

Fix some warnings due to -Wextra and -pedantic


---

diff --git a/src/global.h b/src/global.h
index a050b98..90de27c 100644
--- a/src/global.h
+++ b/src/global.h
@@ -166,7 +166,7 @@ typedef struct
 #define ANYOBJECTFIELDS			\
 	BoxType		BoundingBox;	\
 	long int	ID;		\
-	FlagType	Flags;		\
+	FlagType	Flags		\
 	//	struct LibraryEntryType *net
 
 /* Lines, pads, and rats all use this so they can be cross-cast.  */
diff --git a/src/hid/gtk/ghid-cell-renderer-visibility.c b/src/hid/gtk/ghid-cell-renderer-visibility.c
index 7e540a9..7d56685 100644
--- a/src/hid/gtk/ghid-cell-renderer-visibility.c
+++ b/src/hid/gtk/ghid-cell-renderer-visibility.c
@@ -86,7 +86,7 @@ static void
 ghid_cell_renderer_visibility_render (GtkCellRenderer      *cell,
                                       GdkWindow            *window,
                                       GtkWidget            *widget,
-                                      GdkRectangle         *background_area,
+                        G_GNUC_UNUSED GdkRectangle         *background_area,
                                       GdkRectangle         *cell_area,
                                       GdkRectangle         *expose_area,
                                       GtkCellRendererState  flags)
@@ -177,12 +177,12 @@ ghid_cell_renderer_visibility_render (GtkCellRenderer      *cell,
 /*! \brief Toggless the swatch */
 static gint
 ghid_cell_renderer_visibility_activate (GtkCellRenderer      *cell,
-                                        GdkEvent             *event,
-                                        GtkWidget            *widget,
+                          G_GNUC_UNUSED GdkEvent             *event,
+                          G_GNUC_UNUSED GtkWidget            *widget,
                                         const gchar          *path,
-                                        GdkRectangle         *background_area,
-                                        GdkRectangle         *cell_area,
-                                        GtkCellRendererState  flags)
+                          G_GNUC_UNUSED GdkRectangle         *background_area,
+                          G_GNUC_UNUSED GdkRectangle         *cell_area,
+                          G_GNUC_UNUSED GtkCellRendererState  flags)
 {
   g_signal_emit (cell, toggle_cell_signals[TOGGLED], 0, path);
   return TRUE;
@@ -193,7 +193,7 @@ static void
 ghid_cell_renderer_visibility_get_property (GObject     *object,
                                             guint        param_id,
                                             GValue      *value,
-                                            GParamSpec  *pspec)
+                              G_GNUC_UNUSED GParamSpec  *pspec)
 {
   GHidCellRendererVisibility *pcb_cell =
     GHID_CELL_RENDERER_VISIBILITY (object);
@@ -211,9 +211,9 @@ ghid_cell_renderer_visibility_get_property (GObject     *object,
 
 static void
 ghid_cell_renderer_visibility_set_property (GObject      *object,
-                                               guint         param_id,
-                                               const GValue *value,
-                                               GParamSpec   *pspec)
+                                            guint         param_id,
+                                            const GValue *value,
+                              G_GNUC_UNUSED GParamSpec   *pspec)
 {
   GHidCellRendererVisibility *pcb_cell =
     GHID_CELL_RENDERER_VISIBILITY (object);
@@ -303,6 +303,7 @@ ghid_cell_renderer_visibility_get_type (void)
 	sizeof (GHidCellRendererVisibility),
 	0,    /* n_preallocs */
 	(GInstanceInitFunc) ghid_cell_renderer_visibility_init,
+        NULL  /* value_table */
       };
 
       ls_type = g_type_register_static (GTK_TYPE_CELL_RENDERER,
diff --git a/src/hid/gtk/ghid-coord-entry.c b/src/hid/gtk/ghid-coord-entry.c
index a49ceca..71183a0 100644
--- a/src/hid/gtk/ghid-coord-entry.c
+++ b/src/hid/gtk/ghid-coord-entry.c
@@ -59,7 +59,9 @@ menu_item_activate_cb (GtkMenuItem *item, GHidCoordEntry *ce)
 
 /*! \brief Callback for context menu creation */
 static void
-ghid_coord_entry_popup_cb (GHidCoordEntry *ce, GtkMenu *menu, gpointer data)
+ghid_coord_entry_popup_cb (GHidCoordEntry *ce,
+                           GtkMenu *menu,
+             G_GNUC_UNUSED gpointer data)
 {
   int i, n;
   const Unit *unit_list;
@@ -92,7 +94,8 @@ ghid_coord_entry_popup_cb (GHidCoordEntry *ce, GtkMenu *menu, gpointer data)
 
 /*! \brief Callback for user output */
 static gboolean
-ghid_coord_entry_output_cb (GHidCoordEntry *ce, gpointer data)
+ghid_coord_entry_output_cb (GHidCoordEntry *ce,
+              G_GNUC_UNUSED gpointer data)
 {
   GtkAdjustment *adj = gtk_spin_button_get_adjustment (GTK_SPIN_BUTTON (ce));
   double value = gtk_adjustment_get_value (adj);
@@ -107,7 +110,8 @@ ghid_coord_entry_output_cb (GHidCoordEntry *ce, gpointer data)
 
 /*! \brief Callback for user input */
 static gboolean
-ghid_coord_text_changed_cb (GHidCoordEntry *entry, gpointer data)
+ghid_coord_text_changed_cb (GHidCoordEntry *entry,
+              G_GNUC_UNUSED gpointer data)
 {
   const char *text;
   char *suffix;
@@ -225,6 +229,7 @@ ghid_coord_entry_get_type (void)
 	sizeof (GHidCoordEntry),
 	0,    /* n_preallocs */
 	(GInstanceInitFunc) ghid_coord_entry_init,
+        NULL  /* value_table */
       };
 
       ce_type = g_type_register_static (GTK_TYPE_SPIN_BUTTON,
diff --git a/src/hid/gtk/ghid-layer-selector.c b/src/hid/gtk/ghid-layer-selector.c
index 7e28028..41b506f 100644
--- a/src/hid/gtk/ghid-layer-selector.c
+++ b/src/hid/gtk/ghid-layer-selector.c
@@ -195,8 +195,9 @@ toggle_visibility (GHidLayerSelector *ls, GtkTreeIter *iter, gboolean emit)
 
 /*! \brief Decide if a GtkListStore entry is a layer or separator */
 static gboolean
-tree_view_separator_func (GtkTreeModel *model, GtkTreeIter *iter,
-                          gpointer data)
+tree_view_separator_func (GtkTreeModel *model,
+                          GtkTreeIter *iter,
+            G_GNUC_UNUSED gpointer data)
 {
   gboolean ret_val;
   gtk_tree_model_get (model, iter, SEPARATOR_COL, &ret_val, -1);
@@ -205,8 +206,11 @@ tree_view_separator_func (GtkTreeModel *model, GtkTreeIter *iter,
 
 /*! \brief Decide if a GtkListStore entry may be selected */
 static gboolean
-tree_selection_func (GtkTreeSelection *selection, GtkTreeModel *model,
-                     GtkTreePath *path, gboolean selected, gpointer data)
+tree_selection_func (G_GNUC_UNUSED GtkTreeSelection *selection,
+                     GtkTreeModel *model,
+                     GtkTreePath *path,
+                     G_GNUC_UNUSED gboolean selected,
+                     G_GNUC_UNUSED gpointer data)
 {
   GtkTreeIter iter;
 
@@ -284,10 +288,10 @@ selection_changed_cb (GtkTreeSelection *selection, GHidLayerSelector *ls)
 
 /*! \brief Callback for when a layer name has been edited  */
 static void
-layer_name_editing_started_cb (GtkCellRenderer *renderer,
-                               GtkCellEditable *editable,
-                               gchar           *path,
-                               gpointer         user_data)
+layer_name_editing_started_cb (G_GNUC_UNUSED GtkCellRenderer *renderer,
+                               G_GNUC_UNUSED GtkCellEditable *editable,
+                               G_GNUC_UNUSED gchar           *path,
+                               G_GNUC_UNUSED gpointer         user_data)
 {
   /* When editing begins, we need to detach PCB's accelerators
    * so they don't steal all the user's keystrokes.
@@ -302,8 +306,8 @@ layer_name_editing_started_cb (GtkCellRenderer *renderer,
 
 /*! \brief Callback for when layer name editing has been canceled */
 static void
-layer_name_editing_canceled_cb (GtkCellRenderer *renderer,
-                                 gpointer         user_data)
+layer_name_editing_canceled_cb (G_GNUC_UNUSED GtkCellRenderer *renderer,
+                                G_GNUC_UNUSED gpointer         user_data)
 {
   /* Put PCB's accelerators back.
    *
@@ -316,7 +320,7 @@ layer_name_editing_canceled_cb (GtkCellRenderer *renderer,
 
 /*! \brief Callback for when a layer name has been edited  */
 static void
-layer_name_edited_cb (GtkCellRendererText *renderer,
+layer_name_edited_cb (G_GNUC_UNUSED GtkCellRendererText *renderer,
                       gchar               *path,
                       gchar               *new_text,
                       gpointer             user_data)
@@ -539,6 +543,7 @@ ghid_layer_selector_get_type (void)
 	sizeof (GHidLayerSelector),
 	0,    /* n_preallocs */
 	(GInstanceInitFunc) ghid_layer_selector_init,
+	NULL  /* value_table */
       };
 
       ls_type = g_type_register_static (GTK_TYPE_TREE_VIEW,
@@ -829,8 +834,10 @@ struct layer_data {
 
 /*! \brief used internally */
 static gboolean
-toggle_foreach_func (GtkTreeModel *model, GtkTreePath *path,
-                     GtkTreeIter *iter, gpointer user_data)
+toggle_foreach_func (GtkTreeModel *model,
+                     G_GNUC_UNUSED GtkTreePath *path,
+                     GtkTreeIter *iter,
+                     gpointer user_data)
 {
   struct layer_data *data = (struct layer_data *) user_data;
   gint id;
diff --git a/src/hid/gtk/gtkhid-main.c b/src/hid/gtk/gtkhid-main.c
index 763f493..e526875 100644
--- a/src/hid/gtk/gtkhid-main.c
+++ b/src/hid/gtk/gtkhid-main.c
@@ -234,7 +234,8 @@ Zoom (int argc, char **argv, Coord x, Coord y)
 /* ------------------------------------------------------------ */
 
 void
-ghid_calibrate (double xval, double yval)
+ghid_calibrate (G_GNUC_UNUSED double xval,
+                G_GNUC_UNUSED double yval)
 {
   printf (_("ghid_calibrate() -- not implemented\n"));
 }
@@ -417,7 +418,9 @@ GuiWatch;
   /* We need a wrapper around the hid file watch to pass the correct flags
    */
 static gboolean
-ghid_watch (GIOChannel *source, GIOCondition condition, gpointer data)
+ghid_watch (G_GNUC_UNUSED GIOChannel *source,
+            GIOCondition condition,
+            gpointer data)
 {
   unsigned int pcb_condition = 0;
   hidval x;
@@ -499,7 +502,7 @@ static GSourceFuncs ghid_block_hook_funcs = {
 
 static gboolean
 ghid_block_hook_prepare (GSource *source,
-                         gint    *timeout)
+           G_GNUC_UNUSED gint    *timeout)
 {
   hidval data = ((BlockHookSource *)source)->user_data;
   ((BlockHookSource *)source)->func( data );
@@ -507,15 +510,15 @@ ghid_block_hook_prepare (GSource *source,
 }
 
 static gboolean
-ghid_block_hook_check (GSource *source)
+ghid_block_hook_check (G_GNUC_UNUSED GSource *source)
 {
   return FALSE;
 }
 
 static gboolean
-ghid_block_hook_dispatch (GSource     *source,
-                          GSourceFunc  callback,
-                          gpointer     user_data)
+ghid_block_hook_dispatch (G_GNUC_UNUSED GSource     *source,
+                          G_GNUC_UNUSED GSourceFunc  callback,
+                          G_GNUC_UNUSED gpointer     user_data)
 {
   return FALSE;
 }
@@ -677,8 +680,8 @@ struct progress_dialog
 };
 
 static void
-run_response_handler (GtkDialog *dialog,
-                      gint response_id,
+run_response_handler (G_GNUC_UNUSED GtkDialog *dialog,
+                       gint response_id,
                       gpointer data)
 {
   struct progress_dialog *pd = data;
@@ -687,8 +690,8 @@ run_response_handler (GtkDialog *dialog,
 }
 
 static gint
-run_delete_handler (GtkDialog *dialog,
-                    GdkEventAny *event,
+run_delete_handler (G_GNUC_UNUSED GtkDialog *dialog,
+                    G_GNUC_UNUSED GdkEventAny *event,
                     gpointer data)
 {
   struct progress_dialog *pd = data;
@@ -699,7 +702,8 @@ run_delete_handler (GtkDialog *dialog,
 }
 
 static void
-run_destroy_handler (GtkDialog *dialog, gpointer data)
+run_destroy_handler (G_GNUC_UNUSED GtkDialog *dialog,
+                     gpointer data)
 {
   struct progress_dialog *pd = data;
 
@@ -953,7 +957,8 @@ ghid_attributes_revert ()
 }
 
 static void
-attributes_delete_callback (GtkWidget *w, void *v)
+attributes_delete_callback (G_GNUC_UNUSED GtkWidget *w,
+                            void *v)
 {
   int i, n;
 
@@ -1098,7 +1103,10 @@ This just pops up a dialog telling the user which version of
 
 
 static int
-About (int argc, char **argv, Coord x, Coord y)
+About (G_GNUC_UNUSED int argc,
+       G_GNUC_UNUSED char **argv,
+       G_GNUC_UNUSED Coord x,
+       G_GNUC_UNUSED Coord y)
 {
   ghid_dialog_about ();
   return 0;
@@ -1118,14 +1126,20 @@ Prompts the user for a coordinate, if one is not already selected.
 %end-doc */
 
 static int
-GetXY (int argc, char **argv, Coord x, Coord y)
+GetXY (G_GNUC_UNUSED int argc,
+       G_GNUC_UNUSED char **argv,
+       G_GNUC_UNUSED Coord x,
+       G_GNUC_UNUSED Coord y)
 {
   return 0;
 }
 
 /* ---------------------------------------------------------------------- */
 
-static int PointCursor (int argc, char **argv, Coord x, Coord y)
+static int PointCursor (int argc,
+                        G_GNUC_UNUSED char **argv,
+                        G_GNUC_UNUSED Coord x,
+                        G_GNUC_UNUSED Coord y)
 {
   if (!ghidgui)
     return 0;
@@ -1150,7 +1164,10 @@ static void ghid_normal_cursor (void)
 /* ---------------------------------------------------------------------- */
 
 static int
-RouteStylesChanged (int argc, char **argv, Coord x, Coord y)
+RouteStylesChanged (G_GNUC_UNUSED int argc,
+                    G_GNUC_UNUSED char **argv,
+                    G_GNUC_UNUSED Coord x,
+                    G_GNUC_UNUSED Coord y)
 {
   if (!ghidgui || !ghidgui->route_style_selector)
     return 0;
@@ -1166,7 +1183,10 @@ RouteStylesChanged (int argc, char **argv, Coord x, Coord y)
 /* ---------------------------------------------------------------------- */
 
 int
-PCBChanged (int argc, char **argv, Coord x, Coord y)
+PCBChanged (G_GNUC_UNUSED int argc,
+            G_GNUC_UNUSED char **argv,
+            G_GNUC_UNUSED Coord x,
+            G_GNUC_UNUSED Coord y)
 {
   if (!ghidgui)
     return 0;
@@ -1194,7 +1214,10 @@ PCBChanged (int argc, char **argv, Coord x, Coord y)
 /* ---------------------------------------------------------------------- */
 
 static int
-LayerGroupsChanged (int argc, char **argv, Coord x, Coord y)
+LayerGroupsChanged (G_GNUC_UNUSED int argc,
+                    G_GNUC_UNUSED char **argv,
+                    G_GNUC_UNUSED Coord x,
+                    G_GNUC_UNUSED Coord y)
 {
   printf (_("LayerGroupsChanged -- not implemented\n"));
   return 0;
@@ -1203,7 +1226,10 @@ LayerGroupsChanged (int argc, char **argv, Coord x, Coord y)
 /* ---------------------------------------------------------------------- */
 
 static int
-LibraryChanged (int argc, char **argv, Coord x, Coord y)
+LibraryChanged (G_GNUC_UNUSED int argc,
+                G_GNUC_UNUSED char **argv,
+                G_GNUC_UNUSED Coord x,
+                G_GNUC_UNUSED Coord y)
 {
   /* No need to show the library window every time it changes...
    *  ghid_library_window_show (&ghid_port, FALSE);
@@ -1214,7 +1240,10 @@ LibraryChanged (int argc, char **argv, Coord x, Coord y)
 /* ---------------------------------------------------------------------- */
 
 static int
-Command (int argc, char **argv, Coord x, Coord y)
+Command (G_GNUC_UNUSED int argc,
+         G_GNUC_UNUSED char **argv,
+         G_GNUC_UNUSED Coord x,
+         G_GNUC_UNUSED Coord y)
 {
   ghid_handle_user_command (TRUE);
   return 0;
@@ -1223,7 +1252,10 @@ Command (int argc, char **argv, Coord x, Coord y)
 /* ---------------------------------------------------------------------- */
 
 static int
-Load (int argc, char **argv, Coord x, Coord y)
+Load (int argc,
+      char **argv,
+      G_GNUC_UNUSED Coord x,
+      G_GNUC_UNUSED Coord y)
 {
   char *function;
   char *name = NULL;
@@ -1266,7 +1298,7 @@ Load (int argc, char **argv, Coord x, Coord y)
   if (name)
     {
       if (Settings.verbose)
-      	fprintf (stderr, "%s:  Calling LoadFrom(%s, %s)\n", __FUNCTION__,
+      	fprintf (stderr, "%s:  Calling LoadFrom(%s, %s)\n", G_STRFUNC,
 		 function, name);
       hid_actionl ("LoadFrom", function, name, NULL);
       g_free (name);
@@ -1297,7 +1329,10 @@ called with that filename.
 %end-doc */
 
 static int
-Save (int argc, char **argv, Coord x, Coord y)
+Save (int argc,
+      char **argv,
+      G_GNUC_UNUSED Coord x,
+      G_GNUC_UNUSED Coord y)
 {
   char *function;
   char *name;
@@ -1327,7 +1362,7 @@ Save (int argc, char **argv, Coord x, Coord y)
     {
       if (Settings.verbose)
 	fprintf (stderr, "%s:  Calling SaveTo(%s, %s)\n", 
-		 __FUNCTION__, function, name);
+		 G_STRFUNC, function, name);
       
       if (strcasecmp (function, "PasteBuffer") == 0)
 	hid_actionl ("PasteBuffer", "Save", name, NULL);
@@ -1396,7 +1431,10 @@ side'' of the board.
 
 
 static int
-SwapSides (int argc, char **argv, Coord x, Coord y)
+SwapSides (int argc,
+           char **argv,
+           G_GNUC_UNUSED Coord x,
+           G_GNUC_UNUSED Coord y)
 {
   int active_group = GetLayerGroupNumberByNumber (LayerStack[0]);
   int top_group = GetLayerGroupNumberBySide (TOP_SIDE);
@@ -1460,7 +1498,10 @@ options, and print the layout.
 %end-doc */
 
 static int
-Print (int argc, char **argv, Coord x, Coord y)
+Print (G_GNUC_UNUSED int argc,
+       G_GNUC_UNUSED char **argv,
+       G_GNUC_UNUSED Coord x,
+       G_GNUC_UNUSED Coord y)
 {
   HID **hids;
   int i;
@@ -1496,11 +1537,11 @@ Print (int argc, char **argv, Coord x, Coord y)
 static HID_Attribute
 printer_calibrate_attrs[] = {
   {N_("Enter Values here:"), "",
-   HID_Label, 0, 0, {0, 0, 0}, 0, 0},
+   HID_Label, 0, 0, {0, 0, 0, 0}, 0, 0, 0},
   {N_("x-calibration"), N_("X scale for calibrating your printer"),
-   HID_Real, 0.5, 25, {0, 0, 1.00}, 0, 0},
+   HID_Real, 0.5, 25, {0, 0, 1.00, 0}, 0, 0, 0},
   {N_("y-calibration"), N_("Y scale for calibrating your printer"),
-   HID_Real, 0.5, 25, {0, 0, 1.00}, 0, 0}
+   HID_Real, 0.5, 25, {0, 0, 1.00, 0}, 0, 0, 0}
 };
 static HID_Attr_Val printer_calibrate_values[3];
 
@@ -1518,7 +1559,10 @@ the measurements in, so that future printouts will be more precise.
 %end-doc */
 
 static int
-PrintCalibrate (int argc, char **argv, Coord x, Coord y)
+PrintCalibrate (G_GNUC_UNUSED int argc,
+                G_GNUC_UNUSED char **argv,
+                G_GNUC_UNUSED Coord x,
+                G_GNUC_UNUSED Coord y)
 {
   HID *printer = hid_find_printer ();
   printer->calibrate (0.0, 0.0);
@@ -1536,7 +1580,10 @@ PrintCalibrate (int argc, char **argv, Coord x, Coord y)
 /* ------------------------------------------------------------ */
 
 static int
-Export (int argc, char **argv, Coord x, Coord y)
+Export (G_GNUC_UNUSED int argc,
+        G_GNUC_UNUSED char **argv,
+        G_GNUC_UNUSED Coord x,
+        G_GNUC_UNUSED Coord y)
 {
 
   /* check if layout is empty */
@@ -1553,7 +1600,10 @@ Export (int argc, char **argv, Coord x, Coord y)
 /* ------------------------------------------------------------ */
 
 static int
-Benchmark (int argc, char **argv, Coord x, Coord y)
+Benchmark (G_GNUC_UNUSED int argc,
+           G_GNUC_UNUSED char **argv,
+           G_GNUC_UNUSED Coord x,
+           G_GNUC_UNUSED Coord y)
 {
   int i = 0;
   time_t start, end;
@@ -1594,7 +1644,10 @@ currently within the window already.
 %end-doc */
 
 static int
-Center(int argc, char **argv, Coord pcb_x, Coord pcb_y)
+Center (int argc,
+        G_GNUC_UNUSED char **argv,
+        Coord pcb_x,
+        Coord pcb_y)
 {
   GdkDisplay *display;
   GdkScreen *screen;
@@ -1674,7 +1727,10 @@ The values are percentages of the board size.  Thus, a move of
 %end-doc */
 
 static int
-CursorAction(int argc, char **argv, Coord x, Coord y)
+CursorAction (int argc,
+              char **argv,
+              G_GNUC_UNUSED Coord x,
+              G_GNUC_UNUSED Coord y)
 {
   UnitList extra_units_x = {
     { "grid",  PCB->Grid, 0 },
@@ -1756,7 +1812,10 @@ Open the DRC violations window.
 %end-doc */
 
 static int
-DoWindows (int argc, char **argv, Coord x, Coord y)
+DoWindows (int argc,
+           char **argv,
+           G_GNUC_UNUSED Coord x,
+           G_GNUC_UNUSED Coord y)
 {
   char *a = argc == 1 ? argv[0] : (char *)"";
 
@@ -1813,7 +1872,10 @@ Sets the display units to millimeters.
 %end-doc */
 
 static int
-SetUnits (int argc, char **argv, Coord x, Coord y)
+SetUnits (int argc,
+          char **argv,
+          G_GNUC_UNUSED Coord x,
+          G_GNUC_UNUSED Coord y)
 {
   const Unit *new_unit;
   if (argc == 0)
@@ -1858,7 +1920,10 @@ default is given, div=40.
 %end-doc */
 
 static int
-ScrollAction (int argc, char **argv, Coord x, Coord y)
+ScrollAction (int argc,
+              char **argv,
+              G_GNUC_UNUSED Coord x,
+              G_GNUC_UNUSED Coord y)
 {
   gdouble dx = 0.0, dy = 0.0;
   int div = 40;
@@ -1904,7 +1969,10 @@ Mode = 0.
 %end-doc */
 
 static int
-PanAction (int argc, char **argv, Coord x, Coord y)
+PanAction (int argc,
+           char **argv,
+           G_GNUC_UNUSED Coord x,
+           G_GNUC_UNUSED Coord y)
 {
   int mode;
 
@@ -1948,7 +2016,10 @@ button number which is triggering the popup.
 
 
 static int
-Popup (int argc, char **argv, Coord x, Coord y)
+Popup (int argc,
+       char **argv,
+       G_GNUC_UNUSED Coord x,
+       G_GNUC_UNUSED Coord y)
 {
   GtkMenu *menu;
 
@@ -1985,7 +2056,10 @@ Asks user which schematics to import into PCB.
 
 
 static int
-ImportGUI (int argc, char **argv, Coord x, Coord y)
+ImportGUI (G_GNUC_UNUSED int argc,
+           G_GNUC_UNUSED char **argv,
+           G_GNUC_UNUSED Coord x,
+           G_GNUC_UNUSED Coord y)
 {
     GSList *names = NULL;
     gchar *name = NULL;
@@ -2029,7 +2103,10 @@ ImportGUI (int argc, char **argv, Coord x, Coord y)
 
 /* ------------------------------------------------------------ */
 static int
-Busy (int argc, char **argv, Coord x, Coord y)
+Busy (G_GNUC_UNUSED int argc,
+      G_GNUC_UNUSED char **argv,
+      G_GNUC_UNUSED Coord x,
+      G_GNUC_UNUSED Coord y)
 {
   ghid_watch_cursor ();
   return 0;
@@ -2037,27 +2114,25 @@ Busy (int argc, char **argv, Coord x, Coord y)
 
 HID_Action ghid_main_action_list[] = {
   {"About", 0, About, about_help, about_syntax},
-  {"Benchmark", 0, Benchmark},
-  {"Busy", 0, Busy},
+  {"Benchmark", 0, Benchmark, NULL, NULL},
+  {"Busy", 0, Busy, NULL, NULL},
   {"Center", N_("Click on a location to center"), Center, center_help, center_syntax},
-  {"Command", 0, Command},
+  {"Command", 0, Command, NULL, NULL},
   {"Cursor", 0, CursorAction, cursor_help, cursor_syntax},
   {"DoWindows", 0, DoWindows, dowindows_help, dowindows_syntax},
-  {"Export", 0, Export},
+  {"Export", 0, Export, NULL, NULL},
   {"GetXY", "", GetXY, getxy_help, getxy_syntax},
   {"ImportGUI", 0, ImportGUI, importgui_help, importgui_syntax},
-  {"LayerGroupsChanged", 0, LayerGroupsChanged},
-  {"LibraryChanged", 0, LibraryChanged},
-  {"Load", 0, Load},
+  {"LayerGroupsChanged", 0, LayerGroupsChanged, NULL, NULL},
+  {"LibraryChanged", 0, LibraryChanged, NULL, NULL},
+  {"Load", 0, Load, NULL, NULL},
   {"Pan", 0, PanAction, pan_help, pan_syntax},
-  {"PCBChanged", 0, PCBChanged},
-  {"PointCursor", 0, PointCursor},
+  {"PCBChanged", 0, PCBChanged, NULL, NULL},
+  {"PointCursor", 0, PointCursor, NULL, NULL},
   {"Popup", 0, Popup, popup_help, popup_syntax},
-  {"Print", 0, Print,
-   print_help, print_syntax},
-  {"PrintCalibrate", 0, PrintCalibrate,
-   printcalibrate_help, printcalibrate_syntax},
-  {"RouteStylesChanged", 0, RouteStylesChanged},
+  {"Print", 0, Print, print_help, print_syntax},
+  {"PrintCalibrate", 0, PrintCalibrate, printcalibrate_help, printcalibrate_syntax},
+  {"RouteStylesChanged", 0, RouteStylesChanged, NULL, NULL},
   {"Save", 0, Save, save_help, save_syntax},
   {"Scroll", N_("Click on a place to scroll"), ScrollAction, scroll_help, scroll_syntax},
   {"SetUnits", 0, SetUnits, setunits_help, setunits_syntax},
@@ -2069,13 +2144,13 @@ REGISTER_ACTIONS (ghid_main_action_list)
 
 
 static int
-flag_flipx (void *data)
+flag_flipx (G_GNUC_UNUSED void *data)
 {
   return gport->view.flip_x;
 }
 
 static int
-flag_flipy (void *data)
+flag_flipy (G_GNUC_UNUSED void *data)
 {
   return gport->view.flip_y;
 }
@@ -2149,7 +2224,7 @@ hid_gtk_init ()
   ghid_hid.struct_size              = sizeof (HID);
   ghid_hid.name                     = "gtk";
   ghid_hid.description              = "Gtk - The Gimp Toolkit";
-  ghid_hid.gui                      = 1;
+  ghid_hid.gui                      = true;
 
   ghid_hid.get_export_options       = ghid_get_export_options;
   ghid_hid.do_export                = ghid_do_export;
diff --git a/src/main.c b/src/main.c
index 3c3b4d0..7c4e95c 100644
--- a/src/main.c
+++ b/src/main.c
@@ -394,24 +394,24 @@ print_defaults ()
 }
 
 #define SSET(F,D,N,H) { N, H, \
-	HID_String,  0, 0, { 0, D, 0 }, 0, &Settings.F }
+	HID_String,  0, 0, { 0, D, 0, 0 }, 0, &Settings.F, 0 }
 #define ISET(F,D,N,H) { N, H, \
-	HID_Integer, 0, 0, { D, 0, 0 }, 0, &Settings.F }
+	HID_Integer, 0, 0, { D, 0, 0, 0 }, 0, &Settings.F, 0 }
 #define BSET(F,D,N,H) { N, H, \
-	HID_Boolean, 0, 0, { D, 0, 0 }, 0, &Settings.F }
+	HID_Boolean, 0, 0, { D, 0, 0, 0 }, 0, &Settings.F, 0 }
 #define RSET(F,D,N,H) { N, H, \
-	HID_Real,    0, 0, { 0, 0, D }, 0, &Settings.F }
+	HID_Real,    0, 0, { 0, 0, D, 0 }, 0, &Settings.F, 0 }
 #define CSET(F,D,N,H) { N, H, \
-	HID_Coord,    0, 0, { 0, 0, 0, D }, 0, &Settings.F }
+	HID_Coord,    0, 0, { 0, 0, 0, D }, 0, &Settings.F, 0 }
 
 #define COLOR(F,D,N,H) { N, H, \
-	HID_String, 0, 0, { 0, D, 0 }, 0, &Settings.F }
+	HID_String, 0, 0, { 0, D, 0, 0 }, 0, &Settings.F, 0 }
 #define LAYERCOLOR(N,D) { "layer-color-" #N, "Color for layer " #N, \
-	HID_String, 0, 0, { 0, D, 0 }, 0, &Settings.LayerColor[N-1] }
+	HID_String, 0, 0, { 0, D, 0, 0 }, 0, &Settings.LayerColor[N-1], 0 }
 #define LAYERNAME(N,D) { "layer-name-" #N, "Name for layer " #N, \
-	HID_String, 0, 0, { 0, D, 0 }, 0, &Settings.DefaultLayerName[N-1] }
+	HID_String, 0, 0, { 0, D, 0, 0 }, 0, &Settings.DefaultLayerName[N-1], 0 }
 #define LAYERSELCOLOR(N) { "layer-selected-color-" #N, "Color for layer " #N " when selected", \
-	HID_String, 0, 0, { 0, "#00ffff", 0 }, 0, &Settings.LayerSelectedColor[N-1] }
+	HID_String, 0, 0, { 0, "#00ffff", 0, 0 }, 0, &Settings.LayerSelectedColor[N-1], 0 }
 
 static int show_help = 0;
 static int show_version = 0;
@@ -438,8 +438,8 @@ Show help on command line options.
 @end ftable
 %end-doc
 */
-  {"help", "Show help on command line options", HID_Boolean, 0, 0, {0, 0, 0}, 0,
-  &show_help},
+  {"help", "Show help on command line options", HID_Boolean, 0, 0, {0, 0, 0, 0}, 0,
+  &show_help, 0},
 
 /* %start-doc options "1 General Options"
 @ftable @code
@@ -448,7 +448,7 @@ Show version.
 @end ftable
 %end-doc
 */
-  {"version", "Show version", HID_Boolean, 0, 0, {0, 0, 0}, 0, &show_version},
+  {"version", "Show version", HID_Boolean, 0, 0, {0, 0, 0, 0}, 0, &show_version, 0},
 
 /* %start-doc options "1 General Options"
 @ftable @code
@@ -457,8 +457,8 @@ Be verbose on stdout.
 @end ftable
 %end-doc
 */
-  {"verbose", "Be verbose on stdout", HID_Boolean, 0, 0, {0, 0, 0}, 0,
-   &Settings.verbose},
+  {"verbose", "Be verbose on stdout", HID_Boolean, 0, 0, {0, 0, 0, 0}, 0,
+   &Settings.verbose, 0},
 
 /* %start-doc options "1 General Options"
 @ftable @code
@@ -467,8 +467,8 @@ Show copyright.
 @end ftable
 %end-doc
 */
-  {"copyright", "Show Copyright", HID_Boolean, 0, 0, {0, 0, 0}, 0,
-   &show_copyright},
+  {"copyright", "Show Copyright", HID_Boolean, 0, 0, {0, 0, 0, 0}, 0,
+   &show_copyright, 0},
 
 /* %start-doc options "1 General Options"
 @ftable @code
@@ -477,8 +477,8 @@ Show option defaults.
 @end ftable
 %end-doc
 */
-  {"show-defaults", "Show option defaults", HID_Boolean, 0, 0, {0, 0, 0}, 0,
-   &show_defaults},
+  {"show-defaults", "Show option defaults", HID_Boolean, 0, 0, {0, 0, 0, 0}, 0,
+   &show_defaults, 0},
 
 /* %start-doc options "1 General Options"
 @ftable @code
@@ -487,8 +487,8 @@ Show available actions and exit.
 @end ftable
 %end-doc
 */
-  {"show-actions", "Show available actions", HID_Boolean, 0, 0, {0, 0, 0}, 0,
-   &show_actions},
+  {"show-actions", "Show available actions", HID_Boolean, 0, 0, {0, 0, 0, 0}, 0,
+   &show_actions, 0},
 
 /* %start-doc options "1 General Options"
 @ftable @code
@@ -498,7 +498,7 @@ Dump actions (for documentation).
 %end-doc
 */
   {"dump-actions", "Dump actions (for documentation)", HID_Boolean, 0, 0,
-   {0, 0, 0}, 0, &do_dump_actions},
+   {0, 0, 0, 0}, 0, &do_dump_actions, 0},
 
 /* %start-doc options "1 General Options"
 @ftable @code
@@ -507,8 +507,8 @@ Set default grid units. Can be mm or mil. Defaults to mil.
 @end ftable
 %end-doc
 */
-  {"grid-units", "Default grid units (mm|mil)", HID_String, 0, 0, {0, "mil", 0},
-  0, &grid_units},
+  {"grid-units", "Default grid units (mm|mil)", HID_String, 0, 0, {0, "mil", 0, 0},
+  0, &grid_units, 0},
 
 /* %start-doc options "1 General Options"
 @ftable @code
@@ -518,8 +518,8 @@ when user is using a metric grid unit.
 @end ftable
 %end-doc
 */
-  {"clear-increment-mm", "Default clear increment amount (metric)", HID_Coord, 0, 0, {0, 0, 0},
-  0, &increment_mm.clear},
+  {"clear-increment-mm", "Default clear increment amount (metric)", HID_Coord, 0, 0, {0, 0, 0, 0},
+  0, &increment_mm.clear, 0},
 
 /* %start-doc options "1 General Options"
 @ftable @code
@@ -529,8 +529,8 @@ when user is using a metric grid unit.
 @end ftable
 %end-doc
 */
-  {"grid-increment-mm", "Default grid increment amount (metric)", HID_Coord, 0, 0, {0, 0, 0},
-  0, &increment_mm.grid},
+  {"grid-increment-mm", "Default grid increment amount (metric)", HID_Coord, 0, 0, {0, 0, 0, 0},
+  0, &increment_mm.grid, 0},
 
 /* %start-doc options "1 General Options"
 @ftable @code
@@ -540,8 +540,8 @@ when user is using a metric grid unit.
 @end ftable
 %end-doc
 */
-  {"line-increment-mm", "Default line increment amount (metric)", HID_Coord, 0, 0, {0, 0, 0},
-  0, &increment_mm.line},
+  {"line-increment-mm", "Default line increment amount (metric)", HID_Coord, 0, 0, {0, 0, 0, 0},
+  0, &increment_mm.line, 0},
 
 /* %start-doc options "1 General Options"
 @ftable @code
@@ -551,8 +551,8 @@ when user is using a metric grid unit.
 @end ftable
 %end-doc
 */
-  {"size-increment-mm", "Default size increment amount (metric)", HID_Coord, 0, 0, {0, 0, 0},
-  0, &increment_mm.size},
+  {"size-increment-mm", "Default size increment amount (metric)", HID_Coord, 0, 0, {0, 0, 0, 0},
+  0, &increment_mm.size, 0},
 
 /* %start-doc options "1 General Options"
 @ftable @code
@@ -562,8 +562,8 @@ when user is using an imperial grid unit.
 @end ftable
 %end-doc
 */
-  {"clear-increment-mil", "Default clear increment amount (imperial)", HID_Coord, 0, 0, {0, 0, 0},
-  0, &increment_mil.clear},
+  {"clear-increment-mil", "Default clear increment amount (imperial)", HID_Coord, 0, 0, {0, 0, 0, 0},
+  0, &increment_mil.clear, 0},
 
 /* %start-doc options "1 General Options"
 @ftable @code
@@ -573,8 +573,8 @@ when user is using a imperial grid unit.
 @end ftable
 %end-doc
 */
-  {"grid-increment-mil", "Default grid increment amount (imperial)", HID_Coord, 0, 0, {0, 0, 0},
-  0, &increment_mil.grid},
+  {"grid-increment-mil", "Default grid increment amount (imperial)", HID_Coord, 0, 0, {0, 0, 0, 0},
+  0, &increment_mil.grid, 0},
 
 /* %start-doc options "1 General Options"
 @ftable @code
@@ -584,8 +584,8 @@ when user is using a imperial grid unit.
 @end ftable
 %end-doc
 */
-  {"line-increment-mil", "Default line increment amount (imperial)", HID_Coord, 0, 0, {0, 0, 0},
-  0, &increment_mil.line},
+  {"line-increment-mil", "Default line increment amount (imperial)", HID_Coord, 0, 0, {0, 0, 0, 0},
+  0, &increment_mil.line, 0},
 
 /* %start-doc options "1 General Options"
 @ftable @code
@@ -595,8 +595,8 @@ when user is using a imperial grid unit.
 @end ftable
 %end-doc
 */
-  {"size-increment-mil", "Default size increment amount (imperial)", HID_Coord, 0, 0, {0, 0, 0},
-  0, &increment_mil.size},
+  {"size-increment-mil", "Default size increment amount (imperial)", HID_Coord, 0, 0, {0, 0, 0, 0},
+  0, &increment_mil.size, 0},
 
 /* %start-doc options "3 Colors"
 @ftable @code
@@ -1660,7 +1660,7 @@ static void
 InitPaths (char *argv0)
 {
   size_t l;
-  int i;
+  unsigned int i;
   int haspath;
   char *t1, *t2;
   int found_bindir = 0;
diff --git a/src/misc.c b/src/misc.c
index 0e46b98..9230b16 100644
--- a/src/misc.c
+++ b/src/misc.c
@@ -614,7 +614,7 @@ SetTextBoundingBox (FontType *FontPtr, TextType *Text)
 {
   SymbolType *symbol = FontPtr->Symbol;
   unsigned char *s = (unsigned char *) Text->TextString;
-  int i;
+  Cardinal i;
   int space;
 
   Coord minx, miny, maxx, maxy, tx;
diff --git a/src/polygon.c b/src/polygon.c
index f587028..ab4e944 100644
--- a/src/polygon.c
+++ b/src/polygon.c
@@ -354,7 +354,7 @@ original_poly (PolygonType * p)
   POLYAREA *np = NULL;
   Cardinal n;
   Vector v;
-  int hole = 0;
+  unsigned int hole = 0;
 
   if ((np = poly_Create ()) == NULL)
     return NULL;
