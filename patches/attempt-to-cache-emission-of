Bottom: 32a5b0068f65592c018945ca0d60329a18e5ec41
Top:    f78839aaee597b11cf900d3066ab2714640aec4e
Author: Peter Clifton <peter@clifton-electronics.co.uk>
Date:   2016-02-28 01:49:59 +0000

Attempt to cache emission of appearances

XXX: TODO - refcounting for appearances, for now - leak them!


---

diff --git a/src/hid/common/object3d.c b/src/hid/common/object3d.c
index 93ac247..72a7757 100644
--- a/src/hid/common/object3d.c
+++ b/src/hid/common/object3d.c
@@ -394,17 +394,24 @@ object3d_from_contours (POLYAREA *contours,
 
     object = make_object3d (PCB->Name);
 
+#if 0
+    /* XXX: REF-COUNTING WOULD BE WAY BETTER! */
     if (master_object_appearance != NULL)
       {
         object_appearance = make_appearance ();
         appearance_set_appearance (object_appearance, master_object_appearance);
       }
 
+    /* XXX: REF-COUNTING WOULD BE WAY BETTER! */
     if (master_top_bot_appearance != NULL)
       {
         top_bot_appearance = make_appearance ();
         appearance_set_appearance (top_bot_appearance, master_top_bot_appearance);
       }
+#else
+#endif
+    object_appearance = master_object_appearance;
+    top_bot_appearance = master_top_bot_appearance;
 
     object3d_set_appearance (object, object_appearance);
 
@@ -725,8 +732,8 @@ object3d_from_board_outline (void)
                                     top_bot_appearance,
                                     false); /* Don't invert */
 
-  destroy_appearance (board_appearance);
-  destroy_appearance (top_bot_appearance);
+//  destroy_appearance (board_appearance); /* XXX: HANGING ON TO THIS FOR NOW */
+//  destroy_appearance (top_bot_appearance); /* XXX: HANGING ON TO THIS FOR NOW */
 
   poly_Free (&board_outline);
 
@@ -1008,7 +1015,7 @@ object3d_from_soldermask_within_area (POLYAREA *area, int side)
                                     NULL,
                                     false); /* Don't invert */
 
-  destroy_appearance (mask_appearance);
+//  destroy_appearance (mask_appearance); /* XXX: HANGING ON TO THIS FOR NOW */
 
   poly_Free (&info.poly);
 
@@ -1995,7 +2002,7 @@ object3d_from_copper_layers_within_area (POLYAREA *area)
     }
 
 
-  destroy_appearance (copper_appearance);
+//  destroy_appearance (copper_appearance); /* XXX: HANGING ON TO THIS FOR NOW */
 
   /* DEBUG */
 //  poly_M_Copy0 (&PCB->Data->outline, info.poly);
diff --git a/src/hid/step/object3d_step.c b/src/hid/step/object3d_step.c
index beb5321..92597fc 100644
--- a/src/hid/step/object3d_step.c
+++ b/src/hid/step/object3d_step.c
@@ -52,6 +52,28 @@ presentation_style_assignments_from_appearance (step_file *step, appearance *app
   return psa_list;
 }
 
+static step_id_list
+lookup_or_create_psa (step_file *step, GHashTable *hash, appearance *appear)
+{
+  step_id_list psa_list;
+
+  if (hash != NULL)
+    psa_list = g_hash_table_lookup (hash, appear);
+
+  if (hash == NULL || psa_list == NULL) {
+    psa_list = presentation_style_assignments_from_appearance (step, appear);
+
+    if (hash != NULL)
+      g_hash_table_insert (hash, appear, psa_list);
+  }
+
+  /* The caller will free the list, so we need to make a copy if the hash table exists */
+  if (hash != NULL)
+    psa_list = g_list_copy (psa_list);
+
+  return psa_list;
+}
+
 static step_file *
 start_ap214_file (const char *filename)
 {
@@ -138,7 +160,8 @@ object3d_to_step_body_fragment (step_file *step,
                                 object3d *object,
                                 char *body_name,
                                 step_id *brep,
-                                step_id_list *styled_item_identifiers)
+                                step_id_list *styled_item_identifiers,
+                                GHashTable *appear_hash)
 {
   step_id brep_identifier;
   step_id pcb_shell_identifier;
@@ -308,7 +331,7 @@ object3d_to_step_body_fragment (step_file *step,
 #if 1
   /* Body style */
   /* XXX: THERE MUST BE A BODY STYLE, CERTAINLY IF WE WANT TO OVER RIDE FACE COLOURS */
-  brep_style_identifier = step_styled_item (step, "NONE", presentation_style_assignments_from_appearance (step, object->appear), brep_identifier);
+  brep_style_identifier = step_styled_item (step, "NONE", lookup_or_create_psa (step, appear_hash, object->appear), brep_identifier);
   step_presentation_layer_assignment (step, "1", "Layer 1", make_step_id_list (1, brep_style_identifier));
 
   *styled_item_identifiers = step_id_list_append (*styled_item_identifiers, brep_style_identifier);
@@ -319,11 +342,12 @@ object3d_to_step_body_fragment (step_file *step,
 
     if (face->appear != NULL) {
       step_id orsi = step_over_riding_styled_item (step, "NONE",
-                                                   presentation_style_assignments_from_appearance (step, face->appear),
+                                                   lookup_or_create_psa (step, appear_hash, face->appear),
                                                    face->face_identifier, brep_style_identifier);
       *styled_item_identifiers = step_id_list_append (*styled_item_identifiers, orsi);
     }
   }
+
 #endif
 
   if (brep != NULL)
@@ -390,6 +414,9 @@ object3d_list_export_to_step_part (GList *objects, const char *filename)
   GString *part_name;
   step_id_list breps;
   step_id_list styled_items;
+  GHashTable *appear_hash;
+
+  appear_hash = g_hash_table_new_full (g_direct_hash, g_direct_equal, NULL, (GDestroyNotify)g_list_free);
 
   multiple_bodies = (g_list_next (objects) != NULL);
 
@@ -419,7 +446,7 @@ object3d_list_export_to_step_part (GList *objects, const char *filename)
     if (multiple_bodies)
       g_string_append_printf (body_name, " - %i", part);
 
-    object3d_to_step_body_fragment (step, object, body_name->str, &comp_brep, &styled_items);
+    object3d_to_step_body_fragment (step, object, body_name->str, &comp_brep, &styled_items, appear_hash);
 
     g_string_free (body_name, true);
 
@@ -435,12 +462,13 @@ object3d_list_export_to_step_part (GList *objects, const char *filename)
                       &shape_definition_representation,
                       &placement_axis);
 
+  g_hash_table_destroy (appear_hash);
   finish_ap214_file (step);
 }
 
 static void
 object3d_to_step_fragment (step_file *step, object3d *object, char *part_id, char *part_name, char *part_description, char *body_name,
-                           step_id *shape_definition_representation, step_id *placement_axis)
+                           step_id *shape_definition_representation, step_id *placement_axis, GHashTable *appear_hash)
 {
   step_id product_definition_shape_identifier;
   step_id geometric_representation_context_identifier;
@@ -451,7 +479,7 @@ object3d_to_step_fragment (step_file *step, object3d *object, char *part_id, cha
                          &geometric_representation_context_identifier,
                          &product_definition_shape_identifier);
 
-  object3d_to_step_body_fragment (step, object, body_name, &brep_identifier, &styled_item_identifiers);
+  object3d_to_step_body_fragment (step, object, body_name, &brep_identifier, &styled_item_identifiers, appear_hash);
 
   step_absr_fragment (step,
                       make_step_id_list (1, brep_identifier),
@@ -472,6 +500,9 @@ object3d_list_export_to_step_assy (GList *objects, const char *filename)
   GList *object_iter;
   int part;
   bool multiple_parts;
+  GHashTable *appear_hash;
+
+  appear_hash = g_hash_table_new_full (g_direct_hash, g_direct_equal, NULL, (GDestroyNotify)g_list_free);
 
   multiple_parts = (g_list_next (objects) != NULL);
 
@@ -497,13 +528,14 @@ object3d_list_export_to_step_assy (GList *objects, const char *filename)
     }
 
     object3d_to_step_fragment (step, object, part_id->str, part_name->str, "PCB model", body_name->str,
-                               &comp_shape_definition_representation, &comp_placement_axis);
+                               &comp_shape_definition_representation, &comp_placement_axis, appear_hash);
 
     g_string_free (part_id, true);
     g_string_free (part_name, true);
     g_string_free (body_name, true);
   }
 
+  g_hash_table_destroy (appear_hash);
   finish_ap214_file (step);
 
   /* XXX: TODO: MAKE AN ASSEMBLY PRODUCT AND GATHER THE ABOVE PIECES INSIDE IT */
@@ -515,6 +547,6 @@ object3d_export_to_step (object3d *object, const char *filename)
   step_file *step;
 
   step = start_ap214_file (filename);
-  object3d_to_step_fragment (step, object, "board", "PCB board", "PCB model", "PCB board body", NULL, NULL);
+  object3d_to_step_fragment (step, object, "board", "PCB board", "PCB model", "PCB board body", NULL, NULL, NULL);
   finish_ap214_file (step);
 }
