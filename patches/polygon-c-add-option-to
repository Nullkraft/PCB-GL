Bottom: 7010cd9919aac970dca36182c5fffafaf66f37ad
Top:    8a7c16d64a7b5bd3d9347428bb365d347d824b30
Author: Peter Clifton <peter@clifton-electronics.co.uk>
Date:   2016-03-05 16:23:01 +0000

polygon.c: Add option to include drills holes (from vias / pins) in the board outline

V2: Fixup board_outline_poly() to subtract vias / pins even if no outline was found

---

diff --git a/src/hid/gtk/gtkhid-gl.c b/src/hid/gtk/gtkhid-gl.c
index 1c8b92b..1fd999f 100644
--- a/src/hid/gtk/gtkhid-gl.c
+++ b/src/hid/gtk/gtkhid-gl.c
@@ -1617,7 +1617,7 @@ ensure_board_outline (void)
     if (PCB->Data->outline != NULL)
       poly_Free (&PCB->Data->outline);
 
-    PCB->Data->outline = board_outline_poly ();
+    PCB->Data->outline = board_outline_poly (false);
     PCB->Data->outline_valid = true;
   }
 }
diff --git a/src/polygon.c b/src/polygon.c
index 205a1a3..fc83944 100644
--- a/src/polygon.c
+++ b/src/polygon.c
@@ -2023,6 +2023,22 @@ line_outline_callback (const BoxType * b, void *cl)
   return 1;
 }
 
+static int
+pv_outline_callback (const BoxType * b, void *cl)
+{
+  PinType *pv = (PinType *)b;
+  struct clip_outline_info *info = cl;
+  POLYAREA *np, *res;
+
+  if (!(np = CirclePoly (pv->X, pv->Y, pv->DrillingHole / 2)))
+    return 0;
+
+  poly_Boolean_free (info->poly, np, &res, PBO_SUB);
+  info->poly = res;
+
+  return 1;
+}
+
 static void
 delete_piece_cb (gpointer data, gpointer userdata)
 {
@@ -2044,7 +2060,7 @@ delete_piece_cb (gpointer data, gpointer userdata)
   poly_Free (&piece);
 }
 
-POLYAREA *board_outline_poly (void)
+POLYAREA *board_outline_poly (bool include_holes)
 {
   int i;
   int count;
@@ -2076,10 +2092,8 @@ POLYAREA *board_outline_poly (void)
         }
     }
 
-  if (!found_outline) {
+  if (!found_outline)
     printf ("Didn't find outline\n");
-    return whole_world;
-  }
 
   /* Do stuff to turn the outline layer into a polygon */
 
@@ -2111,8 +2125,17 @@ POLYAREA *board_outline_poly (void)
   region.X2 = PCB->MaxWidth;
   region.Y2 = PCB->MaxHeight;
 
-  r_search (Layer->line_tree, &region, NULL, line_outline_callback, &info);
-  r_search (Layer->arc_tree,  &region, NULL, arc_outline_callback, &info);
+  if (found_outline)
+    {
+      r_search (Layer->line_tree, &region, NULL, line_outline_callback, &info);
+      r_search (Layer->arc_tree,  &region, NULL, arc_outline_callback, &info);
+    }
+
+  if (include_holes)
+    {
+      r_search (PCB->Data->pin_tree, &region, NULL, pv_outline_callback, &info);
+      r_search (PCB->Data->via_tree, &region, NULL, pv_outline_callback, &info);
+    }
 
   clipped = info.poly;
 
diff --git a/src/polygon.h b/src/polygon.h
index 30e5ea3..a02fd99 100644
--- a/src/polygon.h
+++ b/src/polygon.h
@@ -88,5 +88,5 @@ bool MorphPolygon (LayerType *, PolygonType *);
 void NoHolesPolygonDicer (PolygonType *p, const BoxType *clip,
                           void (*emit) (PLINE *, void *), void *user_data);
 void PolyToPolygonsOnLayer (DataType *, LayerType *, POLYAREA *, FlagType);
-POLYAREA *board_outline_poly (void);
+POLYAREA *board_outline_poly (bool include_holes);
 #endif
