Bottom: 17f8511eeaacdf64a1b8ec688c25a7be43d4dc2c
Top:    e4f6cd4ddbb129bf8b72842f629fe1e782ab615d
Author: Peter Clifton <peter@clifton-electronics.co.uk>
Date:   2016-12-04 19:24:15 +0000

Rename NODE_LABEL and LABEL_NODE to reflect that they operate on edges


---

diff --git a/src/polygon1.c b/src/polygon1.c
index 95ce14f..85b8792 100644
--- a/src/polygon1.c
+++ b/src/polygon1.c
@@ -86,8 +86,8 @@ int vect_inters2 (Vector A, Vector B, Vector C, Vector D, Vector S1,
 
 #define TOUCHES 99
 
-#define NODE_LABEL(n)  ((n)->Flags.status)
-#define LABEL_NODE(n,l) ((n)->Flags.status = (l))
+#define EDGE_LABEL(e)  ((e)->Flags.status)
+#define LABEL_EDGE(e,l) ((e)->Flags.status = (l))
 
 #define error(code)  longjmp(*(e), code)
 
@@ -372,11 +372,11 @@ node_add_single_point (VNODE * a, Vector p)
 }				/* node_add_point */
 
 /*
-node_label
+edge_label
  (C) 2006 harry eaton
 */
 static unsigned int
-node_label (VNODE * pn)
+edge_label (VNODE * pn)
 {
   CVCList *first_l, *l;
   char this_poly;
@@ -442,12 +442,12 @@ node_label (VNODE * pn)
 	}
     }
   assert (region != UNKNWN);
-  assert (NODE_LABEL (pn) == UNKNWN || NODE_LABEL (pn) == region);
-  LABEL_NODE (pn, region);
+  assert (EDGE_LABEL (pn) == UNKNWN || EDGE_LABEL (pn) == region);
+  LABEL_EDGE (pn, region);
   if (region == SHARED || region == SHARED2)
     return UNKNWN;
   return region;
-}				/* node_label */
+}				/* edge_label */
 
 /*
  add_descriptors
@@ -1025,7 +1025,7 @@ cntr_in_M_POLYAREA (PLINE * poly, POLYAREA * outfst, BOOLp test)
 #ifdef DEBUG
 
 static char *
-theState (VNODE * v)
+theState (VNODE * e)
 {
   static char u[] = "UNKNOWN";
   static char i[] = "INSIDE";
@@ -1033,7 +1033,7 @@ theState (VNODE * v)
   static char s[] = "SHARED";
   static char s2[] = "SHARED2";
 
-  switch (NODE_LABEL (v))
+  switch (EDGE_LABEL (e))
     {
     case INSIDE:
       return i;
@@ -1082,7 +1082,7 @@ label_contour (PLINE * a)
     {
       if (cur->cvc_next)	/* examine cross vertex */
 	{
-	  label = node_label (cur);
+	  label = edge_label (cur);
 	  if (first_labelled == NULL)
 	    first_labelled = cur;
 	  continue;
@@ -1093,7 +1093,7 @@ label_contour (PLINE * a)
 
       /* This labels nodes which aren't cross-connected */
       assert (label == INSIDE || label == OUTSIDE);
-      LABEL_NODE (cur, label);
+      LABEL_EDGE (cur, label);
     }
   while ((cur = cur->next) != first_labelled);
 #ifdef DEBUG_ALL_LABELS
