Bottom: c1f978e7ce85b66c0d74d78d50b5a0003a11b290
Top:    1a650c8d9d82e360ef6f64688e05bf74506fabe9
Author: Peter Clifton <peter@clifton-electronics.co.uk>
Date:   2016-12-05 20:21:59 +0000

Refresh of patch

---

diff --git a/src/hid/common/object3d.c b/src/hid/common/object3d.c
index b3b4abc..f37dffe 100644
--- a/src/hid/common/object3d.c
+++ b/src/hid/common/object3d.c
@@ -156,7 +156,8 @@ float colors[12][3] = {{1., 0., 0.},
 #define CIRC_SEGS 64
 
 static void
-draw_quad_edge (edge_ref e, void *data)
+draw_quad_edge (edge_ref e,
+                G_GNUC_UNUSED void *data)
 {
 #if 0
   int id = ID(e) % 12;
@@ -201,7 +202,8 @@ draw_quad_edge (edge_ref e, void *data)
 }
 
 static void
-object3d_draw_debug_single (object3d *object, void *user_data)
+object3d_draw_debug_single (object3d *object,
+                            G_GNUC_UNUSED void *user_data)
 {
   g_return_if_fail (object->edges != NULL);
 
@@ -745,6 +747,9 @@ object3d_from_board_outline (void)
 {
   POLYAREA *board_outline = board_outline_poly (true);
   POLYAREA *pa;
+  appearance *board_appearance;
+  appearance *top_bot_appearance;
+  GList *objects;
 
 #if 0
   return object3d_from_soldermask_within_area (board_outline, TOP_SIDE);
@@ -763,10 +768,6 @@ object3d_from_board_outline (void)
     }
   while ((pa = pa->f) != board_outline);
 
-  appearance *board_appearance;
-  appearance *top_bot_appearance;
-  GList *objects;
-
   board_appearance = make_appearance ();
   top_bot_appearance = NULL;
   appearance_set_color (board_appearance,   1.0, 1.0, 0.6);
diff --git a/src/hid/step/object3d_step.c b/src/hid/step/object3d_step.c
index 9b78fc9..5a60464 100644
--- a/src/hid/step/object3d_step.c
+++ b/src/hid/step/object3d_step.c
@@ -387,7 +387,7 @@ step_absr_fragment (step_file *step,
                     step_id_list styled_item_list,
                     step_id geometric_representation_context_identifier,
                     step_id product_definition_shape_identifier,
-                    step_id *shape_representation,
+//                    step_id *shape_representation,
                     step_id *shape_definition_representation,
                     step_id *placement_axis)
 {
@@ -432,7 +432,7 @@ object3d_list_export_to_step_part (GList *objects, const char *filename)
   step_file *step;
   step_id geometric_representation_context;
   step_id product_definition_shape;
-  step_id shape_representation;
+//  step_id shape_representation;
   step_id shape_definition_representation;
   step_id comp_brep;
   GList *object_iter;
@@ -494,7 +494,7 @@ object3d_list_export_to_step_part (GList *objects, const char *filename)
                       styled_items,
                       geometric_representation_context,
                       product_definition_shape,
-                      &shape_representation,
+//                      &shape_representation,
                       &shape_definition_representation,
                       NULL /* placement_axis */);
 
@@ -523,7 +523,7 @@ object3d_to_step_fragment (step_file *step, object3d *object, char *part_id, cha
                       styled_item_identifiers,
                       geometric_representation_context_identifier,
                       product_definition_shape_identifier,
-                      shape_representation,
+//                      NULL /* shape_representation */,
                       shape_definition_representation,
                       placement_axis);
 }
diff --git a/src/hid/step/step.c b/src/hid/step/step.c
index 657f3ca..71d5a47 100644
--- a/src/hid/step/step.c
+++ b/src/hid/step/step.c
@@ -79,7 +79,7 @@ Name of the STEP output file. Can contain a path.
 %end-doc
 */
   {"stepfile", "STEP output file",
-   HID_String, 0, 0, {0, 0, 0}, 0, 0},
+   HID_String, 0, 0, {0, 0, 0, 0}, 0, 0, 0},
 #define HA_stepfile 0
 
   /* %start-doc options "91 STEP Export"
@@ -161,6 +161,7 @@ step_get_export_options (int *n)
   return step_attribute_list;
 }
 
+#if 0
 /* NB: Result is in mm */
 static void
 parse_cartesian_point_3d_string (const char *str, double *x, double *y, double *z)
@@ -181,6 +182,7 @@ parse_rotation_string (const char *str, double *rotation)
 {
   *rotation = 0.0;
 }
+#endif
 
 static void
 parse_position_attribute (ElementType *element, char *attr_name, double *res)
@@ -211,7 +213,7 @@ parse_numeric_attribute (ElementType *element, char *attr_name, double *res)
 static void
 step_do_export (HID_Attr_Val * options)
 {
-  int i;
+  unsigned int i;
   const char *filename;
   const char *temp_pcb_filename = "_pcb.step";
   GList *board_outline_list;
@@ -380,11 +382,13 @@ step_do_export (HID_Attr_Val * options)
             rx = 1.0, ry = 0.0, rz = 0.0;
 #endif
 
+#if 0
             /* XXX: Should parse a unit suffix, e.g. "degrees" */
             attribute = AttributeGet (element, "PCB::rotation");
             if (attribute == NULL)
               continue;
             parse_rotation_string (attribute, &rotation);
+#endif
 
             /* XXX: QUICKER TO CODE INDIVIDULAL VALUES NOT SPACE SEPARATED */
             parse_position_attribute (element, "PCB::3d_model::origin::X", &ox);
