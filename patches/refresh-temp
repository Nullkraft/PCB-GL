Bottom: d36fba12129f50ba1c8a81ccf06b14b8bff59b93
Top:    2a81bf72dc5c39da3a8d3829f794d04d0741332b
Author: Peter Clifton <peter@clifton-electronics.co.uk>
Date:   2016-02-25 13:02:29 +0000

Refresh of extend-object3d-code-to

---

diff --git a/src/hid/common/object3d.c b/src/hid/common/object3d.c
index 960d6ef..19e7ff5 100644
--- a/src/hid/common/object3d.c
+++ b/src/hid/common/object3d.c
@@ -205,10 +205,7 @@ get_contour_npoints (PLINE *contour)
 #ifdef PERFECT_ROUND_CONTOURS
   /* HACK FOR ROUND CONTOURS */
   if (contour->is_round)
-    {
-      fprintf (stderr, "get_contour_npoints returning 1 for round contour\n");
     return 1;
-    }
 #endif
 
   return contour->Count;
@@ -253,8 +250,6 @@ get_contour_edge_n_is_round (PLINE *contour, int n)
   if (contour->is_round)
     {
       /* HACK SPECIAL CASE FOR ROUND CONTOURS */
-
-      fprintf (stderr, "***************************************************************************************************************************************************************************************\n");
       return true;
     }
 #endif
@@ -302,12 +297,10 @@ get_contour_edge_n_round_geometry_in_step_mm (PLINE *contour, int n, double *cx,
   if (contour->is_round)
     {
       /* HACK SPECIAL CASE FOR ROUND CONTOURS */
-      fprintf (stderr, ":::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::\n");
-
       *cx = COORD_TO_STEP_X (PCB, contour->cx);
       *cy = COORD_TO_STEP_Y (PCB, contour->cy);
       *r = COORD_TO_MM (contour->radius);
-      *cw = (contour->Flags.orient != PLF_DIR);
+      *cw = (contour->Flags.orient == PLF_DIR);
       return;
     }
 #endif
@@ -567,12 +560,11 @@ object3d_from_contours (const POLYAREA *contours,
                                   /* XXX: ^^^ Could line this up with the direction to the vertex in the corresponding circle edge */
 
 #ifdef REVERSED_PCB_CONTOURS
-        normal_z = (/*(ct->Flags.orient == PLF_DIR) !=*/ cw) ? 1. : -1.; /* NORMAL POINTING TO -VE Z MAKES CIRCLE CLOCKWISE */
+        normal_z = cw ? 1. : -1.; /* NORMAL POINTING TO -VE Z MAKES CIRCLE CLOCKWISE */
 #else
-        normal_z = (/*(ct->Flags.orient == PLF_DIR) !=*/ cw) ? -1. : 1.; /* NORMAL POINTING TO -VE Z MAKES CIRCLE CLOCKWISE */
+        normal_z = cw ? -1. : 1.; /* NORMAL POINTING TO -VE Z MAKES CIRCLE CLOCKWISE */
 #endif
 
-
         edge_info_set_round (UNDIR_DATA (edges[i]),
                              cx, cy, COORD_TO_STEP_Z (PCB, zbot), /* Center of circle */ /* BOTTOM */
                              0., 0., normal_z, /* Normal */ radius);
@@ -1505,7 +1497,6 @@ object3d_from_copper_layers_within_area (POLYAREA *area)
   int min_phys_group;
   int max_phys_group;
 
-  fprintf (stderr, "object3d_from_copper_layers_within_area\n");
 //  poly_Copy0 (&info.poly, area);
 
   copper_appearance = make_appearance ();
diff --git a/src/polygon.h b/src/polygon.h
index a2e7b56..1343d03 100644
--- a/src/polygon.h
+++ b/src/polygon.h
@@ -34,7 +34,7 @@
 
 /* Implementation constants */
 
-#define POLY_CIRC_SEGS 4 //10 //40
+#define POLY_CIRC_SEGS 8 //10 //40
 #define POLY_CIRC_SEGS_F ((float)POLY_CIRC_SEGS)
 
 #if 0
