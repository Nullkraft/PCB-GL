Bottom: 0cce83a61162e939ac398deed5f73b873a96e03e
Top:    a09659be5321ed5dceb134320ec13d90a318bc00
Author: Peter Clifton <peter@clifton-electronics.co.uk>
Date:   2016-02-17 17:31:45 +0000

Refresh of move-arc-from-included-angle

---

diff --git a/src/misc.c b/src/misc.c
index 1729bbd..d5508c2 100644
--- a/src/misc.c
+++ b/src/misc.c
@@ -397,7 +397,7 @@ calc_arc_from_points_and_included_angle (PointType *p1, PointType *p2, Angle inc
   hx = p1->X + (p2->X - p1->X) / 2;
   hy = p1->Y + (p2->Y - p1->Y) / 2;
 
-  p_to_h_dist = hypot (p2->X - p1->X, p2->Y - p1->Y) / 2.;
+  p_to_h_dist = hypot (p2->X - p1->Y, p2->Y - p1->Y) / 2.;
   c_to_h_dist = p_to_h_dist / tan (TO_RADIANS (included_angle) / 2.);
 
   unit_hcx = (double)-(hy - p1->Y) / p_to_h_dist;
@@ -430,6 +430,27 @@ SetPolygonBoundingBox (PolygonType *Polygon)
     MAKEMIN (Polygon->BoundingBox.Y1, point->Y);
     MAKEMAX (Polygon->BoundingBox.X2, point->X);
     MAKEMAX (Polygon->BoundingBox.Y2, point->Y);
+
+    if (point->included_angle != 0)
+      {
+        BoxType arc_bound;
+        Coord cx, cy, radius;
+        Angle start_angle, delta_angle;
+        PointType *next_point;
+
+        /* NB: This next line uses the polygon point index, n, defined by POLYGON_POINT_LOOP */
+        next_point = &Polygon->Points[next_contour_point (Polygon, n)];
+
+        calc_arc_from_points_and_included_angle (point, next_point, point->included_angle,
+                                                 &cx, &cy, &radius, &start_angle, &delta_angle);
+
+        arc_bound = calc_thin_arc_bounds (cx, cy, radius, radius, start_angle, delta_angle);
+
+        MAKEMIN (Polygon->BoundingBox.X1, arc_bound.X1);
+        MAKEMIN (Polygon->BoundingBox.Y1, arc_bound.Y1);
+        MAKEMAX (Polygon->BoundingBox.X2, arc_bound.X2);
+        MAKEMAX (Polygon->BoundingBox.Y2, arc_bound.Y2);
+      }
   }
   /* boxes don't include the lower right corner */
   close_box(&Polygon->BoundingBox);
