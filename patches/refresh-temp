Bottom: 797c6b01aa3ce40ccc5d3cabebb72658f009134f
Top:    0a3b84a8555719668d0d40757f7b38e9e8c06ee7
Author: Peter Clifton <peter@clifton-electronics.co.uk>
Date:   2016-12-10 23:01:48 +0000

Refresh of toy-rendering-attempt

---

diff --git a/src/hid/gtk/gtkhid-gl.c b/src/hid/gtk/gtkhid-gl.c
index b5ec76c..b6ed19b 100644
--- a/src/hid/gtk/gtkhid-gl.c
+++ b/src/hid/gtk/gtkhid-gl.c
@@ -1145,7 +1145,7 @@ ghid_init_renderer (int *argc, char ***argv, GHidPort *port)
 //  step_model_to_shape_master ("/home/pcjc2/gedasrc/pcb/git/src/example_step/DPAK.step", &step_read_test);
 //  step_model_to_shape_master ("/home/pcjc2/gedasrc/pcb/git/src/example_step/Inductor_R1.step", &step_read_test);
 //  step_model_to_shape_master ("/home/pcjc2/gedasrc/pcb/git/src/example_step/Capacitor_100V_10uF.step", &step_read_test);
-//  step_model_to_shape_master ("/home/pcjc2/gedasrc/pcb/git/src/example_step/", &step_read_test);
+  step_model_to_shape_master ("/home/pcjc2/gedasrc/pcb/git/src/example_step/shape_rep.step", &step_read_test);
 }
 
 void
diff --git a/src/hid/step/model.cpp b/src/hid/step/model.cpp
index df737b2..8fee10d 100644
--- a/src/hid/step/model.cpp
+++ b/src/hid/step/model.cpp
@@ -60,7 +60,7 @@ extern "C" {
 # include <unistd.h>
 #endif
 
-#if 0
+#if 1
 #  define DEBUG_PRODUCT_DEFINITION_SEARCH
 #  define DEBUG_CHILD_REMOVAL
 #  define DEBUG_PRODUCT_DEFINITION
@@ -87,7 +87,15 @@ read_model_from_file (Registry *registry,
 {
   STEPfile sfile = STEPfile (*registry, *instance_list, "", false);
 
-  sfile.ReadExchangeFile (filename);
+  try
+    {
+      sfile.ReadExchangeFile (filename);
+    }
+  catch (...)
+    {
+      std::cout << "ERROR: Caught exception when attempting to read from file '" << filename << "' (does the file exist?)" << std::endl;
+      return NULL;
+    }
 
   Severity severity = sfile.Error().severity();
   if (severity != SEVERITY_NULL)
diff --git a/src/hid/step/step.c b/src/hid/step/step.c
index 97d790d..65fc4dc 100644
--- a/src/hid/step/step.c
+++ b/src/hid/step/step.c
@@ -341,7 +341,8 @@ step_load_models(Coord board_thickness_)
               if (old_model->instances == NULL)
                 {
                   /* Assume unused, so unload */
-                  step_model_free (old_model->step_model);
+                  if (old_model->step_model != NULL)
+                    step_model_free (old_model->step_model);
                   g_free (old_model);
                   loaded_models = g_list_remove (loaded_models, old_model);
                 }
diff --git a/src/hid/step/utils.cpp b/src/hid/step/utils.cpp
index 931bc75..7c5be28 100644
--- a/src/hid/step/utils.cpp
+++ b/src/hid/step/utils.cpp
@@ -62,7 +62,12 @@ void
 find_all_pd_with_sdr (InstMgr *instance_list, pd_list *pd_list, int start_after_id)
 {
   MgrNode * mnode = instance_list->FindFileId (start_after_id);
-  int search_index = instance_list->GetIndex (mnode) + 1;
+  int search_index;
+
+  if (mnode == NULL)
+    search_index = 0;
+  else
+    search_index = instance_list->GetIndex (mnode) + 1;
 
   // Loop over the instances of SHAPE_DEFITION_REPRESENTATION in the file
   SdaiShape_definition_representation *sdr;
@@ -119,7 +124,12 @@ void
 find_and_remove_child_pd (InstMgr *instance_list, pd_list *pd_list, int start_after_id, const char *entityName)
 {
   MgrNode * mnode = instance_list->FindFileId (start_after_id);
-  int search_index = instance_list->GetIndex (mnode) + 1;
+  int search_index;
+
+  if (mnode == NULL)
+    search_index = 0;
+  else
+    search_index = instance_list->GetIndex (mnode) + 1;
 
   SdaiAssembly_component_usage *acu;
   while (ENTITY_NULL != (acu = (SdaiAssembly_component_usage *)
@@ -152,7 +162,12 @@ static SdaiProduct_definition *
 find_pd_for_sr (InstMgr *instance_list, int start_after_id, SdaiShape_representation *target_sr)
 {
   MgrNode * mnode = instance_list->FindFileId (start_after_id);
-  int search_index = instance_list->GetIndex (mnode) + 1;
+  int search_index;
+
+  if (mnode == NULL)
+    search_index = 0;
+  else
+    search_index = instance_list->GetIndex (mnode) + 1;
 
   // Loop over the instances of SHAPE_DEFITION_REPRESENTATION in the file
   SdaiShape_definition_representation *sdr;
@@ -178,7 +193,12 @@ void
 find_and_remove_child_pd_mi_rm_sr (InstMgr *instance_list, pd_list *pd_list, int start_after_id)
 {
   MgrNode * mnode = instance_list->FindFileId (start_after_id);
-  int search_index = instance_list->GetIndex (mnode) + 1;
+  int search_index;
+
+  if (mnode == NULL)
+    search_index = 0;
+  else
+    search_index = instance_list->GetIndex (mnode) + 1;
 
   SdaiMapped_item *mi;
   while (ENTITY_NULL != (mi = (SdaiMapped_item *)
