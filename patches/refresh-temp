Bottom: 0de07e16d6f6c5cd05b7f3e5044d20e236231b62
Top:    048985d6a23f7ac09251a8f8f782f327ef0a0235
Author: Peter Clifton <peter@clifton-electronics.co.uk>
Date:   2016-03-05 19:25:36 +0000

Refresh of wip-on-quad-edge-play

---

diff --git a/src/hid/common/object3d.c b/src/hid/common/object3d.c
index 0c3ad02..9afe726 100644
--- a/src/hid/common/object3d.c
+++ b/src/hid/common/object3d.c
@@ -522,7 +522,7 @@ object3d_export_to_step (object3d *object, const char *filename)
 object3d *
 object3d_from_board_outline (void)
 {
-  object3d *board_object;
+  object3d *object;
   appearance *board_appearance;
   POLYAREA *outline;
   PLINE *contour;
@@ -564,11 +564,11 @@ object3d_from_board_outline (void)
    * holes = ncontours - 1  (LATER)
    */
 
-  board_object = make_object3d (PCB->Name);
+  object = make_object3d (PCB->Name);
   board_appearance = make_appearance ();
   appearance_set_color (board_appearance, 1., 1., 0.);
 
-  object3d_set_appearance (board_object, board_appearance);
+  object3d_set_appearance (object, board_appearance);
 
   vertices = malloc (sizeof (vertex3d *) * 2 * npoints);
   edges    = malloc (sizeof (edge_ref  ) * 3 * npoints);
@@ -594,14 +594,14 @@ object3d_from_board_outline (void)
     vertices[i]           = make_vertex3d (x1, y1, -COORD_TO_MM (HACK_BOARD_THICKNESS)); /* Bottom */
     vertices[npoints + i] = make_vertex3d (x1, y1, 0); /* Top */
 
-    object3d_add_vertex (board_object, vertices[i]);
-    object3d_add_vertex (board_object, vertices[npoints + i]);
+    object3d_add_vertex (object, vertices[i]);
+    object3d_add_vertex (object, vertices[npoints + i]);
   }
 
   /* Define the edges */
   for (i = 0; i < 3 * npoints; i++) {
     edges[i] = make_edge ();
-    object3d_add_edge (board_object, edges[i]);
+    object3d_add_edge (object, edges[i]);
   }
 
   /* Define the faces */
@@ -676,7 +676,7 @@ object3d_from_board_outline (void)
 
   poly_Free (&outline);
 
-  return board_object;
+  return object;
 }
 
 void
