Bottom: a5abdf11abef39a4ee1a1e4347c791b09808b2ab
Top:    003020401af79a65b1e11591670fa27f5ad56f4b
Author: Peter Clifton <peter@clifton-electronics.co.uk>
Date:   2016-02-13 23:39:53 +0000

Refresh of attempt-to-fix-bad-rtree-usage-0

---

diff --git a/src/polygon1.c b/src/polygon1.c
index 0c9fa3b..254b0bc 100644
--- a/src/polygon1.c
+++ b/src/polygon1.c
@@ -504,6 +504,15 @@ add_descriptors (PLINE * pl, char poly, CVCList * list)
   return list;
 }
 
+static bool
+cntrbox_check (PLINE * c, Vector p)
+{
+  return (p[0]     < c->xmin ||
+          p[0] + 1 > c->xmax ||
+          p[1]     < c->ymin ||
+          p[1] + 1 > c->ymax);
+}
+
 static inline void
 cntrbox_adjust (PLINE * c, Vector p)
 {
@@ -910,7 +919,16 @@ intersect_impl (jmp_buf * jb, POLYAREA * b, POLYAREA * a, int add)
       EDGE_FORWARD_VERTEX (task->node_seg->v) = task->new_node;
       task->node_seg->p->Count++;
 
-      cntrbox_adjust (task->node_seg->p, task->new_node->point);
+      if (cntrbox_check (task->node_seg->p, task->new_node->point))
+        {
+          /* First delete the contour from the contour r-tree, as its bounds
+           * may be adjusted whilst inserting nodes
+           */
+          r_delete_entry (b->contour_tree, (const BoxType *) task->node_seg->p);
+          cntrbox_adjust (task->node_seg->p, task->new_node->point);
+          r_insert_entry (b->contour_tree, (const BoxType *) task->node_seg->p, 0);
+        }
+
       if (adjust_tree (task->node_seg->p->tree, task->node_seg))
 	assert (0); /* XXX: Memory allocation failure */
