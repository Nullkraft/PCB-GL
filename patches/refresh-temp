Bottom: bdc5df037d0f4b3b21c8af730e640aa7cdb0f78f
Top:    f1752d2f859ea41e9ee710c38701bc976705f917
Author: Peter Clifton <peter@clifton-electronics.co.uk>
Date:   2015-05-04 14:04:04 +0100

Refresh of extend-board-export

---

diff --git a/src/hid/step/object3d_step.c b/src/hid/step/object3d_step.c
index 8a999f5..dc60565 100644
--- a/src/hid/step/object3d_step.c
+++ b/src/hid/step/object3d_step.c
@@ -101,20 +101,14 @@ finish_ap214_file (step_file *step)
 
 static void
 step_product_fragment (step_file *step, char *part_id, char *part_name, char *part_description,
-                              step_id *shape_representation, step_id *placement_axis)
+                       step_id *geometric_representation_context,
+                       step_id *product_definition_shape)
 {
   step_id application_context_identifier;
   step_id product_identifier;
   step_id product_definition_identifier;
   step_id product_definition_shape_identifier;
   step_id geometric_representation_context_identifier;
-  step_id shape_representation_identifier;
-  step_id brep_identifier;
-  step_id anchor_axis_identifier;
-  step_id pcb_shell_identifier;
-  step_id brep_style_identifier;
-  step_id shape_definition_representation_identifier;
-  GList *styled_item_identifiers = NULL;
 
   /* Setup the context of the "product" we are defining", and that it is a 'part' */
   application_context_identifier = step_application_context (step, "automotive_design");
@@ -131,34 +125,22 @@ step_product_fragment (step_file *step, char *part_id, char *part_name, char *pa
 
   geometric_representation_context_identifier = make_3d_metric_step_geometric_representation_context (step);
 
-  /* Need an anchor in 3D space to orient the shape */
-  anchor_axis_identifier = step_axis2_placement_3d (step, "NONE",
-                                                    step_cartesian_point (step, "NONE", 0.0, 0.0, 0.0),
-                                                          step_direction (step, "NONE", 0.0, 0.0, 1.0),
-                                                          step_direction (step, "NONE", 1.0, 0.0, 0.0)),
-
-  shape_representation_identifier =
-    step_advanced_brep_shape_representation (step, "test_pcb_absr_name",
-                                             make_step_id_list (2, brep_identifier, anchor_axis_identifier), geometric_representation_context_identifier);
+  if (geometric_representation_context != NULL)
+    *geometric_representation_context = geometric_representation_context_identifier;
 
-  shape_definition_representation_identifier =
-  step_shape_definition_representation (step, product_definition_shape_identifier, shape_representation_identifier);
-
-//  if (shape_definition_representation != NULL)
-//    *shape_definition_representation = shape_definition_representation_identifier;
-
-  if (placement_axis != NULL)
-    *placement_axis = anchor_axis_identifier;
+  if (product_definition_shape != NULL)
+    *product_definition_shape = product_definition_shape_identifier;
 }
 
 static void
-object3d_to_step_body_fragment (step_file *step, object3d *object, char *part_id, char *part_name, char *part_description, char *body_name,
-                                step_id *shape_definition_representation, step_id *brep)
+object3d_to_step_body_fragment (step_file *step, object3d *object,
+                                char *part_id, char *part_name, char *part_description, char *body_name,
+                                step_id *brep,
+                                step_id_list *styled_item_identifiers)
 {
   step_id brep_identifier;
   step_id pcb_shell_identifier;
   step_id brep_style_identifier;
-  GList *styled_item_identifiers = NULL;
   GList *shell_face_list = NULL;
   GList *face_iter;
   GList *edge_iter;
@@ -323,7 +305,7 @@ object3d_to_step_body_fragment (step_file *step, object3d *object, char *part_id
   brep_style_identifier = step_styled_item (step, "NONE", presentation_style_assignments_from_appearance (step, object->appear), brep_identifier);
   step_presentation_layer_assignment (step, "1", "Layer 1", make_step_id_list (1, brep_style_identifier));
 
-  styled_item_identifiers = g_list_append (styled_item_identifiers, GINT_TO_POINTER (brep_style_identifier));
+  *styled_item_identifiers = step_id_list_append (*styled_item_identifiers, brep_style_identifier);
 
   /* Face styles */
   for (face_iter = object->faces; face_iter != NULL; face_iter = g_list_next (face_iter)) {
@@ -333,12 +315,9 @@ object3d_to_step_body_fragment (step_file *step, object3d *object, char *part_id
       step_id orsi = step_over_riding_styled_item (step, "NONE",
                                                    presentation_style_assignments_from_appearance (step, face->appear),
                                                    face->face_identifier, brep_style_identifier);
-      styled_item_identifiers = g_list_append (styled_item_identifiers, GINT_TO_POINTER (orsi));
+      *styled_item_identifiers = step_id_list_append (*styled_item_identifiers, orsi);
     }
   }
-
-  /* Emit references to the styled and over_ridden styled items */
-// XXX: step_mechanical_design_geometric_presentation_representation (step, "", styled_item_identifiers, geometric_representation_context_identifier);
 #endif
 
   if (brep != NULL)
@@ -349,13 +328,49 @@ object3d_to_step_body_fragment (step_file *step, object3d *object, char *part_id
 #undef REV
 }
 
+
+static void
+step_product_definition_absr (step_file *step,
+                              step_id_list brep_list,
+                              step_id_list styled_item_list,
+                              step_id geometric_representation_context_identifier,
+                              step_id product_definition_shape_identifier,
+                              step_id *shape_representation,
+                              step_id *shape_definition_representation,
+                              step_id *placement_axis)
+{
+  step_id shape_representation_identifier;
+  step_id anchor_axis_identifier;
+  step_id shape_definition_representation_identifier;
+
+  /* Need an anchor in 3D space to orient the shape */
+  anchor_axis_identifier = step_axis2_placement_3d (step, "NONE",
+                                                    step_cartesian_point (step, "NONE", 0.0, 0.0, 0.0),
+                                                          step_direction (step, "NONE", 0.0, 0.0, 1.0),
+                                                          step_direction (step, "NONE", 1.0, 0.0, 0.0)),
+
+  shape_representation_identifier =
+    step_advanced_brep_shape_representation (step, "test_pcb_absr_name",
+                                             step_id_list_append (brep_list, anchor_axis_identifier),
+                                             geometric_representation_context_identifier);
+
+  shape_definition_representation_identifier =
+  step_shape_definition_representation (step, product_definition_shape_identifier, shape_representation_identifier);
+
+  /* Emit references to the styled and over_ridden styled items */
+  step_mechanical_design_geometric_presentation_representation (step, "", styled_item_list, geometric_representation_context_identifier);
+
+  if (shape_definition_representation != NULL)
+    *shape_definition_representation = shape_definition_representation_identifier;
+
+  if (placement_axis != NULL)
+    *placement_axis = anchor_axis_identifier;
+}
+
 static void
 object3d_to_step_fragment (step_file *step, object3d *object, char *part_id, char *part_name, char *part_description, char *body_name,
                            step_id *shape_definition_representation, step_id *placement_axis)
 {
-  step_id application_context_identifier;
-  step_id product_identifier;
-  step_id product_definition_identifier;
   step_id product_definition_shape_identifier;
   step_id geometric_representation_context_identifier;
   step_id shape_representation_identifier;
@@ -371,20 +386,9 @@ object3d_to_step_fragment (step_file *step, object3d *object, char *part_id, cha
   GList *vertex_iter;
   GList *contour_iter;
 
-  /* Setup the context of the "product" we are defining", and that it is a 'part' */
-  application_context_identifier = step_application_context (step, "automotive_design");
-  step_application_protocol_definition (step, "draft international standard", "automotive_design", "1998", application_context_identifier);
-  product_identifier = step_product (step, part_id, part_name /* This one is picked up by freecad */, part_description,
-                                     make_step_id_list (1, step_product_context (step, "NONE", application_context_identifier, "mechanical")));
-  step_product_related_product_category (step, "part", NULL, make_step_id_list (1, product_identifier));
-
-  /* Setup the specific definition of the product we are defining */
-  product_definition_identifier = step_product_definition (step, "UNKNOWN", "",
-                                                           step_product_definition_formation (step, "any", "", product_identifier), /* Versioning for the product */
-                                                           step_product_definition_context (step, "detailed design", application_context_identifier, "design"));
-  product_definition_shape_identifier = step_product_definition_shape (step, "NONE", "NONE", product_definition_identifier);
-
-  geometric_representation_context_identifier = make_3d_metric_step_geometric_representation_context (step);
+  step_product_fragment (step, part_id, part_name, part_description,
+                         &geometric_representation_context_identifier,
+                         &product_definition_shape_identifier);
 
 #define FWD 1
 #define REV 2
@@ -590,25 +594,36 @@ void
 object3d_list_export_to_step_part (GList *objects, const char *filename)
 {
   step_file *step;
+  step_id geometric_representation_context;
   step_id product_definition_shape;
-  step_id comp_shape_representation;
-  step_id comp_shape_definition_representation;
-  step_id comp_placement_axis;
+  step_id shape_representation;
+  step_id shape_definition_representation;
+  step_id placement_axis;
   step_id comp_brep;
   GList *object_iter;
   int part;
   bool multiple_bodies;
   GString *part_id;
   GString *part_name;
+  step_id_list breps;
+  step_id_list styled_items;
 
   multiple_bodies = (g_list_next (objects) != NULL);
 
+  step = start_ap214_file (filename);
+
   part_id   = g_string_new ("part id");
   part_name = g_string_new ("part name");
 
-  step = start_ap214_file (filename);
+  step_product_fragment (step, part_id->str, part_name->str, "PCB model",
+                         &geometric_representation_context,
+                         &product_definition_shape);
 
-  step_product_fragment (step, part_id->str, part_name->str, "PCB model", &comp_shape_representation, &comp_placement_axis);
+  g_string_free (part_id, true);
+  g_string_free (part_name, true);
+
+  breps = make_step_id_list (0);
+  styled_items = make_step_id_list (0);
 
   for (object_iter = objects, part = 1;
        object_iter != NULL;
@@ -621,16 +636,21 @@ object3d_list_export_to_step_part (GList *objects, const char *filename)
     if (multiple_bodies)
       g_string_append_printf (body_name, " - %i", part);
 
-    object3d_to_step_body_fragment (step, object, part_id->str, part_name->str, "PCB model", body_name->str,
-                                    &comp_shape_definition_representation, &comp_brep);
+    object3d_to_step_body_fragment (step, object, part_id->str, part_name->str, "PCB model", body_name->str, &comp_brep, &styled_items);
 
     g_string_free (body_name, true);
 
-    /* XXX: Append brep identifier onto a list for later use in forming the product's shape_representation */
+    breps = step_id_list_append (breps, comp_brep);
   }
 
-  g_string_free (part_id, true);
-  g_string_free (part_name, true);
+  step_product_definition_absr (step,
+                                breps,
+                                styled_items,
+                                geometric_representation_context,
+                                product_definition_shape,
+                                &shape_representation,
+                                &shape_definition_representation,
+                                &placement_axis);
 
   finish_ap214_file (step);
 }
diff --git a/src/hid/step/step.c b/src/hid/step/step.c
index e360435..6bcb970 100644
--- a/src/hid/step/step.c
+++ b/src/hid/step/step.c
@@ -167,7 +167,8 @@ step_do_export (HID_Attr_Val * options)
   } while ((piece = piece->f) != board_outline);
   poly_Free (&board_outline);
 
-  object3d_list_export_to_step_assy (board_outline_list, temp_pcb_filename);
+  object3d_list_export_to_step_part (board_outline_list, temp_pcb_filename);
+//  object3d_list_export_to_step_assy (board_outline_list, temp_pcb_filename);
   g_list_free_full (board_outline_list, (GDestroyNotify)destroy_object3d);
 
   {
