Bottom: a58984c8526c6396d6bd9c28dfac5ac95dbe5df1
Top:    71842a16334ae8b3d5e62b00855d105858d5eb48
Author: Peter Clifton <peter@clifton-electronics.co.uk>
Date:   2016-02-06 15:34:14 +0000

Refresh of add-macros-to-access-next-and

---

diff --git a/src/polyarea.h b/src/polyarea.h
index 92ca8a2..c2a7366 100644
--- a/src/polyarea.h
+++ b/src/polyarea.h
@@ -80,7 +80,7 @@ struct CVCList
 };
 struct VNODE
 {
-    VNODE *next, *prev, *shared;
+    VNODE *_next, *_prev, *shared;
     struct {
       unsigned int status:3;
       unsigned int mark:1;
diff --git a/src/polygon1.c b/src/polygon1.c
index 13f27f6..4210b68 100644
--- a/src/polygon1.c
+++ b/src/polygon1.c
@@ -2516,7 +2516,7 @@ cntrbox_pointin (PLINE * c, Vector p)
 static inline int
 node_neighbours (VNODE * a, VNODE * b)
 {
-  return (a == b) || (a->next == b) || (b->next == a) || (a->next == b->next);
+  return (a == b) || (a->_next == b) || (b->_next == a) || (a->_next == b->_next);
 }
 
 VNODE *
@@ -3222,23 +3222,23 @@ poly_ChkContour (PLINE * a)
       do
 	{
 	  if (!node_neighbours (a1, a2) &&
-	      (icnt = vect_inters2 (a1->point, a1->next->point,
-				    a2->point, a2->next->point, i1, i2)) > 0)
+	      (icnt = vect_inters2 (a1->point, a1->_next->point,
+				    a2->point, a2->_next->point, i1, i2)) > 0)
 	    {
 	      if (icnt > 1)
 		return TRUE;
 
 	      if (vect_dist2 (i1, a1->point) < EPSILON)
 		hit1 = a1;
-	      else if (vect_dist2 (i1, a1->next->point) < EPSILON)
-		hit1 = a1->next;
+	      else if (vect_dist2 (i1, a1->_next->point) < EPSILON)
+		hit1 = a1->_next;
 	      else
 		hit1 = NULL;
 
 	      if (vect_dist2 (i1, a2->point) < EPSILON)
 		hit2 = a2;
-	      else if (vect_dist2 (i1, a2->next->point) < EPSILON)
-		hit2 = a2->next;
+	      else if (vect_dist2 (i1, a2->_next->point) < EPSILON)
+		hit2 = a2->_next;
 	      else
 		hit2 = NULL;
 
@@ -3254,7 +3254,7 @@ poly_ChkContour (PLINE * a)
 		/* An end-point of the second line touched somewhere along the
 		   length of the first line. Check where the second line leads. */
 		  if (inside_sector (hit2, a1->point) !=
-		      inside_sector (hit2, a1->next->point))
+		      inside_sector (hit2, a1->_next->point))
 		    return TRUE;
 		}
 	      else if (hit2 == NULL)
@@ -3262,21 +3262,21 @@ poly_ChkContour (PLINE * a)
 		/* An end-point of the first line touched somewhere along the
 		   length of the second line. Check where the first line leads. */
 		  if (inside_sector (hit1, a2->point) !=
-		      inside_sector (hit1, a2->next->point))
+		      inside_sector (hit1, a2->_next->point))
 		    return TRUE;
 		}
 	      else
 		{
 		/* Both lines intersect at an end-point. Check where they lead. */
-		  if (inside_sector (hit1, hit2->prev->point) !=
-		      inside_sector (hit1, hit2->next->point))
+		  if (inside_sector (hit1, hit2->_prev->point) !=
+		      inside_sector (hit1, hit2->_next->point))
 		    return TRUE;
 		}
 	    }
 	}
-      while ((a2 = a2->next) != &a->head);
+      while ((a2 = a2->_next) != &a->head);
     }
-  while ((a1 = a1->next) != &a->head);
+  while ((a1 = a1->_next) != &a->head);
   return FALSE;
 }
