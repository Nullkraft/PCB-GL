Bottom: 3728daf47ab1dc4f054459ca1f4f42838f3f55fc
Top:    e5c30dde4c292d3cfa5d71faca70f8a4b7c6a657
Author: Peter Clifton <peter@clifton-electronics.co.uk>
Date:   2016-02-13 17:39:57 +0000

Refresh of refactor-polygon-copy

---

diff --git a/src/polygon1.c b/src/polygon1.c
index 143de3e..19ec771 100644
--- a/src/polygon1.c
+++ b/src/polygon1.c
@@ -2400,6 +2400,8 @@ poly_Boolean (const POLYAREA * a_org, const POLYAREA * b_org,
 {
   POLYAREA *a = NULL, *b = NULL;
 
+  *res = NULL; /* Set now, in case we run out of memory below */
+
   if (!poly_M_Copy0 (&a, a_org) || !poly_M_Copy0 (&b, b_org))
     return err_no_memory;
 
@@ -2420,7 +2422,7 @@ poly_Boolean_free (POLYAREA * ai, POLYAREA * bi, POLYAREA ** res, int action)
 
   test_polyInvContour ();
 
-  *res = NULL;
+  *res = NULL; /* Set now, in case we run out of memory below */
 
   if (!a)
     {
@@ -2981,6 +2983,7 @@ poly_Copy1 (POLYAREA * dst, const POLYAREA * src)
       r_insert_entry (dst->contour_tree, (BoxType *) * last, 0);
       last = &(*last)->next;
     }
+
   return TRUE;
 }
 
@@ -2988,13 +2991,13 @@ BOOLp
 poly_Copy0 (POLYAREA ** dst, const POLYAREA * src)
 {
   *dst = NULL;
-  if (src != NULL)
-    *dst = (POLYAREA *)calloc (1, sizeof (POLYAREA));
-  if (*dst == NULL)
+  if (src == NULL)
+    return TRUE;
+
+  if ((*dst = poly_Create ()) == NULL || !poly_Copy1 (*dst, src))
     return FALSE;
-  (*dst)->contour_tree = r_create_tree (NULL, 0, 0);
 
-  return poly_Copy1 (*dst, src);
+  return TRUE;
 }
 
 void
@@ -3018,7 +3021,8 @@ poly_M_Copy0 (POLYAREA ** dst, const POLYAREA * srcfst)
 
   *dst = NULL;
   if (src == NULL)
-    return FALSE;
+    return TRUE; /* Copying a NULL POLYAREA is not a failure, return true */
+
   do
     {
       if ((di = poly_Create ()) == NULL || !poly_Copy1 (di, src))
