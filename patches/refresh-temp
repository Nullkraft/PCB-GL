Bottom: 060c9e1c0254bae778f041f0fb6327d8974a8b0d
Top:    cbb1abcd52be8469cd0560ef1b2d0a2dd972763c
Author: Peter Clifton <peter@clifton-electronics.co.uk>
Date:   2016-02-14 01:05:43 +0000

Refresh of allocate-vnode-with

---

diff --git a/src/polygon1.c b/src/polygon1.c
index 23a809c..0f0b5f5 100644
--- a/src/polygon1.c
+++ b/src/polygon1.c
@@ -202,7 +202,6 @@ poly_CreateNodeFull (Vector v, bool is_round, double cx, double cy, double radiu
   Coord *c;
 
   assert (v);
-//  res = (VNODE *) calloc (1, sizeof (VNODE));
   res = g_slice_new0 (VNODE);
   if (res == NULL)
     return NULL;
@@ -3528,7 +3527,6 @@ poly_NewContour (VNODE *node)
 #warning THIS WILL BE BOGUS IF WE GET A CIRCULAR CONTOUR STARTING AT THE HEAD.. NEED 2ND POINT TO DETMERMINE BOUNDS
   cntrbox_adjust (res, res->head.point);
   g_slice_free (VNODE, node);
-//  free (node);
 
   return res;
 }
@@ -3543,7 +3541,6 @@ poly_ClrContour (PLINE * c)
     {
       poly_ExclVertex (cur);
       g_slice_free (VNODE, cur);
-//      free (cur);
     }
   free (c->tristrip_vertices);
   c->tristrip_vertices = NULL;
@@ -3567,7 +3564,6 @@ poly_DelContour (PLINE ** c)
 	  free (cur->cvc_prev);
 	}
       g_slice_free (VNODE, cur);
-//      free (cur);
     }
   if ((*c)->head.cvc_next != NULL)
     {
@@ -3612,7 +3608,6 @@ poly_PreContour (PLINE * C, BOOLp optimize)
 	    {
 	      poly_ExclVertex (c);
 	      g_slice_free (VNODE, c);
-//	      free (c);
 	      c = p;
 	    }
 	}
@@ -3871,7 +3866,6 @@ poly_InclVertex (VNODE * after, VNODE * node)
       NEXT_VERTEX (PREV_VERTEX (t)) = node;
       PREV_VERTEX (node) = PREV_VERTEX (t);
       g_slice_free (VNODE, t);
-      //free (t);
     }
 }
