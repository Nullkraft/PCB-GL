Bottom: 936fe17d9ea5cc4a853db3197be6e498876cc672
Top:    ad1fc608089812922f4e37f7b7e3c4362af6e30e
Author: Peter Clifton <peter@clifton-electronics.co.uk>
Date:   2016-03-05 15:58:57 +0000

Refresh of extend-object3d-code-to

---

diff --git a/src/hid/common/object3d.c b/src/hid/common/object3d.c
index 9c71594..af855b8 100644
--- a/src/hid/common/object3d.c
+++ b/src/hid/common/object3d.c
@@ -245,6 +245,8 @@ get_contour_coord_n_in_step_mm (PLINE *contour, int n, double *x, double *y)
 static bool
 get_contour_edge_n_is_round (PLINE *contour, int n)
 {
+  VNODE *edge = &contour->head;
+
 #ifdef PERFECT_ROUND_CONTOURS
   if (contour->is_round)
     {
@@ -253,12 +255,43 @@ get_contour_edge_n_is_round (PLINE *contour, int n)
     }
 #endif
 
-  return false;
+  while (n > 0) {
+    edge = edge->next; /* The VNODE structure is circularly linked, so wrapping is OK */
+    n--;
+  }
+
+  return edge->is_round;
+}
+
+/* Copied from polygon1.c */
+#define Vsub2(r,a,b)	{(r)[0] = (a)[0] - (b)[0]; (r)[1] = (a)[1] - (b)[1];}
+#define EDGE_BACKWARD_VERTEX(e) ((e))
+#define EDGE_FORWARD_VERTEX(e) ((e)->next)
+
+static int compare_ccw_cw (Vector a, Vector b, Vector c)
+{
+  double cross;
+  Vector ab;
+  Vector ac;
+
+  Vsub2 (ab, b, a);
+  Vsub2 (ac, c, a);
+
+  cross = (double) ab[0] * ac[1] - (double) ac[0] * ab[1];
+  if (cross > 0.0)
+    return 1;
+  else if (cross < 0.0)
+    return -1;
+  else
+    return 0;
 }
 
 static void
 get_contour_edge_n_round_geometry_in_step_mm (PLINE *contour, int n, double *cx, double *cy, double *r, bool *cw)
 {
+  VNODE *edge = &contour->head;
+  Vector center;
+
 #ifdef PERFECT_ROUND_CONTOURS
   if (contour->is_round)
     {
@@ -267,8 +300,21 @@ get_contour_edge_n_round_geometry_in_step_mm (PLINE *contour, int n, double *cx,
       *cy = COORD_TO_STEP_Y (PCB, contour->cy);
       *r = COORD_TO_MM (contour->radius);
       *cw = (contour->Flags.orient != PLF_DIR);
+      return;
     }
-#endif
+
+  while (n > 0) {
+    edge = edge->next; /* The VNODE structure is circularly linked, so wrapping is OK */
+    n--;
+  }
+
+  center[0] = edge->cx;
+  center[1] = edge->cy;
+
+  *cx = COORD_TO_STEP_X (PCB, edge->cx);
+  *cy = COORD_TO_STEP_Y (PCB, edge->cy);
+  *r = COORD_TO_MM (edge->radius);
+  *cw = (compare_ccw_cw (EDGE_BACKWARD_VERTEX (edge)->point, center, EDGE_FORWARD_VERTEX (edge)->point) > 0);
 }
 
 GList *
@@ -1484,19 +1530,21 @@ object3d_from_copper_layers_within_area (POLYAREA *area)
       {
         fprintf (stderr, "Accumulating elements from layer %i\n", GetLayerNumber (PCB->Data, layer));
 
-//        r_search (layer->line_tree, &bounds, NULL, line_copper_callback, &info);
-//        r_search (layer->arc_tree,  &bounds, NULL, arc_copper_callback, &info);
-//        r_search (layer->text_tree, &bounds, NULL, text_copper_callback, &info);
+        r_search (layer->line_tree, &bounds, NULL, line_copper_callback, &info);
+        r_search (layer->arc_tree,  &bounds, NULL, arc_copper_callback, &info);
+        r_search (layer->text_tree, &bounds, NULL, text_copper_callback, &info);
         r_search (layer->polygon_tree, &bounds, NULL, polygon_copper_callback, &info);
       }
     END_LOOP;
+#endif
 
-//    fprintf (stderr, "Accumulating pin + via pads\n");
-//    r_search (PCB->Data->pin_tree, &bounds, NULL, pv_copper_callback, &info);
-//    r_search (PCB->Data->via_tree, &bounds, NULL, pv_copper_callback, &info);
+#if 1
+    fprintf (stderr, "Accumulating pin + via pads\n");
+    r_search (PCB->Data->pin_tree, &bounds, NULL, pv_copper_callback, &info);
+    r_search (PCB->Data->via_tree, &bounds, NULL, pv_copper_callback, &info);
 #endif
 
-#if 0
+#if 1
     if (group == top_group ||
         group == bottom_group)
       {
@@ -1549,7 +1597,6 @@ object3d_from_copper_layers_within_area (POLYAREA *area)
                               copper_appearance,
                               NULL));
 
-
     //break;
   }
 
diff --git a/src/hid/step/step.c b/src/hid/step/step.c
index 47499ce..52182c0 100644
--- a/src/hid/step/step.c
+++ b/src/hid/step/step.c
@@ -152,7 +152,11 @@ step_do_export (HID_Attr_Val * options)
   if (filename == NULL)
     filename = "pcb-out.step";
 
+#if 1
   board_outline_list = object3d_from_board_outline ();
+#else
+  board_outline_list = NULL;
+#endif
 
   board_outline = board_outline_poly (true);
   piece = board_outline;
diff --git a/src/polygon1.c b/src/polygon1.c
index 296841f..493618a 100644
--- a/src/polygon1.c
+++ b/src/polygon1.c
@@ -39,7 +39,7 @@
       are marked
 */
 
-#undef NDEBUG
+//#undef NDEBUG
 #include	<assert.h>
 #include	<stdlib.h>
 #include	<stdio.h>
@@ -110,13 +110,13 @@ int vect_inters2 (Vector A, Vector B, Vector C, Vector D, Vector S1,
 
 #define error(code)  longjmp(*(e), code)
 
-#define DEBUG_INTERSECT
-#define DEBUG_LABEL
-#define DEBUG_ALL_LABELS
-#define DEBUG_JUMP
-#define DEBUG_GATHER
-#define DEBUG_ANGLE
-#define DEBUG
+#undef DEBUG_INTERSECT
+#undef DEBUG_LABEL
+#undef DEBUG_ALL_LABELS
+#undef DEBUG_JUMP
+#undef DEBUG_GATHER
+#undef DEBUG_ANGLE
+#undef DEBUG
 #ifdef DEBUG
 #define DEBUGP(...) pcb_fprintf(stderr, ## __VA_ARGS__)
 #else
@@ -2998,14 +2998,20 @@ poly_Boolean_free (POLYAREA * ai, POLYAREA * bi, POLYAREA ** res, int action)
 
   *res = NULL;
 
+#if 0
   fprintf (stderr, "# A POLYGON\n");
   if (a == NULL) printf ("NULL\n"); else poly_dump (a);
   fprintf (stderr, "# B POLYGON\n");
   if (b == NULL) printf ("NULL\n"); else poly_dump (b);
+#endif
 
+#if 0
   /* Make copies for tracking polygon parentage (DEBUG) */
   if (!poly_M_Copy0 (&a_copy, a) || !poly_M_Copy0 (&b_copy, b))
       return err_no_memory;
+#endif
+  a_copy = NULL;
+  b_copy = NULL;
 
   /* Move the parentage information over onto the copy */
   if (a_copy != NULL)
