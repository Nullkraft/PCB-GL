Bottom: d32e3c39e04139ee490dff0ccd5c10cf16c063db
Top:    24dcf752f37dc408feca345f85553dfd4970546b
Author: Peter Clifton <peter@clifton-electronics.co.uk>
Date:   2016-03-05 10:35:32 +0000

Refresh of try-from-first-principles-on

---

diff --git a/src/hid/step/object3d_step.c b/src/hid/step/object3d_step.c
index 3340c83..beb5321 100644
--- a/src/hid/step/object3d_step.c
+++ b/src/hid/step/object3d_step.c
@@ -25,8 +25,8 @@
 #include "object3d_step.h"
 
 
-//#define REVERSED_PCB_CONTOURS 1 /* PCB Contours are reversed from the expected CCW for outer ordering - once the Y-coordinate flip is taken into account */
-//#undef REVERSED_PCB_CONTOURS
+#define REVERSED_PCB_CONTOURS 1 /* PCB Contours are reversed from the expected CCW for outer ordering - once the Y-coordinate flip is taken into account */
+#undef REVERSED_PCB_CONTOURS
 
 #define EPSILON 1e-5 /* XXX: Unknown  what this needs to be */
 
@@ -260,7 +260,6 @@ object3d_to_step_body_fragment (step_file *step,
 
     /* XXX: The lookup of these edges by adding to info->edge_identifier requires the step_* functions to assign sequential identifiers */
     info->edge_identifier = step_edge_curve (step, "NONE", sv, ev, info->infinite_line_identifier, true);
-    //info->edge_identifier = step_edge_curve (step, "NONE", sv, ev, info->infinite_line_identifier, !info->is_round); /* XXX: WHY ARE OUR ROUND CONTOURS BASS-ACKWARDS? */
     step_oriented_edge (step, "NONE", info->edge_identifier, true);  /* Add 1 to info->edge_identifier to find this (same) oriented edge */
     step_oriented_edge (step, "NONE", info->edge_identifier, false); /* Add 2 to info->edge_identifier to find this (back) oriented edge */
   }
