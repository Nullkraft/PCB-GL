Bottom: d64afafa5da6b2f33bf222ce50af979ef7f4f16e
Top:    90fed552fedd43fb0c49a62fb7556698b9672545
Author: Peter Clifton <peter@clifton-electronics.co.uk>
Date:   2016-02-13 23:36:36 +0000

Refresh of attempt-to-fix-bad-rtree-usage

---

diff --git a/src/rtree.c b/src/rtree.c
index dc71dec..6558427 100644
--- a/src/rtree.c
+++ b/src/rtree.c
@@ -40,7 +40,6 @@
 
 #include "global.h"
 
-#undef NDEBUG
 #include <assert.h>
 #include <setjmp.h>
 
@@ -410,12 +409,6 @@ r_create_tree (const BoxType * boxlist[], int N, int manage)
   return rtree;
 }
 
-void
-r_check_tree (rtree_t *rtree)
-{
-  assert (__r_tree_is_good (rtree->root));
-}
-
 static void
 __r_destroy_tree (struct rtree_node *node)
 {
diff --git a/src/rtree.h b/src/rtree.h
index e9e1881..d44de09 100644
--- a/src/rtree.h
+++ b/src/rtree.h
@@ -87,6 +87,5 @@ static inline int r_search_pt (rtree_t * rtree, const PointType * pt,
 int r_region_is_empty (rtree_t * rtree, const BoxType * region);
 
 void __r_dump_tree (struct rtree_node *, int);
-void r_check_tree (rtree_t *rtree);
 
 #endif
