Bottom: cce27679b6a9c7f1f5c9290a983986f468803a4e
Top:    7a92d39723ddf601b15ee641e81244e3cebc4fdf
Author: Peter Clifton <peter@clifton-electronics.co.uk>
Date:   2016-02-26 12:17:10 +0000

Refresh of attempt-to-produce-more

---

diff --git a/src/hid/step/step_writer.c b/src/hid/step/step_writer.c
index 9655d8f..39e69a8 100644
--- a/src/hid/step/step_writer.c
+++ b/src/hid/step/step_writer.c
@@ -189,7 +189,7 @@ step_product_definition_shape (step_file *file, char *name, char *description, s
 step_id
 step_cartesian_point (step_file *file, char *name, double x, double y, double z)
 {
-  fprintf (file->f, "#%i = CARTESIAN_POINT ( '%s', ( %f, %f, %f ) ) ;\n",
+  fprintf (file->f, "#%i = CARTESIAN_POINT ( '%s', ( %g, %g, %g ) ) ;\n",
                     file->next_id, name, x, y, z);
   return file->next_id++;
 }
@@ -197,7 +197,7 @@ step_cartesian_point (step_file *file, char *name, double x, double y, double z)
 step_id
 step_direction (step_file *file, char *name, double x, double y, double z)
 {
-  fprintf (file->f, "#%i = DIRECTION ( '%s', ( %f, %f, %f ) ) ;\n",
+  fprintf (file->f, "#%i = DIRECTION ( '%s', ( %g, %g, %g ) ) ;\n",
                     file->next_id, name, x, y, z);
   return file->next_id++;
 }
@@ -221,7 +221,7 @@ step_plane (step_file *file, char *name, step_id position)
 step_id
 step_cylindrical_surface (step_file *file, char *name, step_id position, double radius)
 {
-  fprintf (file->f, "#%i = CYLINDRICAL_SURFACE ( '%s', #%i, %f ) ;\n",
+  fprintf (file->f, "#%i = CYLINDRICAL_SURFACE ( '%s', #%i, %g ) ;\n",
                     file->next_id, name, position, radius);
   return file->next_id++;
 }
@@ -229,7 +229,7 @@ step_cylindrical_surface (step_file *file, char *name, step_id position, double
 step_id
 step_circle (step_file *file, char *name, step_id position, double radius)
 {
-  fprintf (file->f, "#%i = CIRCLE ( '%s', #%i, %f ) ;\n",
+  fprintf (file->f, "#%i = CIRCLE ( '%s', #%i, %g ) ;\n",
                     file->next_id, name, position, radius);
   return file->next_id++;
 }
@@ -237,7 +237,7 @@ step_circle (step_file *file, char *name, step_id position, double radius)
 step_id
 step_vector (step_file *file, char *name, step_id orientation, double magnitude)
 {
-  fprintf (file->f, "#%i = VECTOR ( '%s', #%i, %f ) ;\n",
+  fprintf (file->f, "#%i = VECTOR ( '%s', #%i, %g ) ;\n",
                     file->next_id, name, orientation, magnitude);
   return file->next_id++;
 }
@@ -355,7 +355,7 @@ step_shape_definition_representation (step_file *file, step_id definition, step_
 step_id
 step_colour_rgb (step_file *file, char *name, double red, double green, double blue)
 {
-  fprintf (file->f, "#%i = COLOUR_RGB ( '%s', %f, %f, %f ) ;\n",
+  fprintf (file->f, "#%i = COLOUR_RGB ( '%s', %g, %g, %g ) ;\n",
                     file->next_id, name, red, green, blue);
   return file->next_id++;
 }
diff --git a/src/polygon1.c b/src/polygon1.c
index c5b2d71..1b70a80 100644
--- a/src/polygon1.c
+++ b/src/polygon1.c
@@ -241,14 +241,10 @@ node_add_single (VNODE * dest, Vector po)
   VNODE *p;
 
 /* XXX: MAY NOT BE CORRECT IF WE NEED TO SEPARATE STRAIGHT AND CURVED SEGMENTS */
-  if (vect_equal (po, EDGE_BACKWARD_VERTEX (dest)->point)) {
-    pcb_fprintf (stderr, "node_add_single() returning EDGE_BACKWARD_VERTEX (dest);\n");
+  if (vect_equal (po, EDGE_BACKWARD_VERTEX (dest)->point))
     return EDGE_BACKWARD_VERTEX (dest);
-  }
-  if (vect_equal (po, EDGE_FORWARD_VERTEX (dest)->point)) {
-    pcb_fprintf (stderr, "node_add_single() returning EDGE_FORWARD_VERTEX (dest);\n");
+  if (vect_equal (po, EDGE_FORWARD_VERTEX (dest)->point))
     return EDGE_FORWARD_VERTEX (dest);
-  }
   p = poly_CreateNode (po);
   if (p == NULL)
     return NULL;
