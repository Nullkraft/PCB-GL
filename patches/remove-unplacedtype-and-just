Bottom: 17cffd9a56e55fb72d5c0481a3861181acd59fa8
Top:    e8124256053121f4c35d0f163125702b7dea4c57
Author: Peter Clifton <peter@clifton-electronics.co.uk>
Date:   2017-03-17 22:01:43 +0000

Remove UnplacedType and just use a buffer of DataType


---

diff --git a/src/action.c b/src/action.c
index 924389c..f7fb709 100644
--- a/src/action.c
+++ b/src/action.c
@@ -7106,6 +7106,7 @@ static int
 ActionElementList (int argc, char **argv, Coord x, Coord y)
 {
   ElementType *e = NULL;
+  DataType *e_owner = NULL;
   char *refdes, *value, *footprint, *old;
   char *args[3];
   char *function;
@@ -7129,15 +7130,12 @@ ActionElementList (int argc, char **argv, Coord x, Coord y)
       element_cache = NULL;
       number_of_footprints_not_found = 0;
 
-      /* Empty out the unplaced element list */
-      UNPLACED_LOOP (PCB->Data);
-      {
-        FreeUnplacedMemory (unplaced);
-      }
-      END_LOOP;
-      g_list_free_full (PCB->Data->Unplaced, (GDestroyNotify)FreeUnplaced);
-      PCB->Data->Unplaced = NULL;
-      PCB->Data->UnplacedN = 0;
+      /* Empty out the unplaced element list.
+       * NB: FreeDataMemory() leaves the outer structure
+       *     intact, but empty - 0 filled.
+       */
+      FreeDataMemory (PCB->Unplaced);
+      PCB->Unplaced->pcb = PCB;
 
       return 0;
     }
@@ -7188,10 +7186,10 @@ ActionElementList (int argc, char **argv, Coord x, Coord y)
 #endif
 
   e = find_element_by_refdes (refdes);
+  e_owner = PCB->Data;
 
   if (!e)
     {
-      UnplacedType *unplaced;
       Coord nx, ny, d;
 
 #ifdef DEBUG
@@ -7199,13 +7197,13 @@ ActionElementList (int argc, char **argv, Coord x, Coord y)
 #endif
 
       /* Not on board, need to add it. */
-#if 0
       if (LoadFootprint(argc, args, x, y))
 	{
 	  number_of_footprints_not_found ++;
 	  return 1;
 	}
 
+#if 0
       nx = PCB->MaxWidth / 2;
       ny = PCB->MaxHeight / 2;
       d = MIN (PCB->MaxWidth, PCB->MaxHeight) / 10;
@@ -7234,38 +7232,15 @@ ActionElementList (int argc, char **argv, Coord x, Coord y)
 	SetChangedFlag (true);
 #endif
 
-      unplaced = GetUnplacedMemory (PCB->Data);
-
-      unplaced->Name[NAMEONPCB_INDEX] = strdup (refdes);
-      unplaced->Name[VALUE_INDEX] = strdup (value);
-      unplaced->Name[DESCRIPTION_INDEX] = strdup (footprint);
-      unplaced->footprint = strdup (footprint);
+      printf ("Created unplaced entry refdes=%s\n", refdes);
 
-      printf ("Created unplaced entry %p, refdes=%s\n", unplaced, unplaced->Name[NAMEONPCB_INDEX]);
+      /* Loaded OK, first element in paste-buffer will be what we want, take it */
+      assert (PASTEBUFFER->Data->ElementN == 1);
 
-      if (LoadFootprint(argc, args, x, y))
-        {
-          /* Error */
-          number_of_footprints_not_found ++;
-          //return 1;
-          printf ("Crap - Load problem\n");
-        }
-      else
-        {
-          /* Loaded OK, first element in paste-buffer will be what we want, take it */
-          assert (PASTEBUFFER->Data->ElementN == 1);
-
-          unplaced->Element = PASTEBUFFER->Data->Element->data;
-          PASTEBUFFER->Data->Element = NULL;
-          PASTEBUFFER->Data->ElementN = 0;
-          ClearBuffer (PASTEBUFFER);
-        }
-
-      e = unplaced->Element;
-      if (e == NULL)
-        printf ("Crap - null e\n");
+      e = PASTEBUFFER->Data->Element->data;
+      MoveObjectToBuffer (PCB->Unplaced, PASTEBUFFER->Data, ELEMENT_TYPE, e, NULL, NULL);
+      e_owner = PCB->Unplaced;
     }
-
   else if (e && DESCRIPTION_NAME(e) && strcmp (DESCRIPTION_NAME(e), footprint) != 0)
     {
       int er, pr, i;
@@ -7310,15 +7285,17 @@ ActionElementList (int argc, char **argv, Coord x, Coord y)
       /* Now reload footprint */
       element_cache = NULL;
       e = find_element_by_refdes (refdes);
+      e_owner = PCB->Data;
+    }
 
-      old = ChangeElementText (PCB, PCB->Data, e, NAMEONPCB_INDEX, strdup (refdes));
-      free (old);
-      old = ChangeElementText (PCB, PCB->Data, e, VALUE_INDEX, strdup (value));
-      free (old);
 
-      SET_FLAG (FOUNDFLAG, e);
+  old = ChangeElementText (PCB, e_owner, e, NAMEONPCB_INDEX, strdup (refdes));
+  free (old);
+  old = ChangeElementText (PCB, e_owner, e, VALUE_INDEX, strdup (value));
+  free (old);
+
+  SET_FLAG (FOUNDFLAG, e);
 
-    }
 
 #ifdef DEBUG
   printf(" ... Leaving ActionElementList.\n");
@@ -7371,12 +7348,11 @@ ActionElementSetAttr (int argc, char **argv, Coord x, Coord y)
   if (e == NULL)
     {
       /* Attempt to find in unplaced elements */
-      UNPLACED_LOOP (PCB->Data);
+      ELEMENT_LOOP (PCB->Unplaced);
       {
-        printf ("Unplaced = %p\n", unplaced);
-        if (NSTRCMP (refdes, unplaced->Name[NAMEONPCB_INDEX]) == 0)
+        if (NSTRCMP (refdes, NAMEONPCB_NAME (element)) == 0)
           {
-            e = unplaced->Element;
+            e = element;
             break;
           }
       }
@@ -7386,7 +7362,6 @@ ActionElementSetAttr (int argc, char **argv, Coord x, Coord y)
   if (!e)
     {
       Message(_("Cannot change attribute of %s - element not found\n"), refdes);
-      /* XXX: We could possibly allow setting attributes on unplaced components, but we need to extend this code below */
       return 1;
     }
 
diff --git a/src/create.c b/src/create.c
index d41b456..74e15aa 100644
--- a/src/create.c
+++ b/src/create.c
@@ -159,6 +159,10 @@ CreateNewPCB (void)
   ptr->Data->pcb = (PCBType *) ptr;
   ptr->Data->polyClip = 1;
 
+  ptr->Unplaced = CreateNewBuffer ();
+  ptr->Unplaced->pcb = (PCBType *) ptr;
+  ptr->Unplaced->polyClip = 0;
+
   ptr->ThermStyle = 4;
   ptr->IsleArea = 2.e8;
   ptr->SilkActive = false;
diff --git a/src/global.h b/src/global.h
index 2941d26..bd70bad 100644
--- a/src/global.h
+++ b/src/global.h
@@ -461,37 +461,16 @@ typedef struct
 
 
 /*!
- * \brief Unplaced element data.
- */
-typedef struct
-{
-  char *Name[MAX_ELEMENTNAMES];
-    /*!< The elements names;
-     * - description text,
-     * - name on PCB second,
-     * - value third.
-     * see macro.h.
-     */
-    /*!< NB: Duplicated from actual Element, so we can cope with "footprint not found" case */
-  char *footprint;
-  AttributeListType Attributes;
-    /*!< NB: Duplicated from actual Element, so we can cope with "footprint not found" case */
-  ElementType *Element;
-} UnplacedType;
-
-/*!
  * \brief Holds all objects.
  */
 typedef struct
 {
   Cardinal ViaN; /*!< Number of vias. */
   Cardinal ElementN; /*!< Number of elements. */
-  Cardinal UnplacedN; /*!< Number of unplaced elements. */
   Cardinal RatN; /*!< Number of rat-lines. */
   int LayerN; /*!< Number of layers in this board. */
   GList *Via;
   GList *Element;
-  GList *Unplaced;
   GList *Rat;
   rtree_t *via_tree, *element_tree, *pin_tree, *pad_tree, *name_tree[3],	/* for element names */
    *rat_tree;
@@ -645,6 +624,7 @@ typedef struct PCBType
   LibraryType NetlistLib;
   AttributeListType Attributes;
   DataType *Data; /*!< Entire database. */
+  DataType *Unplaced; /*!< Storage location for unplaced elements. */
 
   bool is_footprint; /*!< If set, the user has loaded a footprint, not a pcb. */
 }
diff --git a/src/hid/gtk/gui-library-window.c b/src/hid/gtk/gui-library-window.c
index 6f2367f..207f49b 100644
--- a/src/hid/gtk/gui-library-window.c
+++ b/src/hid/gtk/gui-library-window.c
@@ -998,8 +998,7 @@ enum
   UNPLACED_NAMEONPCB_COLUMN,
   UNPLACED_VALUE_COLUMN,
   UNPLACED_DESCRIPTION_COLUMN,
-  UNPLACED_FOOTPRINT_COLUMN,
-  UNPLACED_ITEM_COLUMN,         /* Pointer to the UnplacedType item */
+  UNPLACED_ITEM_COLUMN,         /* Pointer to the ElementType item */
   N_UNPLACED_COLUMNS
 };
 
@@ -1019,18 +1018,16 @@ create_unplaced_tree_model (GhidLibraryWindow * library_window)
                              G_TYPE_STRING,   /* UNPLACED_NAMEONPCB_COLUM */
                              G_TYPE_STRING,   /* UNPLACED_VALUE_COLUMN */
                              G_TYPE_STRING,   /* UNPLACED_DESCRIPTION_COLUMN */
-                             G_TYPE_STRING,   /* UNPLACED_FOOTPRINT_COLUMN */
                              G_TYPE_POINTER); /* UNPLACED_ITEM_COLUMN */
 
-  UNPLACED_LOOP (PCB->Data);
+  ELEMENT_LOOP (PCB->Unplaced);
   {
     gtk_list_store_append (list, &iter);
     gtk_list_store_set (list, &iter,
-                        UNPLACED_NAMEONPCB_COLUMN,   unplaced->Name[NAMEONPCB_INDEX],
-                        UNPLACED_VALUE_COLUMN,       unplaced->Name[VALUE_INDEX],
-                        UNPLACED_DESCRIPTION_COLUMN, unplaced->Name[DESCRIPTION_INDEX],
-                        UNPLACED_FOOTPRINT_COLUMN,   unplaced->footprint,
-                        UNPLACED_ITEM_COLUMN,        unplaced,
+                        UNPLACED_NAMEONPCB_COLUMN,   NAMEONPCB_NAME(element),
+                        UNPLACED_VALUE_COLUMN,       VALUE_NAME(element),
+                        UNPLACED_DESCRIPTION_COLUMN, DESCRIPTION_NAME(element),
+                        UNPLACED_ITEM_COLUMN,        element,
                         -1);
   }
   END_LOOP;
@@ -1056,54 +1053,28 @@ library_window_callback_unplaced_selection_changed (GtkTreeSelection * selection
   GtkTreeModel *model;
   GtkTreeIter iter;
   GhidLibraryWindow *library_window = (GhidLibraryWindow *) user_data;
-  UnplacedType *unplaced = NULL;
+  ElementType *element = NULL;
   gchar *m4_args;
 
+  /* update the preview with new symbol data */
+  g_object_set (library_window->preview,
+                "element-data", NULL, NULL);
+
   if (!gtk_tree_selection_get_selected (selection, &model, &iter))
     return;
 
-  gtk_tree_model_get (model, &iter, UNPLACED_ITEM_COLUMN, &unplaced, -1);
+  gtk_tree_model_get (model, &iter, UNPLACED_ITEM_COLUMN, &element, -1);
 
-  if (unplaced == NULL)
+  if (element == NULL)
     return;
 
-#if 0
-  /* -1 flags this is an element file part and the file path is in
-     |  entry->AllocateMemory.
-   */
-  if (entry->Template == (char *) -1)
-    {
-      if (LoadElementToBuffer (PASTEBUFFER, entry->AllocatedMemory, true))
-        {
-          SetMode (PASTEBUFFER_MODE);
-          goto out;
-        }
-      return;
-    }
-
-  /* Otherwise, it's a m4 element and we need to create a string of
-     |  macro arguments to be passed to the library command in
-     |  LoadElementToBuffer()
-   */
-  m4_args = g_strdup_printf ("'%s' '%s' '%s'", EMPTY (entry->Template),
-                             EMPTY (entry->Value), EMPTY (entry->Package));
-
-  if (LoadElementToBuffer (PASTEBUFFER, m4_args, false))
-    {
-      SetMode (PASTEBUFFER_MODE);
-      g_free (m4_args);
-      goto out;
-    }
-
-  g_free (m4_args);
-  return;
-
-out:
+  ClearBuffer (PASTEBUFFER);
+  CopyObjectToBuffer (PASTEBUFFER->Data, PCB->Unplaced, ELEMENT_TYPE, element, NULL, NULL);
+  SetMode (PASTEBUFFER_MODE);
 
   /* update the preview with new symbol data */
   g_object_set (library_window->preview,
                 "element-data", PASTEBUFFER->Data->Element->data, NULL);
-#endif
 }
 
 
diff --git a/src/macro.h b/src/macro.h
index 36c980a..aeccd7e 100644
--- a/src/macro.h
+++ b/src/macro.h
@@ -227,14 +227,6 @@ extern int mem_any_set (unsigned char *, int);
        __iter = __next, __next = g_list_next (__iter), n++) {       \
     ElementType *element = __iter->data;
 
-#define UNPLACED_LOOP(top) do {                                     \
-  GList *__iter, *__next;                                           \
-  Cardinal n = 0;                                                   \
-  for (__iter = (top)->Unplaced, __next = g_list_next (__iter);     \
-       __iter != NULL;                                              \
-       __iter = __next, __next = g_list_next (__iter), n++) {       \
-    UnplacedType *unplaced = __iter->data;
-
 #define RAT_LOOP(top) do {                                          \
   GList *__iter, *__next;                                           \
   Cardinal n = 0;                                                   \
diff --git a/src/mymem.c b/src/mymem.c
index b535053..8144bb7 100644
--- a/src/mymem.c
+++ b/src/mymem.c
@@ -460,46 +460,6 @@ FreeElement (ElementType *data)
 }
 
 /*!
- * \brief Get the next slot for an unplaced element.
- *
- * Allocates memory if necessary.
- */
-UnplacedType *
-GetUnplacedMemory (DataType *data)
-{
-  UnplacedType *new_obj;
-
-  new_obj = g_slice_new0 (UnplacedType);
-
-  if (data != NULL)
-    {
-      data->Unplaced = g_list_append (data->Unplaced, new_obj);
-      data->UnplacedN ++;
-    }
-
-  return new_obj;
-}
-
-void
-FreeUnplaced (UnplacedType *data)
-{
-  g_slice_free (UnplacedType, data);
-}
-
-void
-FreeUnplacedMemory (UnplacedType *unplaced)
-{
-  int i;
-
-  for (i = 0; i < MAX_ELEMENTNAMES; i++)
-    free (unplaced->Name[i]);
-  free (unplaced->footprint);
-
-  FreeElementMemory (unplaced->Element);
-  FreeElement (unplaced->Element);
-}
-
-/*!
  * \brief Get the next slot for a library menu.
  *
  * Allocates memory if necessary.
@@ -762,6 +722,8 @@ FreePCBMemory (PCBType *pcb)
   free (pcb->PrintFilename);
   FreeDataMemory (pcb->Data);
   free (pcb->Data);
+  FreeDataMemory (pcb->Unplaced);
+  free (pcb->Unplaced);
   /* release font symbols */
   for (i = 0; i <= MAX_FONTPOSITION; i++)
     free (pcb->Font.Symbol[i].Line);
@@ -796,12 +758,6 @@ FreeDataMemory (DataType *data)
   }
   END_LOOP;
   g_list_free_full (data->Element, (GDestroyNotify)FreeElement);
-  UNPLACED_LOOP (data);
-  {
-    FreeUnplacedMemory (unplaced);
-  }
-  END_LOOP;
-  g_list_free_full (data->Unplaced, (GDestroyNotify)FreeUnplaced);
   g_list_free_full (data->Rat, (GDestroyNotify)FreeRat);
 
   for (layer = data->Layer, i = 0; i < MAX_ALL_LAYER; layer++, i++)
diff --git a/src/mymem.h b/src/mymem.h
index f8ff937..a37a33f 100644
--- a/src/mymem.h
+++ b/src/mymem.h
@@ -81,7 +81,6 @@ PolygonType * GetPolygonMemory (LayerType *);
 PointType * GetPointMemoryInPolygon (PolygonType *);
 Cardinal *GetHoleIndexMemoryInPolygon (PolygonType *);
 ElementType * GetElementMemory (DataType *);
-UnplacedType * GetUnplacedMemory (DataType *);
 BoxType * GetBoxMemory (BoxListType *);
 ConnectionType * GetConnectionMemory (NetType *);
 NetType * GetNetMemory (NetListType *);
@@ -94,8 +93,6 @@ DrillType * GetDrillInfoDrillMemory (DrillInfoType *);
 void **GetPointerMemory (PointerListType *);
 void FreePolygonMemory (PolygonType *);
 void FreeElementMemory (ElementType *);
-void FreeUnplacedMemory (UnplacedType *);
-void FreeUnplaced (UnplacedType *);
 void FreePCBMemory (PCBType *);
 void FreeBoxListMemory (BoxListType *);
 void FreeNetListListMemory (NetListListType *);
