Bottom: 17cffd9a56e55fb72d5c0481a3861181acd59fa8
Top:    5a7cbeca4d2a1e626ea090ac911de2f566c0782a
Author: Peter Clifton <peter@clifton-electronics.co.uk>
Date:   2017-03-17 22:01:43 +0000

Remove UnplacedType and just use a buffer of DataType


---

diff --git a/src/global.h b/src/global.h
index 2941d26..bd70bad 100644
--- a/src/global.h
+++ b/src/global.h
@@ -461,37 +461,16 @@ typedef struct
 
 
 /*!
- * \brief Unplaced element data.
- */
-typedef struct
-{
-  char *Name[MAX_ELEMENTNAMES];
-    /*!< The elements names;
-     * - description text,
-     * - name on PCB second,
-     * - value third.
-     * see macro.h.
-     */
-    /*!< NB: Duplicated from actual Element, so we can cope with "footprint not found" case */
-  char *footprint;
-  AttributeListType Attributes;
-    /*!< NB: Duplicated from actual Element, so we can cope with "footprint not found" case */
-  ElementType *Element;
-} UnplacedType;
-
-/*!
  * \brief Holds all objects.
  */
 typedef struct
 {
   Cardinal ViaN; /*!< Number of vias. */
   Cardinal ElementN; /*!< Number of elements. */
-  Cardinal UnplacedN; /*!< Number of unplaced elements. */
   Cardinal RatN; /*!< Number of rat-lines. */
   int LayerN; /*!< Number of layers in this board. */
   GList *Via;
   GList *Element;
-  GList *Unplaced;
   GList *Rat;
   rtree_t *via_tree, *element_tree, *pin_tree, *pad_tree, *name_tree[3],	/* for element names */
    *rat_tree;
@@ -645,6 +624,7 @@ typedef struct PCBType
   LibraryType NetlistLib;
   AttributeListType Attributes;
   DataType *Data; /*!< Entire database. */
+  DataType *Unplaced; /*!< Storage location for unplaced elements. */
 
   bool is_footprint; /*!< If set, the user has loaded a footprint, not a pcb. */
 }
diff --git a/src/macro.h b/src/macro.h
index 36c980a..aeccd7e 100644
--- a/src/macro.h
+++ b/src/macro.h
@@ -227,14 +227,6 @@ extern int mem_any_set (unsigned char *, int);
        __iter = __next, __next = g_list_next (__iter), n++) {       \
     ElementType *element = __iter->data;
 
-#define UNPLACED_LOOP(top) do {                                     \
-  GList *__iter, *__next;                                           \
-  Cardinal n = 0;                                                   \
-  for (__iter = (top)->Unplaced, __next = g_list_next (__iter);     \
-       __iter != NULL;                                              \
-       __iter = __next, __next = g_list_next (__iter), n++) {       \
-    UnplacedType *unplaced = __iter->data;
-
 #define RAT_LOOP(top) do {                                          \
   GList *__iter, *__next;                                           \
   Cardinal n = 0;                                                   \
diff --git a/src/mymem.c b/src/mymem.c
index b535053..8144bb7 100644
--- a/src/mymem.c
+++ b/src/mymem.c
@@ -460,46 +460,6 @@ FreeElement (ElementType *data)
 }
 
 /*!
- * \brief Get the next slot for an unplaced element.
- *
- * Allocates memory if necessary.
- */
-UnplacedType *
-GetUnplacedMemory (DataType *data)
-{
-  UnplacedType *new_obj;
-
-  new_obj = g_slice_new0 (UnplacedType);
-
-  if (data != NULL)
-    {
-      data->Unplaced = g_list_append (data->Unplaced, new_obj);
-      data->UnplacedN ++;
-    }
-
-  return new_obj;
-}
-
-void
-FreeUnplaced (UnplacedType *data)
-{
-  g_slice_free (UnplacedType, data);
-}
-
-void
-FreeUnplacedMemory (UnplacedType *unplaced)
-{
-  int i;
-
-  for (i = 0; i < MAX_ELEMENTNAMES; i++)
-    free (unplaced->Name[i]);
-  free (unplaced->footprint);
-
-  FreeElementMemory (unplaced->Element);
-  FreeElement (unplaced->Element);
-}
-
-/*!
  * \brief Get the next slot for a library menu.
  *
  * Allocates memory if necessary.
@@ -762,6 +722,8 @@ FreePCBMemory (PCBType *pcb)
   free (pcb->PrintFilename);
   FreeDataMemory (pcb->Data);
   free (pcb->Data);
+  FreeDataMemory (pcb->Unplaced);
+  free (pcb->Unplaced);
   /* release font symbols */
   for (i = 0; i <= MAX_FONTPOSITION; i++)
     free (pcb->Font.Symbol[i].Line);
@@ -796,12 +758,6 @@ FreeDataMemory (DataType *data)
   }
   END_LOOP;
   g_list_free_full (data->Element, (GDestroyNotify)FreeElement);
-  UNPLACED_LOOP (data);
-  {
-    FreeUnplacedMemory (unplaced);
-  }
-  END_LOOP;
-  g_list_free_full (data->Unplaced, (GDestroyNotify)FreeUnplaced);
   g_list_free_full (data->Rat, (GDestroyNotify)FreeRat);
 
   for (layer = data->Layer, i = 0; i < MAX_ALL_LAYER; layer++, i++)
diff --git a/src/mymem.h b/src/mymem.h
index f8ff937..a37a33f 100644
--- a/src/mymem.h
+++ b/src/mymem.h
@@ -81,7 +81,6 @@ PolygonType * GetPolygonMemory (LayerType *);
 PointType * GetPointMemoryInPolygon (PolygonType *);
 Cardinal *GetHoleIndexMemoryInPolygon (PolygonType *);
 ElementType * GetElementMemory (DataType *);
-UnplacedType * GetUnplacedMemory (DataType *);
 BoxType * GetBoxMemory (BoxListType *);
 ConnectionType * GetConnectionMemory (NetType *);
 NetType * GetNetMemory (NetListType *);
@@ -94,8 +93,6 @@ DrillType * GetDrillInfoDrillMemory (DrillInfoType *);
 void **GetPointerMemory (PointerListType *);
 void FreePolygonMemory (PolygonType *);
 void FreeElementMemory (ElementType *);
-void FreeUnplacedMemory (UnplacedType *);
-void FreeUnplaced (UnplacedType *);
 void FreePCBMemory (PCBType *);
 void FreeBoxListMemory (BoxListType *);
 void FreeNetListListMemory (NetListListType *);
