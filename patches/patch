Bottom: 91e86596f2561ebdc99e3df1e9b1c87c5f01c929
Top:    10d77d31e1378e34d04f213f61b26fe232e28c3e
Author: Peter Clifton <peter@clifton-electronics.co.uk>
Date:   2016-03-12 17:17:39 +0000

Fixup some 3D code warnings


---

diff --git a/src/hid/step/object3d_step.c b/src/hid/step/object3d_step.c
index 6f67e90..a443c4f 100644
--- a/src/hid/step/object3d_step.c
+++ b/src/hid/step/object3d_step.c
@@ -379,7 +379,7 @@ step_absr_fragment (step_file *step,
                     step_id_list styled_item_list,
                     step_id geometric_representation_context_identifier,
                     step_id product_definition_shape_identifier,
-                    step_id *shape_representation,
+//                    step_id *shape_representation,
                     step_id *shape_definition_representation,
                     step_id *placement_axis)
 {
@@ -417,7 +417,7 @@ object3d_list_export_to_step_part (GList *objects, const char *filename)
   step_file *step;
   step_id geometric_representation_context;
   step_id product_definition_shape;
-  step_id shape_representation;
+//  step_id shape_representation;
   step_id shape_definition_representation;
   step_id placement_axis;
   step_id comp_brep;
@@ -480,7 +480,7 @@ object3d_list_export_to_step_part (GList *objects, const char *filename)
                       styled_items,
                       geometric_representation_context,
                       product_definition_shape,
-                      &shape_representation,
+//                      &shape_representation,
                       &shape_definition_representation,
                       &placement_axis);
 
@@ -508,7 +508,7 @@ object3d_to_step_fragment (step_file *step, object3d *object, char *part_id, cha
                       styled_item_identifiers,
                       geometric_representation_context_identifier,
                       product_definition_shape_identifier,
-                      NULL /* shape_representation */,
+//                      NULL /* shape_representation */,
                       shape_definition_representation,
                       placement_axis);
 }
diff --git a/src/hid/step/step.c b/src/hid/step/step.c
index a79b3c2..4c5af27 100644
--- a/src/hid/step/step.c
+++ b/src/hid/step/step.c
@@ -61,7 +61,7 @@ Name of the STEP output file. Can contain a path.
 %end-doc
 */
   {"stepfile", "STEP output file",
-   HID_String, 0, 0, {0, 0, 0}, 0, 0},
+   HID_String, 0, 0, {0, 0, 0, 0}, 0, 0, 0},
 #define HA_stepfile 0
 };
 
@@ -83,6 +83,7 @@ step_get_export_options (int *n)
   return step_attribute_list;
 }
 
+#if 0
 /* NB: Result is in mm */
 static void
 parse_cartesian_point_3d_string (const char *str, double *x, double *y, double *z)
@@ -103,6 +104,7 @@ parse_rotation_string (const char *str, double *rotation)
 {
   *rotation = 0.0;
 }
+#endif
 
 static void
 parse_position_attribute (ElementType *element, char *attr_name, double *res)
@@ -133,7 +135,7 @@ parse_numeric_attribute (ElementType *element, char *attr_name, double *res)
 static void
 step_do_export (HID_Attr_Val * options)
 {
-  int i;
+  unsigned int i;
   const char *filename;
   const char *temp_pcb_filename = "_pcb.step";
   GList *board_outline_list;
@@ -275,11 +277,13 @@ step_do_export (HID_Attr_Val * options)
         rx = 1.0, ry = 0.0, rz = 0.0;
 #endif
 
+#if 0
         /* XXX: Should parse a unit suffix, e.g. "degrees" */
         attribute = AttributeGet (element, "PCB::rotation");
         if (attribute == NULL)
           continue;
         parse_rotation_string (attribute, &rotation);
+#endif
 
         /* XXX: QUICKER TO CODE INDIVIDULAL VALUES NOT SPACE SEPARATED */
         parse_position_attribute (element, "PCB::3d_model::origin::X", &ox);
