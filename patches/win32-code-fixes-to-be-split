Bottom: 185997359f4726f7b4299a7b00cfb91254f6c9e9
Top:    3d83468ba8288c383e261b52b69103899cfbee71
Author: Peter Clifton <peter@clifton-electronics.co.uk>
Date:   2016-02-24 23:22:28 +0000

Win32 code fixes (TO BE SPLIT INTO SEPARATE PATCHES)


---

diff --git a/src/compat.c b/src/compat.c
index 24e6625..fb544fb 100644
--- a/src/compat.c
+++ b/src/compat.c
@@ -63,6 +63,7 @@ random (void)
 #endif
 
 #if !defined(HAVE_DLFCN_H) && defined(WIN32)
+#define WIN32_LEAN_AND_MEAN 1
 #include <windows.h>
 
 void *
diff --git a/src/hid/common/hidgl.c b/src/hid/common/hidgl.c
index 51adc6c..4ad9b2d 100644
--- a/src/hid/common/hidgl.c
+++ b/src/hid/common/hidgl.c
@@ -35,6 +35,7 @@
 #ifdef WIN32
 #   define WIN32_LEAN_AND_MEAN 1
 #   include <windows.h>
+#   define _GLUfuncptr void *
 #else
     /* The Linux OpenGL ABI 1.0 spec requires that we define
      * GL_GLEXT_PROTOTYPES before including gl.h or glx.h for extensions
diff --git a/src/hid/common/hidgl_package_acy_resistor.c b/src/hid/common/hidgl_package_acy_resistor.c
index 97434e4..5e5aedb 100644
--- a/src/hid/common/hidgl_package_acy_resistor.c
+++ b/src/hid/common/hidgl_package_acy_resistor.c
@@ -12,7 +12,9 @@
 #include <gdk-pixbuf/gdk-pixbuf.h>
 #include "data.h"
 
-#ifndef WIN32
+#ifdef WIN32
+#   define WIN32_LEAN_AND_MEAN 1
+#else
 /* The Linux OpenGL ABI 1.0 spec requires that we define
  * GL_GLEXT_PROTOTYPES before including gl.h or glx.h for extensions
  * in order to get prototypes:
diff --git a/src/hid/common/hidinit.c b/src/hid/common/hidinit.c
index b964d24..a809ead 100644
--- a/src/hid/common/hidinit.c
+++ b/src/hid/common/hidinit.c
@@ -16,6 +16,7 @@
 #include <unistd.h>
 
 #if defined(WIN32) && defined(HAVE_WINDOWS_H)
+#define WIN32_LEAN_AND_MEAN 1
 #include <windows.h>
 #endif
 
diff --git a/src/hid/common/object3d.c b/src/hid/common/object3d.c
index 4553186..821b928 100644
--- a/src/hid/common/object3d.c
+++ b/src/hid/common/object3d.c
@@ -40,7 +40,9 @@
 #endif
 
 
-#ifndef WIN32
+#ifdef WIN32
+#   define WIN32_LEAN_AND_MEAN 1
+#else
 /* The Linux OpenGL ABI 1.0 spec requires that we define
  * GL_GLEXT_PROTOTYPES before including gl.h or glx.h for extensions
  * in order to get prototypes:
diff --git a/src/hid/gtk/gtkhid-gl.c b/src/hid/gtk/gtkhid-gl.c
index 6e8c5d3..ad37e0c 100644
--- a/src/hid/gtk/gtkhid-gl.c
+++ b/src/hid/gtk/gtkhid-gl.c
@@ -23,7 +23,9 @@
 #include "hid/common/face3d.h"
 #include "hid/common/object3d.h"
 
-#ifndef WIN32
+#ifdef WIN32
+#   define WIN32_LEAN_AND_MEAN 1
+#else
 /* The Linux OpenGL ABI 1.0 spec requires that we define
  * GL_GLEXT_PROTOTYPES before including gl.h or glx.h for extensions
  * in order to get prototypes:
diff --git a/src/hid/gtk/gtkhid-main.c b/src/hid/gtk/gtkhid-main.c
index 763f493..53c2211 100644
--- a/src/hid/gtk/gtkhid-main.c
+++ b/src/hid/gtk/gtkhid-main.c
@@ -2095,6 +2095,7 @@ REGISTER_FLAGS (ghid_main_flag_list)
  * footprint libraries.
  */
 #ifdef WIN32
+#define WIN32_LEAN_AND_MEAN 1
 #include <windows.h>
 #include <winreg.h>
 #endif
diff --git a/src/hid/gtk/gui-library-window.c b/src/hid/gtk/gui-library-window.c
index 1a9a4c1..2b81849 100644
--- a/src/hid/gtk/gui-library-window.c
+++ b/src/hid/gtk/gui-library-window.c
@@ -67,6 +67,8 @@
 #include <dmalloc.h>
 #endif
 
+#include <libgen.h> /* For basename() */
+
 static GtkWidget *library_window;
 
 #include "gui-pinout-preview.h"
@@ -621,7 +623,9 @@ create_lib_tree_model (GhidLibraryWindow * library_window)
 	tok_start = tok_end;
 	if (*tok_start == '/')
 	  tok_start++;
-	tok_end = strchrnul(tok_start, '/');
+	tok_end = strchr(tok_start, '/');
+        if (tok_end == NULL)
+          tok_end = tok_start + strlen (tok_start);
       }
     while (*tok_start != '\0');
 
diff --git a/src/hid/step/object3d_step.c b/src/hid/step/object3d_step.c
index 6879a98..f802839 100644
--- a/src/hid/step/object3d_step.c
+++ b/src/hid/step/object3d_step.c
@@ -55,6 +55,7 @@ start_ap214_file (const char *filename)
   FILE *f;
   time_t currenttime;
   struct tm utc;
+  struct tm *tmp;
 
   f = fopen (filename, "w");
   if (f == NULL)
@@ -64,7 +65,9 @@ start_ap214_file (const char *filename)
     }
 
   currenttime = time (NULL);
-  gmtime_r (&currenttime, &utc);
+//  gmtime_r (&currenttime, &utc);
+  tmp =  gmtime (&currenttime);
+  utc = *tmp;
 
   fprintf (f, "ISO-10303-21;\n");
   fprintf (f, "HEADER;\n");
diff --git a/src/hid/step/step.c b/src/hid/step/step.c
index c109dc5..4b43d07 100644
--- a/src/hid/step/step.c
+++ b/src/hid/step/step.c
@@ -132,8 +132,11 @@ step_start_file (FILE *f, const char *filename)
 {
   time_t currenttime = time (NULL);
   struct tm utc;
+  struct tm *tmp;
 
-  gmtime_r (&currenttime, &utc);
+//  gmtime_r (&currenttime, &utc);
+  tmp =  gmtime (&currenttime);
+  utc = *tmp;
 
   fprintf (f, "ISO-10303-21;\n");
   fprintf (f, "HEADER;\n");
diff --git a/src/lrealpath.c b/src/lrealpath.c
index 8977b40..29910ea 100644
--- a/src/lrealpath.c
+++ b/src/lrealpath.c
@@ -66,7 +66,7 @@ extern char *canonicalize_file_name (const char *);
 #else
   /* cygwin has realpath, so it won't get here.  */ 
 # if defined (_WIN32)
-#  define WIN32_LEAN_AND_MEAN
+#  define WIN32_LEAN_AND_MEAN 1
 #  include <windows.h> /* for GetFullPathName */
 # endif
 #endif
diff --git a/src/polygon.c b/src/polygon.c
index 4c8ea80..ae36304 100644
--- a/src/polygon.c
+++ b/src/polygon.c
@@ -2321,12 +2321,13 @@ pv_outline_callback (const BoxType * b, void *cl)
 
       if (element_name != NULL && pin_number != NULL)
         {
-          char *tmp;
+          feature_name = NULL; // Win32
+//          char *tmp;
 
-          feature_name = tmp = malloc (strlen (element_name) + 1 + strlen (pin_number) + 1);
-          tmp = stpcpy (tmp, element_name);
-          *(tmp++) = '-';
-          tmp = stpcpy (tmp, pin_number);
+//          feature_name = tmp = malloc (strlen (element_name) + 1 + strlen (pin_number) + 1);
+//          tmp = stpcpy (tmp, element_name);
+//          *(tmp++) = '-';
+//          tmp = stpcpy (tmp, pin_number);
         }
       else
         {
