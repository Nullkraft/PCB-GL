Bottom: 1eacd0bed51e612b906650c8fc94b461a029f8dc
Top:    6afbe7d70b7666d2bd3b5a4ddea49307f9be0d25
Author: Peter Clifton <peter@clifton-electronics.co.uk>
Date:   2016-01-07 02:19:06 +0000

Add HID_DRAW * parameters to various Draw*() function called from the GTK hid


---

diff --git a/src/draw.c b/src/draw.c
index 9489775..73a83b0 100644
--- a/src/draw.c
+++ b/src/draw.c
@@ -83,7 +83,7 @@ static HID_DRAW *hid_draw = NULL;
 static void DrawEverything (const BoxType *);
 static void AddPart (void *);
 /* static */ void DrawEMark (ElementType *, Coord, Coord, bool);
-/* static */ void DrawRats (const BoxType *);
+/* static */ void DrawRats (HID_DRAW *hid_draw, const BoxType *);
 
 static void
 set_object_color (AnyObjectType *obj, char *warn_color, char *selected_color,
@@ -291,7 +291,7 @@ PrintAssembly (int side, const BoxType * drawn_area)
   hid_draw_set_draw_faded (Output.fgGC, 0);
 
   /* draw package */
-  DrawSilk (side, drawn_area);
+  DrawSilk (hid_draw, side, drawn_area);
   doing_assy = false;
 }
 
@@ -395,13 +395,13 @@ DrawEverything (const BoxType *drawn_area)
 
   if (hid_draw_set_layer (hid_draw, "topsilk", SL (SILK, TOP), 0))
     {
-      DrawSilk (TOP_SIDE, drawn_area);
+      DrawSilk (hid_draw, TOP_SIDE, drawn_area);
       hid_draw_end_layer (hid_draw);
     }
 
   if (hid_draw_set_layer (hid_draw, "bottomsilk", SL (SILK, BOTTOM), 0))
     {
-      DrawSilk (BOTTOM_SIDE, drawn_area);
+      DrawSilk (hid_draw, BOTTOM_SIDE, drawn_area);
       hid_draw_end_layer (hid_draw);
     }
 
@@ -414,7 +414,7 @@ DrawEverything (const BoxType *drawn_area)
       /* Draw rat lines on top */
       if (hid_draw_set_layer (hid_draw, "rats", SL (RATS, 0), 0))
         {
-          DrawRats(drawn_area);
+          DrawRats (hid_draw, drawn_area);
           hid_draw_end_layer (hid_draw);
         }
     }
@@ -523,8 +523,11 @@ pad_mask_callback (const BoxType * b, void *cl)
  */
 
 void
-DrawSilk (int side, const BoxType * drawn_area)
+DrawSilk (HID_DRAW *new_hid_draw, int side, const BoxType * drawn_area)
 {
+  HID_DRAW *old_hid_draw = hid_draw;
+  hid_draw = new_hid_draw;
+
 #if 0
   /* This code is used when you want to mask silk to avoid exposed
      pins and pads.  We decided it was a bad idea to do this
@@ -558,6 +561,8 @@ DrawSilk (int side, const BoxType * drawn_area)
     }
   hid_draw_use_mask (hid_draw, HID_MASK_OFF);
 #endif
+
+  hid_draw = old_hid_draw;
 }
 
 
@@ -681,8 +686,11 @@ DrawPaste (int side, const BoxType *drawn_area)
 }
 
 /* static */ void
-DrawRats (const BoxType *drawn_area)
+DrawRats (HID_DRAW *new_hid_draw, const BoxType *drawn_area)
 {
+  HID_DRAW *old_hid_draw = hid_draw;
+  hid_draw = new_hid_draw;
+
   /*
    * XXX lesstif allows positive AND negative drawing in HID_MASK_CLEAR.
    * XXX gtk only allows negative drawing.
@@ -694,6 +702,8 @@ DrawRats (const BoxType *drawn_area)
   r_search (PCB->Data->rat_tree, drawn_area, NULL, rat_callback, NULL);
   if (hid_draw_can_draw_in_mask_clear (hid_draw))
     hid_draw_use_mask (hid_draw, HID_MASK_OFF);
+
+  hid_draw = old_hid_draw;
 }
 
 /* ---------------------------------------------------------------------------
diff --git a/src/draw.h b/src/draw.h
index a5a49ab..e0688ee 100644
--- a/src/draw.h
+++ b/src/draw.h
@@ -68,7 +68,7 @@ void EraseObject (int, void *, void *);
 
 void DrawLayerGroup (int side, const BoxType *drawn_area);
 void DrawPaste (int side, const BoxType *drawn_area);
-void DrawSilk (int side, const BoxType *drawn_area);
+void DrawSilk (HID_DRAW *hid_draw, int side, const BoxType *drawn_area);
 void DrawMask (int side, const BoxType *drawn_area);
 void DrawHoles (bool draw_plated, bool draw_unplated, const BoxType *drawn_area);
 void PrintAssembly (int side, const BoxType *drawn_area);
@@ -81,7 +81,7 @@ void DrawPlainVia (PinType *, bool);
 void DrawRegularText (LayerType *, TextType *);
 void DrawEMark (ElementType *, Coord, Coord, bool);
 void DrawHole (PinType *);
-void DrawRats (const BoxType *);
+void DrawRats (HID_DRAW *hid_draw, const BoxType *);
 /* TEMPORARY */
 
 #endif
diff --git a/src/hid/gtk/gtkhid-gl.c b/src/hid/gtk/gtkhid-gl.c
index 7d662c2..02de97b 100644
--- a/src/hid/gtk/gtkhid-gl.c
+++ b/src/hid/gtk/gtkhid-gl.c
@@ -1651,7 +1651,7 @@ ghid_draw_everything (BoxType *drawn_area)
 
   if (!TEST_FLAG (CHECKPLANESFLAG, PCB) &&
       hid_draw_set_layer (&ghid_graphics, "invisible", SL (INVISIBLE, 0), 0)) {
-    DrawSilk (side, drawn_area);
+    DrawSilk (&ghid_graphics, side, drawn_area);
 
     if (global_view_2d)
       r_search (PCB->Data->pad_tree, drawn_area, NULL, pad_callback, &side);
@@ -1725,7 +1725,7 @@ ghid_draw_everything (BoxType *drawn_area)
 
   if (hid_draw_set_layer (&ghid_graphics, SWAP_IDENT ? "bottomsilk" : "topsilk",
                       SWAP_IDENT ? SL (SILK, BOTTOM) : SL (SILK, TOP), 0)) {
-      DrawSilk (side, drawn_area);
+      DrawSilk (&ghid_graphics, side, drawn_area);
       hid_draw_end_layer (&ghid_graphics);
   }
 
@@ -1735,7 +1735,7 @@ ghid_draw_everything (BoxType *drawn_area)
 
   /* Draw rat lines on top */
   if (PCB->RatOn && hid_draw_set_layer (&ghid_graphics, "rats", SL (RATS, 0), 0)) {
-    DrawRats(drawn_area);
+    DrawRats (&ghid_graphics, drawn_area);
     hid_draw_end_layer (&ghid_graphics);
   }
