Bottom: 4a185fb64a3a51c69a4d3fba53542a187209dc43
Top:    cd8de61f7908ff62a72e0be2e14c3e23f8488887
Author: Peter Clifton <peter@clifton-electronics.co.uk>
Date:   2015-04-21 23:35:12 +0100

Hack to allow ignoring the lock status of objects..

Boy do I regret not refactoring this to some function or macro TEST_LOCK (...)


---

diff --git a/src/action.c b/src/action.c
index 8ffa10b..5b345a0 100644
--- a/src/action.c
+++ b/src/action.c
@@ -995,7 +995,7 @@ NotifyMode (void)
 	  {
 	    type = SearchScreen (Note.X, Note.Y, test, &ptr1, &ptr2, &ptr3);
 	    if (!Note.Hit && (type & MOVE_TYPES) &&
-		!TEST_FLAG (LOCKFLAG, (PinType *) ptr2))
+		(PCB->ViolateLock || !TEST_FLAG (LOCKFLAG, (PinType *) ptr2)))
 	      {
 		Note.Hit = type;
 		Note.ptr1 = ptr1;
@@ -1460,8 +1460,9 @@ NotifyMode (void)
 
 	    if (Crosshair.AttachedObject.Type != NO_TYPE)
 	      {
-		if (TEST_FLAG (LOCKFLAG, (PolygonType *)
-			       Crosshair.AttachedObject.Ptr2))
+		if (!PCB->ViolateLock &&
+		    TEST_FLAG (LOCKFLAG, (PolygonType *)
+		               Crosshair.AttachedObject.Ptr2))
 		  {
 		    Message (_("Sorry, the object is locked\n"));
 		    Crosshair.AttachedObject.Type = NO_TYPE;
@@ -1604,7 +1605,7 @@ NotifyMode (void)
 	   SearchScreen (Note.X, Note.Y, REMOVE_TYPES, &ptr1, &ptr2,
 			 &ptr3)) != NO_TYPE)
 	{
-	  if (TEST_FLAG (LOCKFLAG, (LineType *) ptr2))
+	  if (!PCB->ViolateLock && TEST_FLAG (LOCKFLAG, (LineType *) ptr2))
 	    {
 	      Message (_("Sorry, the object is locked\n"));
 	      break;
@@ -1662,6 +1663,7 @@ NotifyMode (void)
 	    if (Crosshair.AttachedObject.Type != NO_TYPE)
 	      {
 		if (Settings.Mode == MOVE_MODE &&
+		    !PCB->ViolateLock &&
 		    TEST_FLAG (LOCKFLAG, (PinType *)
 			       Crosshair.AttachedObject.Ptr2))
 		  {
@@ -1716,7 +1718,8 @@ NotifyMode (void)
 
 	  if (Crosshair.AttachedObject.Type != NO_TYPE)
 	    {
-	      if (TEST_FLAG (LOCKFLAG, (PolygonType *)
+	      if (!PCB->ViolateLock &&
+		TEST_FLAG (LOCKFLAG, (PolygonType *)
 			     Crosshair.AttachedObject.Ptr2))
 		{
 		  Message (_("Sorry, the object is locked\n"));
@@ -2405,7 +2408,8 @@ ActionDisperseElements (int argc, char **argv, Coord x, Coord y)
      * going to be used either with a brand new design or a scratch
      * design holding some new components
      */
-    if (!TEST_FLAG (LOCKFLAG, element) && (all || TEST_FLAG (SELECTEDFLAG, element)))
+    if ((PCB->ViolateLock || !TEST_FLAG (LOCKFLAG, element)) &&
+        (all || TEST_FLAG (SELECTEDFLAG, element)))
       {
 
 	/* figure out how much to move the element */
@@ -3354,7 +3358,7 @@ ActionRenumber (int argc, char **argv, Coord x, Coord y)
   lock_cnt = 0;
   ELEMENT_LOOP (PCB->Data);
   {
-    if (TEST_FLAG (LOCKFLAG, element->Name) || TEST_FLAG (LOCKFLAG, element))
+    if (!PCB->ViolateLock && (TEST_FLAG (LOCKFLAG, element->Name) || TEST_FLAG (LOCKFLAG, element)))
       {
 	/* 
 	 * add to the list of locked elements which we won't try to
@@ -3635,7 +3639,8 @@ ActionRipUp (int argc, char **argv, Coord x, Coord y)
 	case F_All:
 	  ALLLINE_LOOP (PCB->Data);
 	  {
-	    if (TEST_FLAG (AUTOFLAG, line) && !TEST_FLAG (LOCKFLAG, line))
+	    if (TEST_FLAG (AUTOFLAG, line) &&
+	        (PCB->ViolateLock || !TEST_FLAG (LOCKFLAG, line)))
 	      {
 		RemoveObject (LINE_TYPE, layer, line, line);
 		changed = true;
@@ -3644,7 +3649,8 @@ ActionRipUp (int argc, char **argv, Coord x, Coord y)
 	  ENDALL_LOOP;
 	  ALLARC_LOOP (PCB->Data);
 	  {
-	    if (TEST_FLAG (AUTOFLAG, arc) && !TEST_FLAG (LOCKFLAG, arc))
+	    if (TEST_FLAG (AUTOFLAG, arc) &&
+	        (PCB->ViolateLock || !TEST_FLAG (LOCKFLAG, arc)))
 	      {
 		RemoveObject (ARC_TYPE, layer, arc, arc);
 		changed = true;
@@ -3653,7 +3659,8 @@ ActionRipUp (int argc, char **argv, Coord x, Coord y)
 	  ENDALL_LOOP;
 	  VIA_LOOP (PCB->Data);
 	  {
-	    if (TEST_FLAG (AUTOFLAG, via) && !TEST_FLAG (LOCKFLAG, via))
+	    if (TEST_FLAG (AUTOFLAG, via) &&
+	        (PCB->ViolateLock || !TEST_FLAG (LOCKFLAG, via)))
 	      {
 		RemoveObject (VIA_TYPE, via, via, via);
 		changed = true;
@@ -3670,8 +3677,8 @@ ActionRipUp (int argc, char **argv, Coord x, Coord y)
 	case F_Selected:
 	  VISIBLELINE_LOOP (PCB->Data);
 	  {
-	    if (TEST_FLAGS (AUTOFLAG | SELECTEDFLAG, line)
-		&& !TEST_FLAG (LOCKFLAG, line))
+	    if (TEST_FLAGS (AUTOFLAG | SELECTEDFLAG, line) &&
+	        (PCB->ViolateLock || !TEST_FLAG (LOCKFLAG, line)))
 	      {
 		RemoveObject (LINE_TYPE, layer, line, line);
 		changed = true;
@@ -3681,8 +3688,8 @@ ActionRipUp (int argc, char **argv, Coord x, Coord y)
 	  if (PCB->ViaOn)
 	    VIA_LOOP (PCB->Data);
 	  {
-	    if (TEST_FLAGS (AUTOFLAG | SELECTEDFLAG, via)
-		&& !TEST_FLAG (LOCKFLAG, via))
+	    if (TEST_FLAGS (AUTOFLAG | SELECTEDFLAG, via) &&
+	        (PCB->ViolateLock || !TEST_FLAG (LOCKFLAG, via)))
 	      {
 		RemoveObject (VIA_TYPE, via, via, via);
 		changed = true;
@@ -4069,7 +4076,7 @@ ActionChangeSize (int argc, char **argv, Coord x, Coord y)
 	    if ((type =
 		 SearchScreen (Crosshair.X, Crosshair.Y, CHANGESIZE_TYPES,
 			       &ptr1, &ptr2, &ptr3)) != NO_TYPE)
-	      if (TEST_FLAG (LOCKFLAG, (PinType *) ptr2))
+	      if (!PCB->ViolateLock && TEST_FLAG (LOCKFLAG, (PinType *) ptr2))
 		Message (_("Sorry, the object is locked\n"));
 	    if (ChangeObjectSize (type, ptr1, ptr2, ptr3, value, absolute))
 	      SetChangedFlag (true);
@@ -6793,7 +6800,7 @@ ChangeFlag (char *what, char *flag_name, int value, char *cmd_name)
 	if ((type =
 	     SearchScreen (Crosshair.X, Crosshair.Y, CHANGESIZE_TYPES,
 			   &ptr1, &ptr2, &ptr3)) != NO_TYPE)
-	  if (TEST_FLAG (LOCKFLAG, (PinType *) ptr2))
+	  if (!PCB->ViolateLock && TEST_FLAG (LOCKFLAG, (PinType *) ptr2))
 	    Message (_("Sorry, the object is locked\n"));
 	if (set_object (type, ptr1, ptr2, ptr3))
 	  SetChangedFlag (true);
diff --git a/src/change.c b/src/change.c
index 88d4b9f..f34fca2 100644
--- a/src/change.c
+++ b/src/change.c
@@ -390,7 +390,7 @@ ChangeViaSize (PinType *Via)
 {
   Coord value = Absolute ? Absolute : Via->Thickness + Delta;
 
-  if (TEST_FLAG (LOCKFLAG, Via))
+  if (!PCB->ViolateLock && TEST_FLAG (LOCKFLAG, Via))
     return (NULL);
   if (!TEST_FLAG (HOLEFLAG, Via) && value <= MAX_PINORVIASIZE &&
       value >= MIN_PINORVIASIZE &&
@@ -425,7 +425,7 @@ ChangeVia2ndSize (PinType *Via)
 {
   Coord value = (Absolute) ? Absolute : Via->DrillingHole + Delta;
 
-  if (TEST_FLAG (LOCKFLAG, Via))
+  if (!PCB->ViolateLock && TEST_FLAG (LOCKFLAG, Via))
     return (NULL);
   if (value <= MAX_PINORVIASIZE &&
       value >= MIN_PINORVIAHOLE && (TEST_FLAG (HOLEFLAG, Via) ||
@@ -458,7 +458,7 @@ ChangeViaClearSize (PinType *Via)
 {
   Coord value = (Absolute) ? Absolute : Via->Clearance + Delta;
 
-  if (TEST_FLAG (LOCKFLAG, Via))
+  if (!PCB->ViolateLock && TEST_FLAG (LOCKFLAG, Via))
     return (NULL);
   value = MIN (MAX_LINESIZE, value);
   if (value < 0)
@@ -492,7 +492,7 @@ ChangePinSize (ElementType *Element, PinType *Pin)
 {
   Coord value = (Absolute) ? Absolute : Pin->Thickness + Delta;
 
-  if (TEST_FLAG (LOCKFLAG, Pin))
+  if (!PCB->ViolateLock && TEST_FLAG (LOCKFLAG, Pin))
     return (NULL);
   if (!TEST_FLAG (HOLEFLAG, Pin) && value <= MAX_PINORVIASIZE &&
       value >= MIN_PINORVIASIZE &&
@@ -524,7 +524,7 @@ ChangePinClearSize (ElementType *Element, PinType *Pin)
 {
   Coord value = (Absolute) ? Absolute : Pin->Clearance + Delta;
 
-  if (TEST_FLAG (LOCKFLAG, Pin))
+  if (!PCB->ViolateLock && TEST_FLAG (LOCKFLAG, Pin))
     return (NULL);
   value = MIN (MAX_LINESIZE, value);
   if (value < 0)
@@ -556,7 +556,7 @@ ChangePadSize (ElementType *Element, PadType *Pad)
 {
   Coord value = (Absolute) ? Absolute : Pad->Thickness + Delta;
 
-  if (TEST_FLAG (LOCKFLAG, Pad))
+  if (!PCB->ViolateLock && TEST_FLAG (LOCKFLAG, Pad))
     return (NULL);
   if (value <= MAX_PADSIZE && value >= MIN_PADSIZE && value != Pad->Thickness)
     {
@@ -585,7 +585,7 @@ ChangePadClearSize (ElementType *Element, PadType *Pad)
 {
   Coord value = (Absolute) ? Absolute : Pad->Clearance + Delta;
 
-  if (TEST_FLAG (LOCKFLAG, Pad))
+  if (!PCB->ViolateLock && TEST_FLAG (LOCKFLAG, Pad))
     return (NULL);
   value = MIN (MAX_LINESIZE, value);
   if (value < 0)
@@ -618,7 +618,7 @@ ChangeElement2ndSize (ElementType *Element)
   bool changed = false;
   Coord value;
 
-  if (TEST_FLAG (LOCKFLAG, Element))
+  if (!PCB->ViolateLock && TEST_FLAG (LOCKFLAG, Element))
     return (NULL);
   PIN_LOOP (Element);
   {
@@ -660,7 +660,7 @@ ChangePin2ndSize (ElementType *Element, PinType *Pin)
 {
   Coord value = (Absolute) ? Absolute : Pin->DrillingHole + Delta;
 
-  if (TEST_FLAG (LOCKFLAG, Pin))
+  if (!PCB->ViolateLock && TEST_FLAG (LOCKFLAG, Pin))
     return (NULL);
   if (value <= MAX_PINORVIASIZE &&
       value >= MIN_PINORVIAHOLE && (TEST_FLAG (HOLEFLAG, Pin) ||
@@ -693,7 +693,7 @@ ChangeLineSize (LayerType *Layer, LineType *Line)
 {
   Coord value = (Absolute) ? Absolute : Line->Thickness + Delta;
 
-  if (TEST_FLAG (LOCKFLAG, Line))
+  if (!PCB->ViolateLock && TEST_FLAG (LOCKFLAG, Line))
     return (NULL);
   if (value <= MAX_LINESIZE && value >= MIN_LINESIZE &&
       value != Line->Thickness)
@@ -721,7 +721,8 @@ ChangeLineClearSize (LayerType *Layer, LineType *Line)
 {
   Coord value = (Absolute) ? Absolute : Line->Clearance + Delta;
 
-  if (TEST_FLAG (LOCKFLAG, Line) || !TEST_FLAG (CLEARLINEFLAG, Line))
+  if ((!PCB->ViolateLock && TEST_FLAG (LOCKFLAG, Line)) ||
+      !TEST_FLAG (CLEARLINEFLAG, Line))
     return (NULL);
   value = MIN (MAX_LINESIZE, MAX (value, PCB->Bloat * 2 + 2));
   if (value != Line->Clearance)
@@ -774,7 +775,7 @@ ChangeArcSize (LayerType *Layer, ArcType *Arc)
 {
   Coord value = (Absolute) ? Absolute : Arc->Thickness + Delta;
 
-  if (TEST_FLAG (LOCKFLAG, Arc))
+  if (!PCB->ViolateLock && TEST_FLAG (LOCKFLAG, Arc))
     return (NULL);
   if (value <= MAX_LINESIZE && value >= MIN_LINESIZE &&
       value != Arc->Thickness)
@@ -802,7 +803,8 @@ ChangeArcClearSize (LayerType *Layer, ArcType *Arc)
 {
   Coord value = (Absolute) ? Absolute : Arc->Clearance + Delta;
 
-  if (TEST_FLAG (LOCKFLAG, Arc) || !TEST_FLAG (CLEARLINEFLAG, Arc))
+  if ((!PCB->ViolateLock && TEST_FLAG (LOCKFLAG, Arc)) ||
+      !TEST_FLAG (CLEARLINEFLAG, Arc))
     return (NULL);
   value = MIN (MAX_LINESIZE, MAX (value, PCB->Bloat * 2 + 2));
   if (value != Arc->Clearance)
@@ -837,7 +839,7 @@ ChangeTextSize (LayerType *Layer, TextType *Text)
               (double)(Absolute != 0 ? Absolute : Delta)
                 / (double)FONT_CAPHEIGHT * 100.;
 
-  if (TEST_FLAG (LOCKFLAG, Text))
+  if (!PCB->ViolateLock && TEST_FLAG (LOCKFLAG, Text))
     return (NULL);
   if (value <= MAX_TEXTSCALE && value >= MIN_TEXTSCALE &&
       value != Text->Scale)
@@ -866,7 +868,7 @@ ChangeElementSize (ElementType *Element)
   Coord value;
   bool changed = false;
 
-  if (TEST_FLAG (LOCKFLAG, Element))
+  if (!PCB->ViolateLock && TEST_FLAG (LOCKFLAG, Element))
     return (NULL);
   if (PCB->ElementOn)
     EraseElement (Element);
@@ -914,7 +916,7 @@ ChangeElementNameSize (ElementType *Element)
               (double)(Absolute != 0 ? Absolute : Delta)
                 / (double)FONT_CAPHEIGHT * 100.;
 
-  if (TEST_FLAG (LOCKFLAG, &Element->Name[0]))
+  if (!PCB->ViolateLock && TEST_FLAG (LOCKFLAG, &Element->Name[0]))
     return (NULL);
   if (value <= MAX_TEXTSCALE && value >= MIN_TEXTSCALE)
     {
@@ -1040,7 +1042,7 @@ ChangeElementText (PCBType *pcb, DataType *data, ElementType *Element, int which
 static void *
 ChangeElementName (ElementType *Element)
 {
-  if (TEST_FLAG (LOCKFLAG, &Element->Name[0]))
+  if (!PCB->ViolateLock && TEST_FLAG (LOCKFLAG, &Element->Name[0]))
     return (NULL);
   if (NAME_INDEX (PCB) == NAMEONPCB_INDEX)
     {
@@ -1066,7 +1068,7 @@ ChangeTextName (LayerType *Layer, TextType *Text)
 {
   char *old = Text->TextString;
 
-  if (TEST_FLAG (LOCKFLAG, Text))
+  if (!PCB->ViolateLock && TEST_FLAG (LOCKFLAG, Text))
     return (NULL);
   EraseText (Layer, Text);
   RestoreToPolygon (PCB->Data, TEXT_TYPE, Layer, Text);
@@ -1098,7 +1100,7 @@ ChangeLayoutName (char *Name)
 bool
 ChangeElementSide (ElementType *Element, Coord yoff)
 {
-  if (TEST_FLAG (LOCKFLAG, Element))
+  if (!PCB->ViolateLock && TEST_FLAG (LOCKFLAG, Element))
     return (false);
   EraseElement (Element);
   AddObjectToMirrorUndoList (ELEMENT_TYPE, Element, Element, Element, yoff);
@@ -1125,7 +1127,7 @@ ChangeLayerName (LayerType *Layer, char *Name)
 static void *
 ChangeLineJoin (LayerType *Layer, LineType *Line)
 {
-  if (TEST_FLAG (LOCKFLAG, Line))
+  if (!PCB->ViolateLock && TEST_FLAG (LOCKFLAG, Line))
     return (NULL);
   EraseLine (Line);
   if (TEST_FLAG(CLEARLINEFLAG, Line))
@@ -1150,7 +1152,8 @@ ChangeLineJoin (LayerType *Layer, LineType *Line)
 static void *
 SetLineJoin (LayerType *Layer, LineType *Line)
 {
-  if (TEST_FLAG (LOCKFLAG, Line) || TEST_FLAG (CLEARLINEFLAG, Line))
+  if ((!PCB->ViolateLock && TEST_FLAG (LOCKFLAG, Line)) ||
+      TEST_FLAG (CLEARLINEFLAG, Line))
     return (NULL);
   return ChangeLineJoin (Layer, Line);
 }
@@ -1161,7 +1164,8 @@ SetLineJoin (LayerType *Layer, LineType *Line)
 static void *
 ClrLineJoin (LayerType *Layer, LineType *Line)
 {
-  if (TEST_FLAG (LOCKFLAG, Line) || !TEST_FLAG (CLEARLINEFLAG, Line))
+  if ((!PCB->ViolateLock && TEST_FLAG (LOCKFLAG, Line)) 
+      || !TEST_FLAG (CLEARLINEFLAG, Line))
     return (NULL);
   return ChangeLineJoin (Layer, Line);
 }
@@ -1172,7 +1176,7 @@ ClrLineJoin (LayerType *Layer, LineType *Line)
 static void *
 ChangeArcJoin (LayerType *Layer, ArcType *Arc)
 {
-  if (TEST_FLAG (LOCKFLAG, Arc))
+  if (!PCB->ViolateLock && TEST_FLAG (LOCKFLAG, Arc))
     return (NULL);
   EraseArc (Arc);
   if (TEST_FLAG (CLEARLINEFLAG, Arc))
@@ -1197,7 +1201,8 @@ ChangeArcJoin (LayerType *Layer, ArcType *Arc)
 static void *
 SetArcJoin (LayerType *Layer, ArcType *Arc)
 {
-  if (TEST_FLAG (LOCKFLAG, Arc) || TEST_FLAG (CLEARLINEFLAG, Arc))
+  if ((!PCB->ViolateLock && TEST_FLAG (LOCKFLAG, Arc)) ||
+      TEST_FLAG (CLEARLINEFLAG, Arc))
     return (NULL);
   return ChangeArcJoin (Layer, Arc);
 }
@@ -1208,7 +1213,8 @@ SetArcJoin (LayerType *Layer, ArcType *Arc)
 static void *
 ClrArcJoin (LayerType *Layer, ArcType *Arc)
 {
-  if (TEST_FLAG (LOCKFLAG, Arc) || !TEST_FLAG (CLEARLINEFLAG, Arc))
+  if ((!PCB->ViolateLock && TEST_FLAG (LOCKFLAG, Arc)) ||
+      !TEST_FLAG (CLEARLINEFLAG, Arc))
     return (NULL);
   return ChangeArcJoin (Layer, Arc);
 }
@@ -1219,7 +1225,7 @@ ClrArcJoin (LayerType *Layer, ArcType *Arc)
 static void *
 ChangeTextJoin (LayerType *Layer, TextType *Text)
 {
-  if (TEST_FLAG (LOCKFLAG, Text))
+  if (!PCB->ViolateLock && TEST_FLAG (LOCKFLAG, Text))
     return (NULL);
   EraseText (Layer, Text);
   if (TEST_FLAG(CLEARLINEFLAG, Text))
@@ -1244,7 +1250,8 @@ ChangeTextJoin (LayerType *Layer, TextType *Text)
 static void *
 SetTextJoin (LayerType *Layer, TextType *Text)
 {
-  if (TEST_FLAG (LOCKFLAG, Text) || TEST_FLAG (CLEARLINEFLAG, Text))
+  if ((!PCB->ViolateLock && TEST_FLAG (LOCKFLAG, Text)) ||
+      TEST_FLAG (CLEARLINEFLAG, Text))
     return (NULL);
   return ChangeTextJoin (Layer, Text);
 }
@@ -1255,7 +1262,8 @@ SetTextJoin (LayerType *Layer, TextType *Text)
 static void *
 ClrTextJoin (LayerType *Layer, TextType *Text)
 {
-  if (TEST_FLAG (LOCKFLAG, Text) || !TEST_FLAG (CLEARLINEFLAG, Text))
+  if ((!PCB->ViolateLock && TEST_FLAG (LOCKFLAG, Text)) ||
+      !TEST_FLAG (CLEARLINEFLAG, Text))
     return (NULL);
   return ChangeTextJoin (Layer, Text);
 }
@@ -1268,7 +1276,7 @@ ChangeElementSquare (ElementType *Element)
 {
   void *ans = NULL;
 
-  if (TEST_FLAG (LOCKFLAG, Element))
+  if (!PCB->ViolateLock && TEST_FLAG (LOCKFLAG, Element))
     return (NULL);
   PIN_LOOP (Element);
   {
@@ -1291,7 +1299,7 @@ SetElementSquare (ElementType *Element)
 {
   void *ans = NULL;
 
-  if (TEST_FLAG (LOCKFLAG, Element))
+  if (!PCB->ViolateLock && TEST_FLAG (LOCKFLAG, Element))
     return (NULL);
   PIN_LOOP (Element);
   {
@@ -1314,7 +1322,7 @@ ClrElementSquare (ElementType *Element)
 {
   void *ans = NULL;
 
-  if (TEST_FLAG (LOCKFLAG, Element))
+  if (!PCB->ViolateLock && TEST_FLAG (LOCKFLAG, Element))
     return (NULL);
   PIN_LOOP (Element);
   {
@@ -1337,7 +1345,7 @@ ChangeElementOctagon (ElementType *Element)
 {
   void *result = NULL;
 
-  if (TEST_FLAG (LOCKFLAG, Element))
+  if (!PCB->ViolateLock && TEST_FLAG (LOCKFLAG, Element))
     return (NULL);
   PIN_LOOP (Element);
   {
@@ -1356,7 +1364,7 @@ SetElementOctagon (ElementType *Element)
 {
   void *result = NULL;
 
-  if (TEST_FLAG (LOCKFLAG, Element))
+  if (!PCB->ViolateLock && TEST_FLAG (LOCKFLAG, Element))
     return (NULL);
   PIN_LOOP (Element);
   {
@@ -1375,7 +1383,7 @@ ClrElementOctagon (ElementType *Element)
 {
   void *result = NULL;
 
-  if (TEST_FLAG (LOCKFLAG, Element))
+  if (!PCB->ViolateLock && TEST_FLAG (LOCKFLAG, Element))
     return (NULL);
   PIN_LOOP (Element);
   {
@@ -1392,7 +1400,7 @@ ClrElementOctagon (ElementType *Element)
 static void *
 ChangePadSquare (ElementType *Element, PadType *Pad)
 {
-  if (TEST_FLAG (LOCKFLAG, Pad))
+  if (!PCB->ViolateLock && TEST_FLAG (LOCKFLAG, Pad))
     return (NULL);
   ErasePad (Pad);
   AddObjectToClearPolyUndoList (PAD_TYPE, Element, Pad, Pad, false);
@@ -1412,7 +1420,8 @@ static void *
 SetPadSquare (ElementType *Element, PadType *Pad)
 {
 
-  if (TEST_FLAG (LOCKFLAG, Pad) || TEST_FLAG (SQUAREFLAG, Pad))
+  if ((!PCB->ViolateLock && TEST_FLAG (LOCKFLAG, Pad)) ||
+      TEST_FLAG (SQUAREFLAG, Pad))
     return (NULL);
 
   return (ChangePadSquare (Element, Pad));
@@ -1426,7 +1435,8 @@ static void *
 ClrPadSquare (ElementType *Element, PadType *Pad)
 {
 
-  if (TEST_FLAG (LOCKFLAG, Pad) || !TEST_FLAG (SQUAREFLAG, Pad))
+  if ((!PCB->ViolateLock && TEST_FLAG (LOCKFLAG, Pad)) ||
+      !TEST_FLAG (SQUAREFLAG, Pad))
     return (NULL);
 
   return (ChangePadSquare (Element, Pad));
@@ -1439,7 +1449,7 @@ ClrPadSquare (ElementType *Element, PadType *Pad)
 static void *
 ChangePinSquare (ElementType *Element, PinType *Pin)
 {
-  if (TEST_FLAG (LOCKFLAG, Pin))
+  if (!PCB->ViolateLock && TEST_FLAG (LOCKFLAG, Pin))
     return (NULL);
   ErasePin (Pin);
   AddObjectToClearPolyUndoList (PIN_TYPE, Element, Pin, Pin, false);
@@ -1458,7 +1468,8 @@ ChangePinSquare (ElementType *Element, PinType *Pin)
 static void *
 SetPinSquare (ElementType *Element, PinType *Pin)
 {
-  if (TEST_FLAG (LOCKFLAG, Pin) || TEST_FLAG (SQUAREFLAG, Pin))
+  if ((!PCB->ViolateLock && TEST_FLAG (LOCKFLAG, Pin)) ||
+      TEST_FLAG (SQUAREFLAG, Pin))
     return (NULL);
 
   return (ChangePinSquare (Element, Pin));
@@ -1470,7 +1481,8 @@ SetPinSquare (ElementType *Element, PinType *Pin)
 static void *
 ClrPinSquare (ElementType *Element, PinType *Pin)
 {
-  if (TEST_FLAG (LOCKFLAG, Pin) || !TEST_FLAG (SQUAREFLAG, Pin))
+  if ((!PCB->ViolateLock && TEST_FLAG (LOCKFLAG, Pin)) ||
+      !TEST_FLAG (SQUAREFLAG, Pin))
     return (NULL);
 
   return (ChangePinSquare (Element, Pin));
@@ -1482,7 +1494,7 @@ ClrPinSquare (ElementType *Element, PinType *Pin)
 static void *
 ChangeViaOctagon (PinType *Via)
 {
-  if (TEST_FLAG (LOCKFLAG, Via))
+  if (!PCB->ViolateLock && TEST_FLAG (LOCKFLAG, Via))
     return (NULL);
   EraseVia (Via);
   AddObjectToClearPolyUndoList (VIA_TYPE, Via, Via, Via, false);
@@ -1501,7 +1513,8 @@ ChangeViaOctagon (PinType *Via)
 static void *
 SetViaOctagon (PinType *Via)
 {
-  if (TEST_FLAG (LOCKFLAG, Via) || TEST_FLAG (OCTAGONFLAG, Via))
+  if ((!PCB->ViolateLock && TEST_FLAG (LOCKFLAG, Via)) ||
+      TEST_FLAG (OCTAGONFLAG, Via))
     return (NULL);
 
   return (ChangeViaOctagon (Via));
@@ -1513,7 +1526,8 @@ SetViaOctagon (PinType *Via)
 static void *
 ClrViaOctagon (PinType *Via)
 {
-  if (TEST_FLAG (LOCKFLAG, Via) || !TEST_FLAG (OCTAGONFLAG, Via))
+  if ((!PCB->ViolateLock && TEST_FLAG (LOCKFLAG, Via)) ||
+      !TEST_FLAG (OCTAGONFLAG, Via))
     return (NULL);
 
   return (ChangeViaOctagon (Via));
@@ -1525,7 +1539,7 @@ ClrViaOctagon (PinType *Via)
 static void *
 ChangePinOctagon (ElementType *Element, PinType *Pin)
 {
-  if (TEST_FLAG (LOCKFLAG, Pin))
+  if (!PCB->ViolateLock && TEST_FLAG (LOCKFLAG, Pin))
     return (NULL);
   ErasePin (Pin);
   AddObjectToClearPolyUndoList (PIN_TYPE, Element, Pin, Pin, false);
@@ -1544,7 +1558,8 @@ ChangePinOctagon (ElementType *Element, PinType *Pin)
 static void *
 SetPinOctagon (ElementType *Element, PinType *Pin)
 {
-  if (TEST_FLAG (LOCKFLAG, Pin) || TEST_FLAG (OCTAGONFLAG, Pin))
+  if ((!PCB->ViolateLock && TEST_FLAG (LOCKFLAG, Pin)) ||
+      TEST_FLAG (OCTAGONFLAG, Pin))
     return (NULL);
 
   return (ChangePinOctagon (Element, Pin));
@@ -1556,7 +1571,8 @@ SetPinOctagon (ElementType *Element, PinType *Pin)
 static void *
 ClrPinOctagon (ElementType *Element, PinType *Pin)
 {
-  if (TEST_FLAG (LOCKFLAG, Pin) || !TEST_FLAG (OCTAGONFLAG, Pin))
+  if ((!PCB->ViolateLock && TEST_FLAG (LOCKFLAG, Pin)) ||
+      !TEST_FLAG (OCTAGONFLAG, Pin))
     return (NULL);
 
   return (ChangePinOctagon (Element, Pin));
@@ -1568,7 +1584,7 @@ ClrPinOctagon (ElementType *Element, PinType *Pin)
 bool
 ChangeHole (PinType *Via)
 {
-  if (TEST_FLAG (LOCKFLAG, Via))
+  if (!PCB->ViolateLock && TEST_FLAG (LOCKFLAG, Via))
     return (false);
   EraseVia (Via);
   AddObjectToFlagUndoList (VIA_TYPE, Via, Via, Via);
@@ -1611,7 +1627,7 @@ ChangeHole (PinType *Via)
 bool
 ChangePaste (PadType *Pad)
 {
-  if (TEST_FLAG (LOCKFLAG, Pad))
+  if (!PCB->ViolateLock && TEST_FLAG (LOCKFLAG, Pad))
     return (false);
   ErasePad (Pad);
   AddObjectToFlagUndoList (PAD_TYPE, Pad, Pad, Pad);
@@ -1627,7 +1643,7 @@ ChangePaste (PadType *Pad)
 static void *
 ChangePolyClear (LayerType *Layer, PolygonType *Polygon)
 {
-  if (TEST_FLAG (LOCKFLAG, Polygon))
+  if (!PCB->ViolateLock && TEST_FLAG (LOCKFLAG, Polygon))
     return (NULL);
   AddObjectToClearPolyUndoList (POLYGON_TYPE, Layer, Polygon, Polygon, true);
   AddObjectToFlagUndoList (POLYGON_TYPE, Layer, Polygon, Polygon);
diff --git a/src/create.c b/src/create.c
index ab236bd..b12ad56 100644
--- a/src/create.c
+++ b/src/create.c
@@ -213,6 +213,8 @@ CreateNewPCB (void)
 
 	CreateDefaultFont (ptr);
 
+  ptr->ViolateLock = true;
+
   return (ptr);
 }
 
diff --git a/src/global.h b/src/global.h
index b36aebf..114193e 100644
--- a/src/global.h
+++ b/src/global.h
@@ -494,6 +494,7 @@ typedef struct PCBType
     ElementOn, RatOn, InvisibleObjectsOn, PinOn, SilkActive,	/* active layer is actually silk */
     SolderMaskActive, /* active layer is actually solder mask */
     RatDraw;			 /* we're drawing rats */
+  bool ViolateLock;
   char *ViaColor,		/* some colors */
    *ViaSelectedColor,
     *PinColor,
diff --git a/src/hid/gtk/gui-netlist-window.c b/src/hid/gtk/gui-netlist-window.c
index 58fe107..12f5840 100644
--- a/src/hid/gtk/gui-netlist-window.c
+++ b/src/hid/gtk/gui-netlist-window.c
@@ -572,14 +572,16 @@ netlist_rip_up_cb (GtkWidget * widget, gpointer data)
 
   VISIBLELINE_LOOP (PCB->Data);
   {
-    if (TEST_FLAG (FOUNDFLAG, line) && !TEST_FLAG (LOCKFLAG, line))
+    if (TEST_FLAG (FOUNDFLAG, line) &&
+        (PCB->ViolateLock || !TEST_FLAG (LOCKFLAG, line)))
       RemoveObject (LINE_TYPE, layer, line, line);
   }
   ENDALL_LOOP;
 
   VISIBLEARC_LOOP (PCB->Data);
   {
-    if (TEST_FLAG (FOUNDFLAG, arc) && !TEST_FLAG (LOCKFLAG, arc))
+    if (TEST_FLAG (FOUNDFLAG, arc) &&
+        (PCB->ViolateLock || !TEST_FLAG (LOCKFLAG, arc)))
       RemoveObject (ARC_TYPE, layer, arc, arc);
   }
   ENDALL_LOOP;
@@ -587,7 +589,8 @@ netlist_rip_up_cb (GtkWidget * widget, gpointer data)
   if (PCB->ViaOn)
     VIA_LOOP (PCB->Data);
   {
-    if (TEST_FLAG (FOUNDFLAG, via) && !TEST_FLAG (LOCKFLAG, via))
+    if (TEST_FLAG (FOUNDFLAG, via) &&
+        (PCB->ViolateLock || !TEST_FLAG (LOCKFLAG, via)))
       RemoveObject (VIA_TYPE, via, via, via);
   }
   END_LOOP;
diff --git a/src/hid/lesstif/netlist.c b/src/hid/lesstif/netlist.c
index 79ee647..3e78b55 100644
--- a/src/hid/lesstif/netlist.c
+++ b/src/hid/lesstif/netlist.c
@@ -198,14 +198,16 @@ nbcb_ripup (Widget w, Std_Nbcb_Func v, XmPushButtonCallbackStruct * cbs)
 
   VISIBLELINE_LOOP (PCB->Data);
   {
-    if (TEST_FLAG (FOUNDFLAG, line) && !TEST_FLAG (LOCKFLAG, line))
+    if (TEST_FLAG (FOUNDFLAG, line) &&
+        (PCB->ViolateLock || !TEST_FLAG (LOCKFLAG, line)))
       RemoveObject (LINE_TYPE, layer, line, line);
   }
   ENDALL_LOOP;
 
   VISIBLEARC_LOOP (PCB->Data);
   {
-    if (TEST_FLAG (FOUNDFLAG, arc) && !TEST_FLAG (LOCKFLAG, arc))
+    if (TEST_FLAG (FOUNDFLAG, arc) &&
+        (PCB->ViolateLock || !TEST_FLAG (LOCKFLAG, arc)))
       RemoveObject (ARC_TYPE, layer, arc, arc);
   }
   ENDALL_LOOP;
@@ -213,7 +215,8 @@ nbcb_ripup (Widget w, Std_Nbcb_Func v, XmPushButtonCallbackStruct * cbs)
   if (PCB->ViaOn)
     VIA_LOOP (PCB->Data);
   {
-    if (TEST_FLAG (FOUNDFLAG, via) && !TEST_FLAG (LOCKFLAG, via))
+    if (TEST_FLAG (FOUNDFLAG, via) &&
+        (PCB->ViolateLock || !TEST_FLAG (LOCKFLAG, via)))
       RemoveObject (VIA_TYPE, via, via, via);
   }
   END_LOOP;
diff --git a/src/move.c b/src/move.c
index 6282e9e..abdf494 100644
--- a/src/move.c
+++ b/src/move.c
@@ -472,7 +472,7 @@ MoveArcToLayer (LayerType *Layer, ArcType *Arc)
 {
   ArcType *newone;
 
-  if (TEST_FLAG (LOCKFLAG, Arc))
+  if (!PCB->ViolateLock && TEST_FLAG (LOCKFLAG, Arc))
     {
       Message (_("Sorry, the object is locked\n"));
       return NULL;
@@ -563,7 +563,7 @@ MoveLineToLayer (LayerType *Layer, LineType *Line)
   LineType *newone;
   void *ptr1, *ptr2, *ptr3;
 
-  if (TEST_FLAG (LOCKFLAG, Line))
+  if (!PCB->ViolateLock && TEST_FLAG (LOCKFLAG, Line))
     {
       Message (_("Sorry, the object is locked\n"));
       return NULL;
@@ -661,7 +661,7 @@ MoveTextToLayerLowLevel (LayerType *Source, TextType *text,
 static void *
 MoveTextToLayer (LayerType *layer, TextType *text)
 {
-  if (TEST_FLAG (LOCKFLAG, text))
+  if (!PCB->ViolateLock && TEST_FLAG (LOCKFLAG, text))
     {
       Message (_("Sorry, the object is locked\n"));
       return NULL;
@@ -735,7 +735,7 @@ MovePolygonToLayer (LayerType *Layer, PolygonType *Polygon)
   PolygonType *newone;
   struct mptlc d;
 
-  if (TEST_FLAG (LOCKFLAG, Polygon))
+  if (!PCB->ViolateLock && TEST_FLAG (LOCKFLAG, Polygon))
     {
       Message (_("Sorry, the object is locked\n"));
       return NULL;
diff --git a/src/polygon.c b/src/polygon.c
index 8834733..841e1ea 100644
--- a/src/polygon.c
+++ b/src/polygon.c
@@ -1867,7 +1867,8 @@ MorphPolygon (LayerType *layer, PolygonType *poly)
   bool many = false;
   FlagType flags;
 
-  if (!poly->Clipped || TEST_FLAG (LOCKFLAG, poly))
+  if (!poly->Clipped ||
+      (!PCB->ViolateLock && TEST_FLAG (LOCKFLAG, poly)))
     return false;
   if (poly->Clipped->f == poly->Clipped)
     return false;
diff --git a/src/rotate.c b/src/rotate.c
index fb23ba1..1e99c9b 100644
--- a/src/rotate.c
+++ b/src/rotate.c
@@ -417,7 +417,7 @@ RotateScreenObject (Coord X, Coord Y, unsigned Steps)
   if ((type = SearchScreen (X, Y, ROTATE_TYPES, &ptr1, &ptr2,
 			    &ptr3)) != NO_TYPE)
     {
-      if (TEST_FLAG (LOCKFLAG, (ArcType *) ptr2))
+      if (!PCB->ViolateLock && TEST_FLAG (LOCKFLAG, (ArcType *) ptr2))
 	{
 	  Message (_("Sorry, the object is locked\n"));
 	  return;
diff --git a/src/rubberband.c b/src/rubberband.c
index 43fe04e..aec6913 100644
--- a/src/rubberband.c
+++ b/src/rubberband.c
@@ -126,7 +126,7 @@ rubber_callback (const BoxType * b, void *cl)
   if (line == i->line)
     return 0;
 
-  if (TEST_FLAG (LOCKFLAG, line))
+  if (!PCB->ViolateLock && TEST_FLAG (LOCKFLAG, line))
     return 0;
 
   /* Check to see if the line touches a rectangular region.
@@ -423,7 +423,7 @@ CheckPolygonForRubberbandConnection (LayerType *Layer,
 	 */
 	LINE_LOOP (layer);
 	{
-	  if (TEST_FLAG (LOCKFLAG, line))
+	  if (!PCB->ViolateLock && TEST_FLAG (LOCKFLAG, line))
 	    continue;
 	  if (TEST_FLAG (CLEARLINEFLAG, line))
 	    continue;
diff --git a/src/search.c b/src/search.c
index 6c00673..b08626e 100644
--- a/src/search.c
+++ b/src/search.c
@@ -136,7 +136,7 @@ SearchViaByLocation (int locked, PinType ** Via, PinType ** Dummy1,
   info.ptr1 = (void **) Via;
   info.ptr2 = (void **) Dummy1;
   info.ptr3 = (void **) Dummy2;
-  info.locked = (locked & LOCKED_TYPE) ? 0 : LOCKFLAG;
+  info.locked = ((locked & LOCKED_TYPE) || PCB->ViolateLock) ? 0 : LOCKFLAG;
 
   if (setjmp (info.env) == 0)
     {
@@ -163,7 +163,7 @@ SearchPinByLocation (int locked, ElementType ** Element, PinType ** Pin,
   info.ptr1 = (void **) Element;
   info.ptr2 = (void **) Pin;
   info.ptr3 = (void **) Dummy;
-  info.locked = (locked & LOCKED_TYPE) ? 0 : LOCKFLAG;
+  info.locked = ((locked & LOCKED_TYPE) || PCB->ViolateLock) ? 0 : LOCKFLAG;
 
   if (setjmp (info.env) == 0)
     r_search (PCB->Data->pin_tree, &SearchBox, NULL, pinorvia_callback,
@@ -220,7 +220,7 @@ SearchPadByLocation (int locked, ElementType ** Element, PadType ** Pad,
   info.ptr1 = (void **) Element;
   info.ptr2 = (void **) Pad;
   info.ptr3 = (void **) Dummy;
-  info.locked = (locked & LOCKED_TYPE) ? 0 : LOCKFLAG;
+  info.locked = ((locked & LOCKED_TYPE) || PCB->ViolateLock) ? 0 : LOCKFLAG;
   info.BackToo = (BackToo && PCB->InvisibleObjectsOn);
   info.found_anything = false;
   r_search (PCB->Data->pad_tree, &SearchBox, NULL, pad_callback, &info);
@@ -266,7 +266,7 @@ SearchLineByLocation (int locked, LayerType ** Layer, LineType ** Line,
 
   info.Line = Line;
   info.Point = (PointType **) Dummy;
-  info.locked = (locked & LOCKED_TYPE) ? 0 : LOCKFLAG;
+  info.locked = ((locked & LOCKED_TYPE) || PCB->ViolateLock) ? 0 : LOCKFLAG;
 
   *Layer = SearchLayer;
   if (setjmp (info.env) == 0)
@@ -310,7 +310,7 @@ SearchRatLineByLocation (int locked, RatType ** Line, RatType ** Dummy1,
   info.ptr1 = (void **) Line;
   info.ptr2 = (void **) Dummy1;
   info.ptr3 = (void **) Dummy2;
-  info.locked = (locked & LOCKED_TYPE) ? 0 : LOCKFLAG;
+  info.locked = ((locked & LOCKED_TYPE) || PCB->ViolateLock) ? 0 : LOCKFLAG;
 
   if (setjmp (info.env) == 0)
     {
@@ -358,7 +358,7 @@ SearchArcByLocation (int locked, LayerType ** Layer, ArcType ** Arc,
 
   info.Arc = Arc;
   info.Dummy = Dummy;
-  info.locked = (locked & LOCKED_TYPE) ? 0 : LOCKFLAG;
+  info.locked = ((locked & LOCKED_TYPE) || PCB->ViolateLock) ? 0 : LOCKFLAG;
 
   *Layer = SearchLayer;
   if (setjmp (info.env) == 0)
@@ -398,7 +398,7 @@ SearchTextByLocation (int locked, LayerType ** Layer, TextType ** Text,
   *Layer = SearchLayer;
   info.ptr2 = (void **) Text;
   info.ptr3 = (void **) Dummy;
-  info.locked = (locked & LOCKED_TYPE) ? 0 : LOCKFLAG;
+  info.locked = ((locked & LOCKED_TYPE) || PCB->ViolateLock) ? 0 : LOCKFLAG;
 
   if (setjmp (info.env) == 0)
     {
@@ -439,7 +439,7 @@ SearchPolygonByLocation (int locked, LayerType ** Layer,
   *Layer = SearchLayer;
   info.ptr2 = (void **) Polygon;
   info.ptr3 = (void **) Dummy;
-  info.locked = (locked & LOCKED_TYPE) ? 0 : LOCKFLAG;
+  info.locked = ((locked & LOCKED_TYPE) || PCB->ViolateLock) ? 0 : LOCKFLAG;
 
   if (setjmp (info.env) == 0)
     {
@@ -495,7 +495,7 @@ SearchLinePointByLocation (int locked, LayerType ** Layer,
   info.Point = Point;
   *Point = NULL;
   info.least = MAX_LINE_POINT_DISTANCE + SearchRadius;
-  info.locked = (locked & LOCKED_TYPE) ? 0 : LOCKFLAG;
+  info.locked = ((locked & LOCKED_TYPE) || PCB->ViolateLock) ? 0 : LOCKFLAG;
   if (r_search
       (SearchLayer->line_tree, &SearchBox, NULL, linepoint_callback, &info))
     return true;
@@ -546,7 +546,7 @@ SearchArcPointByLocation (int locked, LayerType **Layer,
   info.Point = Point;
   *Point = NULL;
   info.least = MAX_ARC_POINT_DISTANCE + SearchRadius;
-  info.locked = (locked & LOCKED_TYPE) ? 0 : LOCKFLAG;
+  info.locked = ((locked & LOCKED_TYPE) || PCB->ViolateLock) ? 0 : LOCKFLAG;
   if (r_search
       (SearchLayer->arc_tree, &SearchBox, NULL, arcpoint_callback, &info))
     return true;
@@ -633,7 +633,7 @@ SearchElementNameByLocation (int locked, ElementType ** Element,
       info.ptr3 = (void **) Dummy;
       info.area = SQUARE (MAX_COORD);
       info.BackToo = (BackToo && PCB->InvisibleObjectsOn);
-      info.locked = (locked & LOCKED_TYPE) ? 0 : LOCKFLAG;
+      info.locked = ((locked & LOCKED_TYPE) || PCB->ViolateLock) ? 0 : LOCKFLAG;
       if (r_search (PCB->Data->name_tree[NAME_INDEX (PCB)], &SearchBox, NULL,
 		    name_callback, &info))
 	return true;
@@ -688,7 +688,7 @@ SearchElementByLocation (int locked,
       info.ptr3 = (void **) Dummy2;
       info.area = SQUARE (MAX_COORD);
       info.BackToo = (BackToo && PCB->InvisibleObjectsOn);
-      info.locked = (locked & LOCKED_TYPE) ? 0 : LOCKFLAG;
+      info.locked = ((locked & LOCKED_TYPE) || PCB->ViolateLock) ? 0 : LOCKFLAG;
       if (r_search
 	  (PCB->Data->element_tree, &SearchBox, NULL, element_callback,
 	   &info))
diff --git a/src/select.c b/src/select.c
index f130b07..0ad89ca 100644
--- a/src/select.c
+++ b/src/select.c
@@ -72,7 +72,7 @@ SelectObject (void)
 
   type = SearchScreen (Crosshair.X, Crosshair.Y, SELECT_TYPES,
 		       &ptr1, &ptr2, &ptr3);
-  if (type == NO_TYPE || TEST_FLAG (LOCKFLAG, (PinType *) ptr2))
+  if (type == NO_TYPE || (!PCB->ViolateLock && TEST_FLAG (LOCKFLAG, (PinType *) ptr2)))
     return (false);
   switch (type)
     {
@@ -221,7 +221,8 @@ SelectBlock (BoxType *Box, bool select)
     RAT_LOOP (PCB->Data);
   {
     if (LINE_IN_BOX ((LineType *) line, Box) &&
-	!TEST_FLAG (LOCKFLAG, line) && TEST_FLAG (SELECTEDFLAG, line) != select)
+	(PCB->ViolateLock || !TEST_FLAG (LOCKFLAG, line)) &&
+	TEST_FLAG (SELECTEDFLAG, line) != select)
       {
 	AddObjectToFlagUndoList (RATLINE_TYPE, line, line, line);
 	ASSIGN_FLAG (SELECTEDFLAG, select, line);
@@ -261,9 +262,9 @@ SelectBlock (BoxType *Box, bool select)
 
     LINE_LOOP (layer);
     {
-      if (LINE_IN_BOX (line, Box)
-	  && !TEST_FLAG (LOCKFLAG, line)
-	  && TEST_FLAG (SELECTEDFLAG, line) != select)
+      if (LINE_IN_BOX (line, Box) &&
+	  (PCB->ViolateLock || !TEST_FLAG (LOCKFLAG, line)) &&
+	  TEST_FLAG (SELECTEDFLAG, line) != select)
 	{
 	  AddObjectToFlagUndoList (LINE_TYPE, layer, line, line);
 	  ASSIGN_FLAG (SELECTEDFLAG, select, line);
@@ -275,9 +276,9 @@ SelectBlock (BoxType *Box, bool select)
     END_LOOP;
     ARC_LOOP (layer);
     {
-      if (ARC_IN_BOX (arc, Box)
-	  && !TEST_FLAG (LOCKFLAG, arc)
-	  && TEST_FLAG (SELECTEDFLAG, arc) != select)
+      if (ARC_IN_BOX (arc, Box) &&
+	  (PCB->ViolateLock || !TEST_FLAG (LOCKFLAG, arc)) &&
+	  TEST_FLAG (SELECTEDFLAG, arc) != select)
 	{
 	  AddObjectToFlagUndoList (ARC_TYPE, layer, arc, arc);
 	  ASSIGN_FLAG (SELECTEDFLAG, select, arc);
@@ -291,9 +292,9 @@ SelectBlock (BoxType *Box, bool select)
     {
       if (!select || TEXT_IS_VISIBLE(PCB, layer, text))
 	{
-	  if (TEXT_IN_BOX (text, Box)
-	      && !TEST_FLAG (LOCKFLAG, text)
-	      && TEST_FLAG (SELECTEDFLAG, text) != select)
+	  if (TEXT_IN_BOX (text, Box) &&
+	      (PCB->ViolateLock || !TEST_FLAG (LOCKFLAG, text)) &&
+	      TEST_FLAG (SELECTEDFLAG, text) != select)
 	    {
 	      AddObjectToFlagUndoList (TEXT_TYPE, layer, text, text);
 	      ASSIGN_FLAG (SELECTEDFLAG, select, text);
@@ -306,9 +307,9 @@ SelectBlock (BoxType *Box, bool select)
     END_LOOP;
     POLYGON_LOOP (layer);
     {
-      if (POLYGON_IN_BOX (polygon, Box)
-	  && !TEST_FLAG (LOCKFLAG, polygon)
-	  && TEST_FLAG (SELECTEDFLAG, polygon) != select)
+      if (POLYGON_IN_BOX (polygon, Box) &&
+	  (PCB->ViolateLock || !TEST_FLAG (LOCKFLAG, polygon)) &&
+	  TEST_FLAG (SELECTEDFLAG, polygon) != select)
 	{
 	  AddObjectToFlagUndoList (POLYGON_TYPE, layer, polygon, polygon);
 	  ASSIGN_FLAG (SELECTEDFLAG, select, polygon);
@@ -326,15 +327,14 @@ SelectBlock (BoxType *Box, bool select)
   {
     {
       bool gotElement = false;
-      if ((PCB->ElementOn || !select)
-	  && !TEST_FLAG (LOCKFLAG, element)
-	  && ((TEST_FLAG (ONSOLDERFLAG, element) != 0) == SWAP_IDENT
+      if ((PCB->ElementOn || !select) &&
+	  (PCB->ViolateLock || !TEST_FLAG (LOCKFLAG, element)) &&
+	  ((TEST_FLAG (ONSOLDERFLAG, element) != 0) == SWAP_IDENT
 	      || PCB->InvisibleObjectsOn))
 	{
-	  if (BOX_IN_BOX
-	      (&ELEMENT_TEXT (PCB, element).BoundingBox, Box)
-	      && !TEST_FLAG (LOCKFLAG, &ELEMENT_TEXT (PCB, element))
-	      && TEST_FLAG (SELECTEDFLAG,
+	  if (BOX_IN_BOX (&ELEMENT_TEXT (PCB, element).BoundingBox, Box) &&
+	      (PCB->ViolateLock || !TEST_FLAG (LOCKFLAG, &ELEMENT_TEXT (PCB, element))) &&
+	      TEST_FLAG (SELECTEDFLAG,
 			    &ELEMENT_TEXT (PCB, element)) != select)
 	    {
 	      /* select all names of element */
@@ -385,7 +385,9 @@ SelectBlock (BoxType *Box, bool select)
 		gotElement = true;
 	      }
 	}
-      if ((PCB->PinOn || !select) && !TEST_FLAG (LOCKFLAG, element) && !gotElement)
+      if ((PCB->PinOn || !select) &&
+	  (PCB->ViolateLock || !TEST_FLAG (LOCKFLAG, element)) &&
+	  !gotElement)
 	{
 	  PIN_LOOP (element);
 	  {
@@ -424,9 +426,9 @@ SelectBlock (BoxType *Box, bool select)
   if (PCB->ViaOn || !select)
     VIA_LOOP (PCB->Data);
   {
-    if (VIA_OR_PIN_IN_BOX (via, Box)
-	&& !TEST_FLAG (LOCKFLAG, via)
-	&& TEST_FLAG (SELECTEDFLAG, via) != select)
+    if (VIA_OR_PIN_IN_BOX (via, Box) &&
+	(PCB->ViolateLock || !TEST_FLAG (LOCKFLAG, via)) &&
+	TEST_FLAG (SELECTEDFLAG, via) != select)
       {
 	AddObjectToFlagUndoList (VIA_TYPE, via, via, via);
 	ASSIGN_FLAG (SELECTEDFLAG, select, via);
@@ -738,7 +740,8 @@ SelectByFlag (int flag, bool select)
 
   VISIBLELINE_LOOP (PCB->Data);
   {
-    if (TEST_FLAG (flag, line) && !TEST_FLAG (LOCKFLAG, line))
+    if (TEST_FLAG (flag, line) &&
+        (PCB->ViolateLock || !TEST_FLAG (LOCKFLAG, line)))
       {
 	AddObjectToFlagUndoList (LINE_TYPE, layer, line, line);
 	ASSIGN_FLAG (SELECTEDFLAG, select, line);
@@ -749,7 +752,8 @@ SelectByFlag (int flag, bool select)
   ENDALL_LOOP;
   VISIBLEARC_LOOP (PCB->Data);
   {
-    if (TEST_FLAG (flag, arc) && !TEST_FLAG (LOCKFLAG, arc))
+    if (TEST_FLAG (flag, arc) &&
+        (PCB->ViolateLock || !TEST_FLAG (LOCKFLAG, arc)))
       {
 	AddObjectToFlagUndoList (ARC_TYPE, layer, arc, arc);
 	ASSIGN_FLAG (SELECTEDFLAG, select, arc);
@@ -760,7 +764,8 @@ SelectByFlag (int flag, bool select)
   ENDALL_LOOP;
   VISIBLEPOLYGON_LOOP (PCB->Data);
   {
-    if (TEST_FLAG (flag, polygon) && !TEST_FLAG (LOCKFLAG, polygon))
+    if (TEST_FLAG (flag, polygon) &&
+        (PCB->ViolateLock || !TEST_FLAG (LOCKFLAG, polygon)))
       {
 	AddObjectToFlagUndoList (POLYGON_TYPE, layer, polygon, polygon);
 	ASSIGN_FLAG (SELECTEDFLAG, select, polygon);
@@ -774,7 +779,8 @@ SelectByFlag (int flag, bool select)
     {
       ALLPIN_LOOP (PCB->Data);
       {
-	if (!TEST_FLAG (LOCKFLAG, element) && TEST_FLAG (flag, pin))
+	if (TEST_FLAG (flag, pin) &&
+            (PCB->ViolateLock || !TEST_FLAG (LOCKFLAG, element)))
 	  {
 	    AddObjectToFlagUndoList (PIN_TYPE, element, pin, pin);
 	    ASSIGN_FLAG (SELECTEDFLAG, select, pin);
@@ -785,7 +791,8 @@ SelectByFlag (int flag, bool select)
       ENDALL_LOOP;
       ALLPAD_LOOP (PCB->Data);
       {
-	if (!TEST_FLAG (LOCKFLAG, element) && TEST_FLAG (flag, pad))
+	if (TEST_FLAG (flag, pad) &&
+            (PCB->ViolateLock || !TEST_FLAG (LOCKFLAG, element)))
 	  {
 	    AddObjectToFlagUndoList (PAD_TYPE, element, pad, pad);
 	    ASSIGN_FLAG (SELECTEDFLAG, select, pad);
@@ -799,7 +806,8 @@ SelectByFlag (int flag, bool select)
   if (PCB->ViaOn)
     VIA_LOOP (PCB->Data);
   {
-    if (TEST_FLAG (flag, via) && !TEST_FLAG (LOCKFLAG, via))
+    if (TEST_FLAG (flag, via) &&
+        (PCB->ViolateLock || !TEST_FLAG (LOCKFLAG, via)))
       {
 	AddObjectToFlagUndoList (VIA_TYPE, via, via, via);
 	ASSIGN_FLAG (SELECTEDFLAG, select, via);
@@ -873,7 +881,7 @@ SelectObjectByName (int Type, char *Pattern, bool select)
   if (Type & TEXT_TYPE)
     ALLTEXT_LOOP (PCB->Data);
   {
-    if (!TEST_FLAG (LOCKFLAG, text)
+    if ((PCB->ViolateLock || !TEST_FLAG (LOCKFLAG, text))
 	&& TEXT_IS_VISIBLE (PCB, layer, text)
 	&& text->TextString
 	&& REGEXEC (text->TextString)
@@ -890,7 +898,7 @@ SelectObjectByName (int Type, char *Pattern, bool select)
   if (PCB->ElementOn && (Type & ELEMENT_TYPE))
     ELEMENT_LOOP (PCB->Data);
   {
-    if (!TEST_FLAG (LOCKFLAG, element)
+    if ((PCB->ViolateLock || !TEST_FLAG (LOCKFLAG, element))
 	&& ((TEST_FLAG (ONSOLDERFLAG, element) != 0) == SWAP_IDENT
 	    || PCB->InvisibleObjectsOn)
 	&& TEST_FLAG (SELECTEDFLAG, element) != select)
@@ -928,7 +936,7 @@ SelectObjectByName (int Type, char *Pattern, bool select)
   if (PCB->PinOn && (Type & PIN_TYPE))
     ALLPIN_LOOP (PCB->Data);
   {
-    if (!TEST_FLAG (LOCKFLAG, element)
+    if ((PCB->ViolateLock || !TEST_FLAG (LOCKFLAG, element))
 	&& pin->Name && REGEXEC (pin->Name)
 	&& TEST_FLAG (SELECTEDFLAG, pin) != select)
       {
@@ -942,7 +950,7 @@ SelectObjectByName (int Type, char *Pattern, bool select)
   if (PCB->PinOn && (Type & PAD_TYPE))
     ALLPAD_LOOP (PCB->Data);
   {
-    if (!TEST_FLAG (LOCKFLAG, element)
+    if ((PCB->ViolateLock || !TEST_FLAG (LOCKFLAG, element))
 	&& ((TEST_FLAG (ONSOLDERFLAG, pad) != 0) == SWAP_IDENT
 	    || PCB->InvisibleObjectsOn)
 	&& TEST_FLAG (SELECTEDFLAG, pad) != select)
@@ -958,7 +966,7 @@ SelectObjectByName (int Type, char *Pattern, bool select)
   if (PCB->ViaOn && (Type & VIA_TYPE))
     VIA_LOOP (PCB->Data);
   {
-    if (!TEST_FLAG (LOCKFLAG, via)
+    if ((PCB->ViolateLock || !TEST_FLAG (LOCKFLAG, via))
 	&& via->Name
 	&& REGEXEC (via->Name) && TEST_FLAG (SELECTEDFLAG, via) != select)
       {
diff --git a/src/vendor.c b/src/vendor.c
index 9391404..d407526 100644
--- a/src/vendor.c
+++ b/src/vendor.c
@@ -483,7 +483,7 @@ apply_vendor_map (void)
 	if (via->DrillingHole != vendorDrillMap (via->DrillingHole))
 	  {
 	    /* only change unlocked vias */
-	    if (!TEST_FLAG (LOCKFLAG, via))
+	    if (PCB->ViolateLock || !TEST_FLAG (LOCKFLAG, via))
 	      {
 		if (ChangeObject2ndSize (VIA_TYPE, via, NULL, NULL,
 					 vendorDrillMap (via->DrillingHole),
@@ -522,7 +522,7 @@ apply_vendor_map (void)
 	      tot++;
 	      if (pin->DrillingHole != vendorDrillMap (pin->DrillingHole))
 		{
-		  if (!TEST_FLAG (LOCKFLAG, pin))
+		  if (PCB->ViolateLock || !TEST_FLAG (LOCKFLAG, pin))
 		    {
 		      if (ChangeObject2ndSize (PIN_TYPE, element, pin, NULL,
 					       vendorDrillMap (pin->
@@ -859,7 +859,8 @@ vendorIsElementMappable (ElementType *element)
 	  }
       }
 
-  if (noskip && TEST_FLAG (LOCKFLAG, element))
+  if (noskip &&
+      (!PCB->ViolateLock && TEST_FLAG (LOCKFLAG, element)))
     {
       Message (_("Vendor mapping skipped because element %s is locked\n"),
 	       UNKNOWN (NAMEONPCB_NAME (element)));
