Bottom: 2501d91685dd7f6767dc0e3632c6b03fb2c2b76d
Top:    4fbb1b7ea979bbb72217c336eef13ed84efe5190
Author: Peter Clifton <peter@clifton-electronics.co.uk>
Date:   2016-02-26 12:48:46 +0000

Try consolidating geometry in step creation


---

diff --git a/src/hid/common/object3d.c b/src/hid/common/object3d.c
index 494b9c7..149dcfe 100644
--- a/src/hid/common/object3d.c
+++ b/src/hid/common/object3d.c
@@ -110,19 +110,19 @@ object3d_set_appearance (object3d *object, appearance *appear)
 void
 object3d_add_edge (object3d *object, edge_ref edge)
 {
-  object->edges = g_list_append (object->edges, (void *)edge);
+  object->edges = g_list_prepend (object->edges, (void *)edge);
 }
 
 void
 object3d_add_vertex (object3d *object, vertex3d *vertex)
 {
-  object->vertices = g_list_append (object->vertices, vertex);
+  object->vertices = g_list_prepend (object->vertices, vertex);
 }
 
 void
 object3d_add_face (object3d *object, face3d *face)
 {
-  object->faces = g_list_append (object->faces, face);
+  object->faces = g_list_prepend (object->faces, face);
 }
 
 
@@ -680,7 +680,7 @@ object3d_from_contours (POLYAREA *contours,
       splice (cylinder_edges[1], SYM(cylinder_edges[1]));
     }
 
-    objects = g_list_append (objects, object);
+    objects = g_list_prepend (objects, object);
 
     link = malloc (sizeof (polygon_3d_link));
     pa->user_data = link;
@@ -1359,7 +1359,7 @@ old_object3d_from_board_outline (void)
       splice (cylinder_edges[1], SYM(cylinder_edges[1]));
     }
 
-    board_objects = g_list_append (board_objects, board_object);
+    board_objects = g_list_prepend (board_objects, board_object);
 
   } while (pa = pa->f, pa != board_outline);
 
diff --git a/src/hid/step/step_writer.c b/src/hid/step/step_writer.c
index 9655d8f..bfc3083 100644
--- a/src/hid/step/step_writer.c
+++ b/src/hid/step/step_writer.c
@@ -16,16 +16,16 @@ fprint_id_list (FILE *f, step_id_list list)
 {
   GList *iter;
 
-  fprintf (f, "( ");
+  fprintf (f, "(");
   for (iter = list;
        iter != NULL && g_list_next (iter) != NULL;
        iter = g_list_next (iter)) {
-    fprintf (f, "#%i, ", GPOINTER_TO_INT (iter->data));
+    fprintf (f, "#%i,", GPOINTER_TO_INT (iter->data));
   }
   if (iter == NULL)
     fprintf (f, ")");
   else
-    fprintf (f, "#%i )", GPOINTER_TO_INT (iter->data));
+    fprintf (f, "#%i)", GPOINTER_TO_INT (iter->data));
 }
 
 static void
@@ -69,12 +69,18 @@ step_file
   file->f = f;
   file->next_id = 1;
 
+  file->cartesian_point_hash = g_hash_table_new_full (g_str_hash, g_str_equal, g_free, NULL);
+  file->direction_hash =       g_hash_table_new_full (g_str_hash, g_str_equal, g_free, NULL);
+  file->vector_hash =          g_hash_table_new_full (g_str_hash, g_str_equal, g_free, NULL);
+
   return file;
 }
 
 void
 destroy_step_output_file (step_file *file)
 {
+  g_hash_table_destroy (file->cartesian_point_hash);
+  g_hash_table_destroy (file->direction_hash);
   g_free (file);
 }
 
@@ -82,15 +88,15 @@ destroy_step_output_file (step_file *file)
 step_id
 make_3d_metric_step_geometric_representation_context (step_file *file)
 {
-  fprintf (file->f, "#%i = ( LENGTH_UNIT ( ) NAMED_UNIT ( * ) SI_UNIT ( .MILLI., .METRE. ) );\n", file->next_id);
-  fprintf (file->f, "#%i = ( NAMED_UNIT ( * ) PLANE_ANGLE_UNIT ( ) SI_UNIT ( $, .RADIAN. ) );\n", file->next_id + 1);
-  fprintf (file->f, "#%i = ( NAMED_UNIT ( * ) SI_UNIT ( $, .STERADIAN. ) SOLID_ANGLE_UNIT ( ) );\n", file->next_id + 2);
-  fprintf (file->f, "#%i = UNCERTAINTY_MEASURE_WITH_UNIT (LENGTH_MEASURE( 1.0E-005 ), #%i, 'distance_accuracy_value', 'NONE');\n", file->next_id + 3, file->next_id);
+  fprintf (file->f, "#%i=(LENGTH_UNIT()NAMED_UNIT(*)SI_UNIT(.MILLI.,.METRE.));\n", file->next_id);
+  fprintf (file->f, "#%i=(NAMED_UNIT(*)PLANE_ANGLE_UNIT()SI_UNIT($,.RADIAN.));\n", file->next_id + 1);
+  fprintf (file->f, "#%i=(NAMED_UNIT(*)SI_UNIT($,.STERADIAN.)SOLID_ANGLE_UNIT());\n", file->next_id + 2);
+  fprintf (file->f, "#%i=UNCERTAINTY_MEASURE_WITH_UNIT(LENGTH_MEASURE(1.0E-005),#%i, 'distance_accuracy_value', 'NONE');\n", file->next_id + 3, file->next_id);
 
-  fprintf (file->f, "#%i = ( GEOMETRIC_REPRESENTATION_CONTEXT ( 3 ) "
-                            "GLOBAL_UNCERTAINTY_ASSIGNED_CONTEXT ( ( #%i ) ) "
-                            "GLOBAL_UNIT_ASSIGNED_CONTEXT ( ( #%i, #%i, #%i ) ) "
-                            "REPRESENTATION_CONTEXT ( 'NONE', 'WORKASPACE' ) );\n",
+  fprintf (file->f, "#%i=(GEOMETRIC_REPRESENTATION_CONTEXT(3)"
+                          "GLOBAL_UNCERTAINTY_ASSIGNED_CONTEXT((#%i))"
+                          "GLOBAL_UNIT_ASSIGNED_CONTEXT((#%i,#%i,#%i))"
+                          "REPRESENTATION_CONTEXT('NONE','WORKASPACE'));\n",
                     file->next_id + 4, file->next_id + 3, file->next_id, file->next_id + 1, file->next_id + 2);
   file->next_id += 4;
 
@@ -100,7 +106,7 @@ make_3d_metric_step_geometric_representation_context (step_file *file)
 step_id
 step_application_context (step_file *file, char *application)
 {
-  fprintf (file->f, "#%i = APPLICATION_CONTEXT ( '%s' ) ;\n", file->next_id, application);
+  fprintf (file->f, "#%i=APPLICATION_CONTEXT('%s');\n", file->next_id, application);
 
   return file->next_id++;
 }
@@ -109,7 +115,7 @@ step_id
 step_application_protocol_definition (step_file *file, char *status, char *application_interpreted_model_schema_name,
                                       char *application_protocol_year, step_id application)
 {
-  fprintf (file->f, "#%i = APPLICATION_PROTOCOL_DEFINITION ( '%s', '%s', %s, #%i );\n",
+  fprintf (file->f, "#%i=APPLICATION_PROTOCOL_DEFINITION('%s','%s',%s,#%i);\n",
                     file->next_id, status, application_interpreted_model_schema_name, application_protocol_year, application);
 
   return file->next_id++;
@@ -118,7 +124,7 @@ step_application_protocol_definition (step_file *file, char *status, char *appli
 step_id
 step_product_context (step_file *file, char *name, step_id frame_of_reference, char *discipline_type)
 {
-  fprintf (file->f, "#%i = PRODUCT_CONTEXT ( '%s', #%i, '%s' ) ;\n",
+  fprintf (file->f, "#%i=PRODUCT_CONTEXT('%s',#%i,'%s');\n",
                     file->next_id, name, frame_of_reference, discipline_type);
 
   return file->next_id++;
@@ -127,9 +133,9 @@ step_product_context (step_file *file, char *name, step_id frame_of_reference, c
 step_id
 step_product (step_file *file, char *id, char *name, char *description, step_id_list frame_of_reference)
 {
-  fprintf (file->f, "#%i = PRODUCT ('%s', '%s', '%s', ", file->next_id, id, name, description);
+  fprintf (file->f, "#%i=PRODUCT('%s','%s','%s',", file->next_id, id, name, description);
   fprint_id_list (file->f, frame_of_reference);
-  fprintf (file->f, ") ;\n");
+  fprintf (file->f, ");\n");
   destroy_step_id_list (frame_of_reference);
 
   return file->next_id++;
@@ -139,12 +145,12 @@ step_id
 step_product_related_product_category (step_file *file, char *name, char *description, step_id_list products)
 {
   if (description != NULL)
-    fprintf (file->f, "#%i = PRODUCT_RELATED_PRODUCT_CATEGORY ('%s', '%s', ", file->next_id, name, description);
+    fprintf (file->f, "#%i=PRODUCT_RELATED_PRODUCT_CATEGORY('%s','%s',", file->next_id, name, description);
   else
-    fprintf (file->f, "#%i = PRODUCT_RELATED_PRODUCT_CATEGORY ('%s', $, ", file->next_id, name);
+    fprintf (file->f, "#%i=PRODUCT_RELATED_PRODUCT_CATEGORY('%s',$,", file->next_id, name);
 
   fprint_id_list (file->f, products);
-  fprintf (file->f, ") ;\n");
+  fprintf (file->f, ");\n");
   destroy_step_id_list (products);
 
   return file->next_id++;
@@ -153,7 +159,7 @@ step_product_related_product_category (step_file *file, char *name, char *descri
 step_id
 step_product_definition_context (step_file *file, char *name, step_id frame_of_reference, char *life_cycle_stage)
 {
-  fprintf (file->f, "#%i = PRODUCT_DEFINITION_CONTEXT ( '%s', #%i, '%s' ) ;\n",
+  fprintf (file->f, "#%i=PRODUCT_DEFINITION_CONTEXT('%s',#%i,'%s');\n",
                     file->next_id, name, frame_of_reference, life_cycle_stage);
 
   return file->next_id++;
@@ -162,7 +168,7 @@ step_product_definition_context (step_file *file, char *name, step_id frame_of_r
 step_id
 step_product_definition_formation (step_file *file, char *id, char *description, step_id of_product)
 {
-  fprintf (file->f, "#%i = PRODUCT_DEFINITION_FORMATION ( '%s', '%s', #%i) ;\n",
+  fprintf (file->f, "#%i=PRODUCT_DEFINITION_FORMATION('%s','%s',#%i);\n",
                     file->next_id, id, description, of_product);
 
   return file->next_id++;
@@ -171,7 +177,7 @@ step_product_definition_formation (step_file *file, char *id, char *description,
 step_id
 step_product_definition (step_file *file, char *id, char *description, step_id formation, step_id frame_of_reference)
 {
-  fprintf (file->f, "#%i = PRODUCT_DEFINITION ( '%s', '%s', #%i, #%i ) ;\n",
+  fprintf (file->f, "#%i=PRODUCT_DEFINITION('%s','%s',#%i,#%i);\n",
                     file->next_id, id, description, formation, frame_of_reference);
 
   return file->next_id++;
@@ -180,7 +186,7 @@ step_product_definition (step_file *file, char *id, char *description, step_id f
 step_id
 step_product_definition_shape (step_file *file, char *name, char *description, step_id definition)
 {
-  fprintf (file->f, "#%i = PRODUCT_DEFINITION_SHAPE ( '%s', '%s',  #%i ) ;\n",
+  fprintf (file->f, "#%i=PRODUCT_DEFINITION_SHAPE('%s','%s',#%i);\n",
                     file->next_id, name, description, definition);
 
   return file->next_id++;
@@ -189,23 +195,49 @@ step_product_definition_shape (step_file *file, char *name, char *description, s
 step_id
 step_cartesian_point (step_file *file, char *name, double x, double y, double z)
 {
-  fprintf (file->f, "#%i = CARTESIAN_POINT ( '%s', ( %f, %f, %f ) ) ;\n",
-                    file->next_id, name, x, y, z);
+  char *line;
+  step_id id;
+
+  line = g_strdup_printf ("'%s',(%f,%f,%f)", name, x, y, z);
+
+  if ((id = GPOINTER_TO_INT (g_hash_table_lookup (file->cartesian_point_hash, line))) != 0)
+    {
+      g_free (line);
+      return id;
+    }
+
+  g_hash_table_insert (file->cartesian_point_hash, line, GINT_TO_POINTER (file->next_id));
+  fprintf (file->f, "%i=CARTESIAN_POINT(%s);\n", file->next_id, line);
+  g_free (line);
+
   return file->next_id++;
 }
 
 step_id
 step_direction (step_file *file, char *name, double x, double y, double z)
 {
-  fprintf (file->f, "#%i = DIRECTION ( '%s', ( %f, %f, %f ) ) ;\n",
-                    file->next_id, name, x, y, z);
+  char *line;
+  step_id id;
+
+  line = g_strdup_printf ("'%s',(%f,%f,%f)", name, x, y, z);
+
+  if ((id = GPOINTER_TO_INT (g_hash_table_lookup (file->direction_hash, line))) != 0)
+    {
+      g_free (line);
+      return id;
+    }
+
+  g_hash_table_insert (file->direction_hash, line, GINT_TO_POINTER (file->next_id));
+  fprintf (file->f, "%i=DIRECTION(%s);\n", file->next_id, line);
+  g_free (line);
+
   return file->next_id++;
 }
 
 step_id
 step_axis2_placement_3d (step_file *file, char *name, step_id location, step_id axis, step_id ref_direction)
 {
-  fprintf (file->f, "#%i = AXIS2_PLACEMENT_3D ( '%s', #%i, #%i, #%i ) ;\n",
+  fprintf (file->f, "#%i=AXIS2_PLACEMENT_3D('%s',#%i,#%i,#%i);\n",
                     file->next_id, name, location, axis, ref_direction);
   return file->next_id++;
 }
@@ -213,7 +245,7 @@ step_axis2_placement_3d (step_file *file, char *name, step_id location, step_id
 step_id
 step_plane (step_file *file, char *name, step_id position)
 {
-  fprintf (file->f, "#%i = PLANE ( '%s', #%i ) ;\n",
+  fprintf (file->f, "#%i=PLANE('%s',#%i);\n",
                     file->next_id, name, position);
   return file->next_id++;
 }
@@ -221,7 +253,7 @@ step_plane (step_file *file, char *name, step_id position)
 step_id
 step_cylindrical_surface (step_file *file, char *name, step_id position, double radius)
 {
-  fprintf (file->f, "#%i = CYLINDRICAL_SURFACE ( '%s', #%i, %f ) ;\n",
+  fprintf (file->f, "#%i=CYLINDRICAL_SURFACE('%s',#%i,%f);\n",
                     file->next_id, name, position, radius);
   return file->next_id++;
 }
@@ -229,7 +261,7 @@ step_cylindrical_surface (step_file *file, char *name, step_id position, double
 step_id
 step_circle (step_file *file, char *name, step_id position, double radius)
 {
-  fprintf (file->f, "#%i = CIRCLE ( '%s', #%i, %f ) ;\n",
+  fprintf (file->f, "#%i=CIRCLE('%s',#%i,%f);\n",
                     file->next_id, name, position, radius);
   return file->next_id++;
 }
@@ -237,15 +269,28 @@ step_circle (step_file *file, char *name, step_id position, double radius)
 step_id
 step_vector (step_file *file, char *name, step_id orientation, double magnitude)
 {
-  fprintf (file->f, "#%i = VECTOR ( '%s', #%i, %f ) ;\n",
-                    file->next_id, name, orientation, magnitude);
+  char *line;
+  step_id id;
+
+  line = g_strdup_printf ("'%s',#%i,%f", name, orientation, magnitude);
+
+  if ((id = GPOINTER_TO_INT (g_hash_table_lookup (file->vector_hash, line))) != 0)
+    {
+      g_free (line);
+      return id;
+    }
+
+  g_hash_table_insert (file->vector_hash, line, GINT_TO_POINTER (file->next_id));
+  fprintf (file->f, "%i=VECTOR(%s);\n", file->next_id, line);
+  g_free (line);
+
   return file->next_id++;
 }
 
 step_id
 step_line (step_file *file, char *name, step_id pnt, step_id dir)
 {
-  fprintf (file->f, "#%i = LINE ( '%s', #%i, #%i ) ;\n",
+  fprintf (file->f, "#%i=LINE('%s',#%i,#%i);\n",
                     file->next_id, name, pnt, dir);
   return file->next_id++;
 }
@@ -253,7 +298,7 @@ step_line (step_file *file, char *name, step_id pnt, step_id dir)
 step_id
 step_vertex_point (step_file *file, char *name, step_id pnt)
 {
-  fprintf (file->f, "#%i = VERTEX_POINT ( '%s', #%i ) ;\n",
+  fprintf (file->f, "#%i=VERTEX_POINT('%s',#%i);\n",
                     file->next_id, name, pnt);
   return file->next_id++;
 }
@@ -261,7 +306,7 @@ step_vertex_point (step_file *file, char *name, step_id pnt)
 step_id
 step_edge_curve (step_file *file, char *name, step_id edge_start, step_id edge_end, step_id edge_geometry, bool same_sense)
 {
-  fprintf (file->f, "\n#%i = EDGE_CURVE ( '%s', #%i, #%i, #%i, %s ) ; ",
+  fprintf (file->f, "\n#%i=EDGE_CURVE('%s',#%i,#%i,#%i,%s);",
                     file->next_id, name, edge_start, edge_end, edge_geometry, step_bool (same_sense));
   return file->next_id++;
 }
@@ -269,7 +314,7 @@ step_edge_curve (step_file *file, char *name, step_id edge_start, step_id edge_e
 step_id
 step_oriented_edge (step_file *file, char *name, step_id edge_element, bool orientation)
 {
-  fprintf (file->f, "#%i = ORIENTED_EDGE ( '%s', *, *, #%i, %s ) ; ",
+  fprintf (file->f, "#%i=ORIENTED_EDGE('%s',*,*,#%i,%s);",
                     file->next_id, name, edge_element, step_bool (orientation));
   return file->next_id++;
 }
@@ -277,9 +322,9 @@ step_oriented_edge (step_file *file, char *name, step_id edge_element, bool orie
 step_id
 step_edge_loop (step_file *file, char *name, step_id_list edge_list)
 {
-  fprintf (file->f, "#%i = EDGE_LOOP ( '%s', ", file->next_id, name);
+  fprintf (file->f, "#%i=EDGE_LOOP('%s',", file->next_id, name);
   fprint_id_list (file->f, edge_list);
-  fprintf (file->f, " ) ; ");
+  fprintf (file->f, ");");
   destroy_step_id_list (edge_list);
 
   return file->next_id++;
@@ -288,7 +333,7 @@ step_edge_loop (step_file *file, char *name, step_id_list edge_list)
 step_id
 step_face_bound (step_file *file, char *name, step_id bound, bool orientation)
 {
-  fprintf (file->f, "#%i = FACE_BOUND ( '%s', #%i, %s ) ; ",
+  fprintf (file->f, "#%i=FACE_BOUND('%s',#%i,%s);",
                     file->next_id, name, bound, step_bool (orientation));
 
   return file->next_id++;
@@ -297,7 +342,7 @@ step_face_bound (step_file *file, char *name, step_id bound, bool orientation)
 step_id
 step_face_outer_bound (step_file *file, char *name, step_id bound, bool orientation)
 {
-  fprintf (file->f, "#%i = FACE_OUTER_BOUND ( '%s', #%i, %s ) ;\n",
+  fprintf (file->f, "#%i=FACE_OUTER_BOUND('%s',#%i,%s);\n",
                     file->next_id, name, bound, step_bool (orientation));
 
   return file->next_id++;
@@ -306,9 +351,9 @@ step_face_outer_bound (step_file *file, char *name, step_id bound, bool orientat
 step_id
 step_advanced_face (step_file *file, char *name, step_id_list bounds, step_id face_geometry, bool same_sense)
 {
-  fprintf (file->f, "#%i = ADVANCED_FACE ( '%s', ", file->next_id, name);
+  fprintf (file->f, "#%i=ADVANCED_FACE('%s',", file->next_id, name);
   fprint_id_list (file->f, bounds);
-  fprintf (file->f, ", #%i, %s ) ;\n", face_geometry, step_bool (same_sense));
+  fprintf (file->f, ",#%i,%s);\n", face_geometry, step_bool (same_sense));
   destroy_step_id_list (bounds);
 
   return file->next_id++;
@@ -317,9 +362,9 @@ step_advanced_face (step_file *file, char *name, step_id_list bounds, step_id fa
 step_id
 step_closed_shell (step_file *file, char *name, step_id_list cfs_faces)
 {
-  fprintf (file->f, "#%i = CLOSED_SHELL ( '%s', ", file->next_id, name);
+  fprintf (file->f, "#%i=CLOSED_SHELL('%s',", file->next_id, name);
   fprint_id_list (file->f, cfs_faces);
-  fprintf (file->f, " ) ;\n");
+  fprintf (file->f, ");\n");
   destroy_step_id_list (cfs_faces);
 
   return file->next_id++;
@@ -328,7 +373,7 @@ step_closed_shell (step_file *file, char *name, step_id_list cfs_faces)
 step_id
 step_manifold_solid_brep (step_file *file, char *name, step_id outer)
 {
-  fprintf (file->f, "#%i = MANIFOLD_SOLID_BREP ( '%s', #%i ) ;\n", file->next_id, name, outer);
+  fprintf (file->f, "#%i=MANIFOLD_SOLID_BREP('%s',#%i);\n", file->next_id, name, outer);
 
   return file->next_id++;
 }
@@ -336,9 +381,9 @@ step_manifold_solid_brep (step_file *file, char *name, step_id outer)
 step_id
 step_advanced_brep_shape_representation (step_file *file, char *name, step_id_list items, step_id context_of_items)
 {
-  fprintf (file->f, "#%i = ADVANCED_BREP_SHAPE_REPRESENTATION ( '%s', ", file->next_id, name);
+  fprintf (file->f, "#%i=ADVANCED_BREP_SHAPE_REPRESENTATION('%s',", file->next_id, name);
   fprint_id_list (file->f, items);
-  fprintf (file->f, ", #%i ) ;\n", context_of_items);
+  fprintf (file->f, ",#%i);\n", context_of_items);
   destroy_step_id_list (items);
 
   return file->next_id++;
@@ -347,7 +392,7 @@ step_advanced_brep_shape_representation (step_file *file, char *name, step_id_li
 step_id
 step_shape_definition_representation (step_file *file, step_id definition, step_id used_representation)
 {
-  fprintf (file->f, "#%i = SHAPE_DEFINITION_REPRESENTATION ( #%i, #%i ) ;\n", file->next_id, definition, used_representation);
+  fprintf (file->f, "#%i=SHAPE_DEFINITION_REPRESENTATION(#%i,#%i);\n", file->next_id, definition, used_representation);
 
   return file->next_id++;
 }
@@ -355,7 +400,7 @@ step_shape_definition_representation (step_file *file, step_id definition, step_
 step_id
 step_colour_rgb (step_file *file, char *name, double red, double green, double blue)
 {
-  fprintf (file->f, "#%i = COLOUR_RGB ( '%s', %f, %f, %f ) ;\n",
+  fprintf (file->f, "#%i=COLOUR_RGB('%s',%f,%f,%f);\n",
                     file->next_id, name, red, green, blue);
   return file->next_id++;
 }
@@ -363,7 +408,7 @@ step_colour_rgb (step_file *file, char *name, double red, double green, double b
 step_id
 step_fill_area_style_colour (step_file *file, char *name, step_id fill_colour)
 {
-  fprintf (file->f, "#%i = FILL_AREA_STYLE_COLOUR ( '%s', #%i ) ;\n",
+  fprintf (file->f, "#%i=FILL_AREA_STYLE_COLOUR('%s',#%i);\n",
                     file->next_id, name, fill_colour);
 
   return file->next_id++;
@@ -372,9 +417,9 @@ step_fill_area_style_colour (step_file *file, char *name, step_id fill_colour)
 step_id
 step_fill_area_style (step_file *file, char *name, step_id_list fill_styles)
 {
-  fprintf (file->f, "#%i = FILL_AREA_STYLE ('%s', ", file->next_id, name);
+  fprintf (file->f, "#%i=FILL_AREA_STYLE('%s',", file->next_id, name);
   fprint_id_list (file->f, fill_styles);
-  fprintf (file->f, " ) ;\n");
+  fprintf (file->f, ");\n");
   destroy_step_id_list (fill_styles);
 
   return file->next_id++;
@@ -383,7 +428,7 @@ step_fill_area_style (step_file *file, char *name, step_id_list fill_styles)
 step_id
 step_surface_style_fill_area (step_file *file, step_id fill_area)
 {
-  fprintf (file->f, "#%i = SURFACE_STYLE_FILL_AREA ( #%i ) ;\n",
+  fprintf (file->f, "#%i=SURFACE_STYLE_FILL_AREA(#%i);\n",
                     file->next_id, fill_area);
 
   return file->next_id++;
@@ -392,9 +437,9 @@ step_surface_style_fill_area (step_file *file, step_id fill_area)
 step_id
 step_surface_side_style (step_file *file, char *name, step_id_list styles)
 {
-  fprintf (file->f, "#%i = SURFACE_SIDE_STYLE ('%s', ", file->next_id, name);
+  fprintf (file->f, "#%i=SURFACE_SIDE_STYLE('%s',", file->next_id, name);
   fprint_id_list (file->f, styles);
-  fprintf (file->f, " ) ;\n");
+  fprintf (file->f, ");\n");
   destroy_step_id_list (styles);
 
   return file->next_id++;
@@ -404,7 +449,7 @@ step_surface_side_style (step_file *file, char *name, step_id_list styles)
 step_id
 step_surface_style_usage (step_file *file, char *surface_side, step_id style)
 {
-  fprintf (file->f, "#%i = SURFACE_STYLE_USAGE ( .%s. , #%i ) ;\n",
+  fprintf (file->f, "#%i=SURFACE_STYLE_USAGE(.%s.,#%i);\n",
                     file->next_id, surface_side, style);
 
   return file->next_id++;
@@ -413,9 +458,9 @@ step_surface_style_usage (step_file *file, char *surface_side, step_id style)
 step_id
 step_presentation_style_assignment (step_file *file, step_id_list styles)
 {
-  fprintf (file->f, "#%i = PRESENTATION_STYLE_ASSIGNMENT ( ", file->next_id);
+  fprintf (file->f, "#%i=PRESENTATION_STYLE_ASSIGNMENT(", file->next_id);
   fprint_id_list (file->f, styles);
-  fprintf (file->f, " ) ;\n");
+  fprintf (file->f, ");\n");
   destroy_step_id_list (styles);
 
   return file->next_id++;
@@ -424,9 +469,9 @@ step_presentation_style_assignment (step_file *file, step_id_list styles)
 step_id
 step_styled_item (step_file *file, char *name, step_id_list styles, step_id item)
 {
-  fprintf (file->f, "#%i = STYLED_ITEM ( '%s', ", file->next_id, name);
+  fprintf (file->f, "#%i=STYLED_ITEM('%s',", file->next_id, name);
   fprint_id_list (file->f, styles);
-  fprintf (file->f, ", #%i ) ;\n", item);
+  fprintf (file->f, ",#%i);\n", item);
   destroy_step_id_list (styles);
 
   return file->next_id++;
@@ -435,9 +480,9 @@ step_styled_item (step_file *file, char *name, step_id_list styles, step_id item
 step_id
 step_over_riding_styled_item (step_file *file, char *name, step_id_list styles, step_id item, step_id over_ridden_style)
 {
-  fprintf (file->f, "#%i = OVER_RIDING_STYLED_ITEM ( '%s', ", file->next_id, name);
+  fprintf (file->f, "#%i=OVER_RIDING_STYLED_ITEM('%s',", file->next_id, name);
   fprint_id_list (file->f, styles);
-  fprintf (file->f, ", #%i, #%i ) ;\n", item, over_ridden_style);
+  fprintf (file->f, ",#%i,#%i);\n", item, over_ridden_style);
   destroy_step_id_list (styles);
 
   return file->next_id++;
@@ -446,9 +491,9 @@ step_over_riding_styled_item (step_file *file, char *name, step_id_list styles,
 step_id
 step_presentation_layer_assignment (step_file *file, char *name, char *description, step_id_list assigned_items)
 {
-  fprintf (file->f, "#%i = PRESENTATION_LAYER_ASSIGNMENT ( '%s', '%s', ", file->next_id, name, description);
+  fprintf (file->f, "#%i=PRESENTATION_LAYER_ASSIGNMENT('%s','%s',", file->next_id, name, description);
   fprint_id_list (file->f, assigned_items);
-  fprintf (file->f, " ) ;\n");
+  fprintf (file->f, ");\n");
   destroy_step_id_list (assigned_items);
 
   return file->next_id++;
@@ -457,9 +502,9 @@ step_presentation_layer_assignment (step_file *file, char *name, char *descripti
 step_id
 step_mechanical_design_geometric_presentation_representation (step_file *file, char *name, step_id_list items, step_id context_of_items)
 {
-  fprintf (file->f, "#%i = MECHANICAL_DESIGN_GEOMETRIC_PRESENTATION_REPRESENTATION (  '%s', ", file->next_id, name);
+  fprintf (file->f, "#%i=MECHANICAL_DESIGN_GEOMETRIC_PRESENTATION_REPRESENTATION('%s',", file->next_id, name);
   fprint_id_list (file->f, items);
-  fprintf (file->f, ", #%i ) ;\n", context_of_items);
+  fprintf (file->f, ",#%i);\n", context_of_items);
   destroy_step_id_list (items);
 
   return file->next_id++;
diff --git a/src/hid/step/step_writer.h b/src/hid/step/step_writer.h
index c86aa1e..1702b77 100644
--- a/src/hid/step/step_writer.h
+++ b/src/hid/step/step_writer.h
@@ -5,6 +5,9 @@ typedef GList* step_id_list;
 typedef struct {
   FILE *f;
   step_id next_id;
+  GHashTable *cartesian_point_hash;
+  GHashTable *direction_hash;
+  GHashTable *vector_hash;
 
 } step_file;
 
diff --git a/src/polygon1.c b/src/polygon1.c
index 1b70a80..9427dc5 100644
--- a/src/polygon1.c
+++ b/src/polygon1.c
@@ -4281,7 +4281,7 @@ vect_inters2 (Vector p1, Vector p2, Vector q1, Vector q2,
 	      Vcpy2 (S2, hq2);
 	    };
 	}
-      fprintf (stderr, "Intersection returning %i\n", Vequ2 (S1, S2) ? 1 : 2);
+//      fprintf (stderr, "Intersection returning %i\n", Vequ2 (S1, S2) ? 1 : 2);
       return (Vequ2 (S1, S2) ? 1 : 2);
     }
   else
@@ -4329,7 +4329,7 @@ vect_inters2 (Vector p1, Vector p2, Vector q1, Vector q2,
 	  S1[0] = q1[0] + ROUND (t * rqx);
 	  S1[1] = q1[1] + ROUND (t * rqy);
 	}
-      fprintf (stderr, "Intersection returning 1\n");
+//      fprintf (stderr, "Intersection returning 1\n");
       return 1;
     }
 }				/* vect_inters2 */
