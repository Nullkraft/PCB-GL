Bottom: 1c7578f7a8b9782120a5dc8497404f38bb06a70c
Top:    73735b07c2d2e89ad5d452dd0248c2d465486913
Author: Peter Clifton <peter@clifton-electronics.co.uk>
Date:   2016-03-05 10:21:53 +0000

Try consolidating geometry in step creation

---

diff --git a/src/hid/step/step_writer.c b/src/hid/step/step_writer.c
index d64e062..784145a 100644
--- a/src/hid/step/step_writer.c
+++ b/src/hid/step/step_writer.c
@@ -69,12 +69,19 @@ step_file
   file->f = f;
   file->next_id = 1;
 
+  file->cartesian_point_hash = g_hash_table_new_full (g_str_hash, g_str_equal, g_free, NULL);
+  file->direction_hash =       g_hash_table_new_full (g_str_hash, g_str_equal, g_free, NULL);
+  file->vector_hash =          g_hash_table_new_full (g_str_hash, g_str_equal, g_free, NULL);
+
   return file;
 }
 
 void
 destroy_step_output_file (step_file *file)
 {
+  g_hash_table_destroy (file->cartesian_point_hash);
+  g_hash_table_destroy (file->direction_hash);
+  g_hash_table_destroy (file->vector_hash);
   g_free (file);
 }
 
@@ -189,16 +196,40 @@ step_product_definition_shape (step_file *file, char *name, char *description, s
 step_id
 step_cartesian_point (step_file *file, char *name, double x, double y, double z)
 {
-  fprintf (file->f, "#%i=CARTESIAN_POINT('%s',(%f,%f,%f));\n",
-                    file->next_id, name, x, y, z);
+  char *line;
+  step_id id;
+
+  line = g_strdup_printf ("'%s',(%f,%f,%f)", name, x, y, z);
+
+  if ((id = GPOINTER_TO_INT (g_hash_table_lookup (file->cartesian_point_hash, line))) != 0)
+    {
+      g_free (line);
+      return id;
+    }
+
+  g_hash_table_insert (file->cartesian_point_hash, line, GINT_TO_POINTER (file->next_id));
+  fprintf (file->f, "#%i=CARTESIAN_POINT(%s);\n", file->next_id, line);
+
   return file->next_id++;
 }
 
 step_id
 step_direction (step_file *file, char *name, double x, double y, double z)
 {
-  fprintf (file->f, "#%i=DIRECTION('%s',(%f,%f,%f));\n",
-                    file->next_id, name, x, y, z);
+  char *line;
+  step_id id;
+
+  line = g_strdup_printf ("'%s',(%f,%f,%f)", name, x, y, z);
+
+  if ((id = GPOINTER_TO_INT (g_hash_table_lookup (file->direction_hash, line))) != 0)
+    {
+      g_free (line);
+      return id;
+    }
+
+  g_hash_table_insert (file->direction_hash, line, GINT_TO_POINTER (file->next_id));
+  fprintf (file->f, "#%i=DIRECTION(%s);\n", file->next_id, line);
+
   return file->next_id++;
 }
 
@@ -237,8 +268,20 @@ step_circle (step_file *file, char *name, step_id position, double radius)
 step_id
 step_vector (step_file *file, char *name, step_id orientation, double magnitude)
 {
-  fprintf (file->f, "#%i=VECTOR('%s',#%i,%f);\n",
-                    file->next_id, name, orientation, magnitude);
+  char *line;
+  step_id id;
+
+  line = g_strdup_printf ("'%s',#%i,%f", name, orientation, magnitude);
+
+  if ((id = GPOINTER_TO_INT (g_hash_table_lookup (file->vector_hash, line))) != 0)
+    {
+      g_free (line);
+      return id;
+    }
+
+  g_hash_table_insert (file->vector_hash, line, GINT_TO_POINTER (file->next_id));
+  fprintf (file->f, "#%i=VECTOR(%s);\n", file->next_id, line);
+
   return file->next_id++;
 }
 
diff --git a/src/hid/step/step_writer.h b/src/hid/step/step_writer.h
index c86aa1e..1702b77 100644
--- a/src/hid/step/step_writer.h
+++ b/src/hid/step/step_writer.h
@@ -5,6 +5,9 @@ typedef GList* step_id_list;
 typedef struct {
   FILE *f;
   step_id next_id;
+  GHashTable *cartesian_point_hash;
+  GHashTable *direction_hash;
+  GHashTable *vector_hash;
 
 } step_file;
