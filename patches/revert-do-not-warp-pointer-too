Bottom: 7d2aca7866648c86037531413de06801f78e75f1
Top:    6d738a325b00e3a12fe2dd0bb20756b665c955b2
Author: Peter Clifton <peter@clifton-electronics.co.uk>
Date:   2015-09-27 13:38:34 -0800

Revert "Do not warp pointer too easily..."

This reverts commit 0be7dc9e80fc0cee683bf4fb07705e122059bcdf.

* Pointer warping bug people so now you have to double-click to get it

* Tooltip for the drc window


---

diff --git a/src/action.c b/src/action.c
index 0be31ab..cf34a76 100644
--- a/src/action.c
+++ b/src/action.c
@@ -3820,8 +3820,7 @@ ActionAddRats (int argc, char **argv, Coord x, Coord y)
 	      DrawRat (shorty);
 	      Draw ();
 	      CenterDisplay ((shorty->Point2.X + shorty->Point1.X) / 2,
-			     (shorty->Point2.Y + shorty->Point1.Y) / 2,
-                             false);
+			     (shorty->Point2.Y + shorty->Point1.Y) / 2);
 	    }
 	  break;
 	}
@@ -5987,7 +5986,7 @@ ActionNew (int argc, char **argv, Coord x, Coord y)
 
       ResetStackAndVisibility ();
       SetCrosshairRange (0, 0, PCB->MaxWidth, PCB->MaxHeight);
-      CenterDisplay (PCB->MaxWidth / 2, PCB->MaxHeight / 2, false);
+      CenterDisplay (PCB->MaxWidth / 2, PCB->MaxHeight / 2);
       Redraw ();
 
       hid_action ("PCBChanged");
diff --git a/src/find.c b/src/find.c
index e1c1ee2..63bf814 100644
--- a/src/find.c
+++ b/src/find.c
@@ -4227,7 +4227,7 @@ GotoError (void)
           GetLayerNumber (PCB->Data, (LayerType *) thing_ptr1),
           true, true);
     }
-  CenterDisplay (X, Y, false);
+  CenterDisplay (X, Y);
 }
 
 void
diff --git a/src/hid.h b/src/hid.h
index 7543ab5..54753b9 100644
--- a/src/hid.h
+++ b/src/hid.h
@@ -386,8 +386,7 @@ typedef enum
 #define HID_SC_DO_NOTHING                          0
 #define HID_SC_WARP_POINTER	                       1
 #define HID_SC_PAN_VIEWPORT                        2
-#define HID_SC_CENTER_IN_VIEWPORT                  3
-#define HID_SC_CENTER_IN_VIEWPORT_AND_WARP_POINTER 4
+#define HID_SC_CENTER_IN_VIEWPORT_AND_WARP_POINTER 3
 
     /* Causes func to be called at some point in the future.  Timers are
        only good for *one* call; if you want it to repeat, add another
diff --git a/src/hid/gtk/gtkhid-main.c b/src/hid/gtk/gtkhid-main.c
index da13afe..b0e12be 100644
--- a/src/hid/gtk/gtkhid-main.c
+++ b/src/hid/gtk/gtkhid-main.c
@@ -305,7 +305,6 @@ ghid_set_crosshair (int x, int y, int action)
 
   if (action != HID_SC_PAN_VIEWPORT &&
       action != HID_SC_WARP_POINTER &&
-      action != HID_SC_CENTER_IN_VIEWPORT &&
       action != HID_SC_CENTER_IN_VIEWPORT_AND_WARP_POINTER)
     return;
 
@@ -321,15 +320,6 @@ ghid_set_crosshair (int x, int y, int action)
 
   switch (action) {
 
-    case HID_SC_CENTER_IN_VIEWPORT:
-
-      // Center the viewport on the crosshair
-      ghid_pan_view_abs (gport->crosshair_x - gport->view.width / 2,
-                         gport->crosshair_y - gport->view.height / 2,
-                         0, 0);
-
-      break;
-
     case HID_SC_CENTER_IN_VIEWPORT_AND_WARP_POINTER:
 
       // Center the viewport on the crosshair
diff --git a/src/hid/gtk/gui-drc-window.c b/src/hid/gtk/gui-drc-window.c
index 14421b3..5d1c014 100644
--- a/src/hid/gtk/gui-drc-window.c
+++ b/src/hid/gtk/gui-drc-window.c
@@ -150,8 +150,6 @@ selection_changed_cb (GtkTreeSelection *selection, gpointer user_data)
   SetChangedFlag (true);
   IncrementUndoSerialNumber ();
   Draw();
-
-  CenterDisplay (violation->x_coord, violation->y_coord, false);
 }
 
 static void
@@ -169,10 +167,11 @@ row_activated_cb (GtkTreeView *view, GtkTreePath *path,
   if (violation == NULL)
     return;
 
-  CenterDisplay (violation->x_coord, violation->y_coord, true);
+  CenterDisplay (violation->x_coord, violation->y_coord);
   gtk_window_present (GTK_WINDOW (gport->top_window));
 }
 
+
 enum
 {
   PROP_TITLE = 1,
@@ -795,11 +794,6 @@ ghid_drc_window_show (gboolean raise)
   drc_list = gtk_tree_view_new_with_model (GTK_TREE_MODEL (drc_list_model));
   gtk_container_add (GTK_CONTAINER (scrolled_window), drc_list);
 
-  gtk_widget_set_tooltip_text (drc_list,
-                               "Single-click to locate the violation,\n"
-                               "double-click to also warp the mouse\n"
-                               "pointer there.");
-
   gtk_tree_view_set_rules_hint (GTK_TREE_VIEW (drc_list), TRUE);
   g_signal_connect (gtk_tree_view_get_selection (GTK_TREE_VIEW (drc_list)), "changed",
 		    G_CALLBACK (selection_changed_cb), NULL);
diff --git a/src/misc.c b/src/misc.c
index 48f5ed7..80099b9 100644
--- a/src/misc.c
+++ b/src/misc.c
@@ -828,11 +828,10 @@ GetDataBoundingBox (DataType *Data)
 }
 
 /* ---------------------------------------------------------------------------
- * centers the displayed PCB around the specified point (X,Y), and move the
- * crosshair there.  If warp_pointer is true warp the pointer to the crosshair
+ * centers the displayed PCB around the specified point (X,Y)
  */
 void
-CenterDisplay (Coord X, Coord Y, bool warp_pointer)
+CenterDisplay (Coord X, Coord Y)
 {
   Coord save_grid = PCB->Grid;
 
@@ -841,11 +840,8 @@ CenterDisplay (Coord X, Coord Y, bool warp_pointer)
   if (MoveCrosshairAbsolute (X, Y))
     notify_crosshair_change (true);
 
-  if (warp_pointer)
-    gui->set_crosshair (Crosshair.X, Crosshair.Y,
-                        HID_SC_CENTER_IN_VIEWPORT_AND_WARP_POINTER );
-  else
-    gui->set_crosshair (Crosshair.X, Crosshair.Y, HID_SC_CENTER_IN_VIEWPORT);
+  gui->set_crosshair (Crosshair.X, Crosshair.Y,
+                      HID_SC_CENTER_IN_VIEWPORT_AND_WARP_POINTER);
 
   PCB->Grid = save_grid;
 }
diff --git a/src/misc.h b/src/misc.h
index fdd7162..3f6631c 100644
--- a/src/misc.h
+++ b/src/misc.h
@@ -60,7 +60,7 @@ bool IsLayerGroupEmpty (int);
 bool IsPasteEmpty (int);
 void CountHoles (int *, int *, const BoxType *);
 BoxType * GetDataBoundingBox (DataType *);
-void CenterDisplay (Coord, Coord, bool warp_pointer);
+void CenterDisplay (Coord, Coord);
 void SetFontInfo (FontType *);
 char *make_route_string (RouteStyleType rs[], int n_styles);
 int ParseGroupString (char *, LayerGroupType *, int * /* LayerN */);
