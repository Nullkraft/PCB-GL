Bottom: 2b5c74c8b854ea55a3634a2f8ad38f7e093c304b
Top:    021e213f28f81dece3ee06f0d2d5d6ae9e8ddf17
Author: Peter Clifton <peter@clifton-electronics.co.uk>
Date:   2016-02-28 00:25:49 +0000

Try prepending the stolen when concatenating geometry..

The destination objects will likely keep getting larger, so it should avoid
needing to traverse the entire list length to append data.

Possibly a circularly linked list might be more efficient here, but GLib
doesn't have a convenient implementation.


---

diff --git a/src/hid/common/object3d.c b/src/hid/common/object3d.c
index a603eba..b24856a 100644
--- a/src/hid/common/object3d.c
+++ b/src/hid/common/object3d.c
@@ -1612,9 +1612,10 @@ steal_object_geometry (object3d *dst, object3d *src)
 {
   g_assert (dst != src);
 
-  dst->faces    = g_list_concat (dst->faces,    src->faces);
-  dst->edges    = g_list_concat (dst->edges,    src->edges);
-  dst->vertices = g_list_concat (dst->vertices, src->vertices);
+  /* Prepend the src chunks, as src is likely to be a lot smaller then dst once we get going */
+  dst->faces    = g_list_concat (src->faces,    dst->faces);
+  dst->edges    = g_list_concat (src->edges,    dst->edges);
+  dst->vertices = g_list_concat (src->vertices, dst->vertices);
   src->faces = NULL;
   src->edges = NULL;
   src->vertices = NULL;
