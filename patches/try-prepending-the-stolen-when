Bottom: 7364b236657d3826e59cf648d49180926d08e6cf
Top:    b6a433fe66536c74c92968d9299f1753842000a8
Author: Peter Clifton <peter@clifton-electronics.co.uk>
Date:   2016-02-28 00:25:49 +0000

Try prepending the stolen when concatenating geometry..

The destination objects will likely keep getting larger, so it should avoid
needing to traverse the entire list length to append data.

Possibly a circularly linked list might be more efficient here, but GLib
doesn't have a convenient implementation.


---

diff --git a/src/hid/common/object3d.c b/src/hid/common/object3d.c
index 5818e29..8d2608c 100644
--- a/src/hid/common/object3d.c
+++ b/src/hid/common/object3d.c
@@ -1543,9 +1543,10 @@ steal_object_geometry (object3d *dst, object3d *src)
 {
   g_assert (dst != src);
 
-  dst->faces    = g_list_concat (dst->faces,    src->faces);
-  dst->edges    = g_list_concat (dst->edges,    src->edges);
-  dst->vertices = g_list_concat (dst->vertices, src->vertices);
+  /* Prepend the src chunks, as src is likely to be a lot smaller then dst once we get going */
+  dst->faces    = g_list_concat (src->faces,    dst->faces);
+  dst->edges    = g_list_concat (src->edges,    dst->edges);
+  dst->vertices = g_list_concat (src->vertices, dst->vertices);
   src->faces = NULL;
   src->edges = NULL;
   src->vertices = NULL;
