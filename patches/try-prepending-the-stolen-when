Bottom: bc8a72a01c3da1aa2beaea596f4bb02ed6506d35
Top:    136dad46e2907233b32d10c12036e25270d1b17c
Author: Peter Clifton <peter@clifton-electronics.co.uk>
Date:   2016-02-28 00:25:49 +0000

Try prepending the stolen when concatenating geometry..

The destination objects will likely keep getting larger, so it should avoid
needing to traverse the entire list length to append data.

Possibly a circularly linked list might be more efficient here, but GLib
doesn't have a convenient implementation.


---

diff --git a/src/hid/common/object3d.c b/src/hid/common/object3d.c
index ead0e97..57d49a0 100644
--- a/src/hid/common/object3d.c
+++ b/src/hid/common/object3d.c
@@ -1193,9 +1193,10 @@ steal_object_geometry (object3d *dst, object3d *src)
 {
   g_assert (dst != src);
 
-  dst->faces    = g_list_concat (dst->faces,    src->faces);
-  dst->edges    = g_list_concat (dst->edges,    src->edges);
-  dst->vertices = g_list_concat (dst->vertices, src->vertices);
+  /* Prepend the src chunks, as src is likely to be a lot smaller then dst once we get going */
+  dst->faces    = g_list_concat (src->faces,    dst->faces);
+  dst->edges    = g_list_concat (src->edges,    dst->edges);
+  dst->vertices = g_list_concat (src->vertices, dst->vertices);
   src->faces = NULL;
   src->edges = NULL;
   src->vertices = NULL;
