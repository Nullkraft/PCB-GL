Bottom: 8857964225fa9c8f74e6deccda634dded2cee785
Top:    b451f32fb1fdc37a514289f58a1e8aa08c444bfe
Author: Peter Clifton <peter@clifton-electronics.co.uk>
Date:   2016-02-13 17:42:30 +0000

Fix return codes from poly_Copy* functions when coping NULL input polygons

Copying a NULL polygon results in a NULL return polygon. This is not an error,
so be sure to return TRUE for success, otherwise we can abort boolean
later processing incorrectly, such as in poly_Boolean and poly_BooleanFree


---

diff --git a/src/polygon1.c b/src/polygon1.c
index ecbdddd..9282eda 100644
--- a/src/polygon1.c
+++ b/src/polygon1.c
@@ -2400,6 +2400,8 @@ poly_Boolean (const POLYAREA * a_org, const POLYAREA * b_org,
 {
   POLYAREA *a = NULL, *b = NULL;
 
+  *res = NULL; /* Set now, in case we run out of memory below */
+
   if (!poly_M_Copy0 (&a, a_org) || !poly_M_Copy0 (&b, b_org))
     return err_no_memory;
 
@@ -2420,7 +2422,7 @@ poly_Boolean_free (POLYAREA * ai, POLYAREA * bi, POLYAREA ** res, int action)
 
   test_polyInvContour ();
 
-  *res = NULL;
+  *res = NULL; /* Set now, in case we run out of memory below */
 
   if (!a)
     {
@@ -3019,7 +3021,8 @@ poly_M_Copy0 (POLYAREA ** dst, const POLYAREA * srcfst)
 
   *dst = NULL;
   if (src == NULL)
-    return FALSE;
+    return TRUE; /* Copying a NULL POLYAREA is not a failure, return true */
+
   do
     {
       if ((di = poly_Create ()) == NULL || !poly_Copy1 (di, src))
