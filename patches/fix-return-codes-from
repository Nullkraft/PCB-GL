Bottom: 08b28bf8267575e63cb08f4ef4a55acf86d42e54
Top:    bf7e7c67aaf3e19f1c2ebec14d307bbfb2d13f61
Author: Peter Clifton <peter@clifton-electronics.co.uk>
Date:   2016-02-13 18:57:51 +0000

Fix return codes from poly_Copy* functions when coping NULL input polygons

Copying a NULL polygon results in a NULL return polygon. This is not an error,
so be sure to return TRUE for success, otherwise we can abort boolean
later processing incorrectly, such as in poly_Boolean and poly_BooleanFree


---

diff --git a/src/polygon1.c b/src/polygon1.c
index ecbdddd..1dd9607 100644
--- a/src/polygon1.c
+++ b/src/polygon1.c
@@ -2989,8 +2989,10 @@ BOOLp
 poly_Copy0 (POLYAREA ** dst, const POLYAREA * src)
 {
   *dst = NULL;
-  if (src != NULL)
-    *dst = (POLYAREA *)calloc (1, sizeof (POLYAREA));
+  if (src == NULL)
+    return TRUE;
+
+  *dst = (POLYAREA *)calloc (1, sizeof (POLYAREA));
   if (*dst == NULL)
     return FALSE;
   (*dst)->contour_tree = r_create_tree (NULL, 0, 0);
@@ -3019,7 +3021,8 @@ poly_M_Copy0 (POLYAREA ** dst, const POLYAREA * srcfst)
 
   *dst = NULL;
   if (src == NULL)
-    return FALSE;
+    return TRUE;
+
   do
     {
       if ((di = poly_Create ()) == NULL || !poly_Copy1 (di, src))
