Bottom: b668b515182b2aeeb8d8b47fbca1dfb7c2aa5ec9
Top:    fef5a7c674eccbd50c3d7a714772b8f8c7380d45
Author: Peter Clifton <peter@clifton-electronics.co.uk>
Date:   2016-02-13 18:51:39 +0000

Try applying Martin's upstream patch (or similar)... and see how that looks with our new macros


---

diff --git a/src/polygon1.c b/src/polygon1.c
index fc18f40..c4d1baa 100644
--- a/src/polygon1.c
+++ b/src/polygon1.c
@@ -1649,16 +1649,14 @@ Gather (VNODE *startv, PLINE **result, J_Rule j_rule, DIRECTION initdir)
   return err_ok;
 }				/* Gather */
 
-/* cure is considered an edge */
+/* curv is considered a vertex */
 static void
-Collect1 (jmp_buf *e, VNODE *cure, DIRECTION dir, POLYAREA **contours,
+Collect1 (jmp_buf *e, VNODE *curv, DIRECTION dir, POLYAREA **contours,
           PLINE **holes, J_Rule j_rule)
 {
   PLINE *p = NULL;		/* start making contour */
   int errc = err_ok;
-  if ((errc = Gather ((dir == FORW) ? EDGE_BACKWARD_VERTEX (cure) :
-                                      EDGE_FORWARD_VERTEX (cure),
-                      &p, j_rule, dir)) != err_ok)
+  if ((errc = Gather (curv, &p, j_rule, dir)) != err_ok)
     {
       if (p != NULL)
 	poly_DelContour (&p);
@@ -1706,7 +1704,9 @@ Collect (char poly, jmp_buf * e, PLINE * a, POLYAREA ** contours, PLINE ** holes
 #endif
 
       if (j_rule (poly, cure, &dir) && cure->Flags.mark == 0)
-	Collect1 (e, cure, dir, contours, holes, j_rule);
+        Collect1 (e, (dir == FORW) ? EDGE_BACKWARD_VERTEX (cure) :
+                                     EDGE_FORWARD_VERTEX (cure),
+                  dir, contours, holes, j_rule);
     }
   while ((cure = NEXT_EDGE (cure)) != &a->head);
 }				/* Collect */
