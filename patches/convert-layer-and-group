Bottom: 304a650a3f34514901ea7fa59868e0ba7e817e57
Top:    7709b4535e217d082976efc6095e0b6108adb8de
Author: Peter Clifton <peter@clifton-electronics.co.uk>
Date:   2016-03-12 18:50:12 +0000

Convert layer and group indexes to Cardinal


---

diff --git a/src/data.c b/src/data.c
index 9d6588c..1c4c425 100644
--- a/src/data.c
+++ b/src/data.c
@@ -47,7 +47,7 @@ PCBType *PCB;			/* pointer to layout struct */
 
 char *Progname;
 SettingType Settings;
-int LayerStack[MAX_LAYER];	/* determines the layer draw order */
+Cardinal LayerStack[MAX_LAYER];	/* determines the layer draw order */
 
 BufferType Buffers[MAX_BUFFER];	/* my buffers */
 LibraryType Library;		/* the library */
diff --git a/src/data.h b/src/data.h
index 89d9b87..2c20ab2 100644
--- a/src/data.h
+++ b/src/data.h
@@ -64,7 +64,7 @@ extern char *Progname;
 extern char *InputTranslations;
 
 extern int addedLines;
-extern int LayerStack[MAX_LAYER];
+extern Cardinal LayerStack[MAX_LAYER];
 
 extern bool Bumped;
 
diff --git a/src/global.h b/src/global.h
index a542ccf..a050b98 100644
--- a/src/global.h
+++ b/src/global.h
@@ -392,7 +392,7 @@ typedef struct			/* holds all objects */
   Cardinal ViaN,		/* number of vias */
     ElementN,			/* and elements */
     RatN;			/* and rat-lines */
-  int LayerN;			/* number of layers in this board */
+  Cardinal LayerN;		/* number of layers in this board */
   GList *Via;
   GList *Element;
   GList *Rat;
diff --git a/src/hid/common/object3d.c b/src/hid/common/object3d.c
index 277d99f..70cc51b 100644
--- a/src/hid/common/object3d.c
+++ b/src/hid/common/object3d.c
@@ -152,7 +152,8 @@ float colors[12][3] = {{1., 0., 0.},
 #define CIRC_SEGS 64
 
 static void
-draw_quad_edge (edge_ref e, void *data)
+draw_quad_edge (edge_ref e,
+                G_GNUC_UNUSED void *data)
 {
 #if 0
   int id = ID(e) % 12;
@@ -197,7 +198,8 @@ draw_quad_edge (edge_ref e, void *data)
 }
 
 static void
-object3d_draw_debug_single (object3d *object, void *user_data)
+object3d_draw_debug_single (object3d *object,
+                            G_GNUC_UNUSED void *user_data)
 {
   g_return_if_fail (object->edges != NULL);
 
@@ -740,6 +742,9 @@ object3d_from_board_outline (void)
 {
   POLYAREA *board_outline = board_outline_poly (true);
   POLYAREA *pa;
+  appearance *board_appearance;
+  appearance *top_bot_appearance;
+  GList *objects;
 
 #if 0
   return object3d_from_soldermask_within_area (board_outline, TOP_SIDE);
@@ -758,10 +763,6 @@ object3d_from_board_outline (void)
     }
   while ((pa = pa->f) != board_outline);
 
-  appearance *board_appearance;
-  appearance *top_bot_appearance;
-  GList *objects;
-
   board_appearance = make_appearance ();
   top_bot_appearance = NULL;
   appearance_set_color (board_appearance,   1.0, 1.0, 0.6);
@@ -1091,13 +1092,13 @@ object3d_from_soldermask_within_area (POLYAREA *area, int side)
 }
 
 static Coord
-compute_depth (int group)
+compute_depth (Cardinal group)
 {
-  int top_group;
-  int bottom_group;
-  int min_copper_group;
-  int max_copper_group;
-  int num_copper_groups;
+  Cardinal top_group;
+  Cardinal bottom_group;
+  Cardinal min_copper_group;
+  Cardinal max_copper_group;
+  Cardinal num_copper_groups;
   int depth;
 
   top_group = GetLayerGroupNumberBySide (TOP_SIDE);
diff --git a/src/hid/lesstif/dialogs.c b/src/hid/lesstif/dialogs.c
index 3579a40..83b5ec4 100644
--- a/src/hid/lesstif/dialogs.c
+++ b/src/hid/lesstif/dialogs.c
@@ -1417,7 +1417,7 @@ lgbutton_expose (Widget w, XtPointer u, XmDrawingAreaCallbackStruct *cbs)
 static void
 lgbutton_input (Widget w, XtPointer u, XmDrawingAreaCallbackStruct *cbs)
 {
-  int layer, group;
+  Cardinal layer, group;
   if (cbs->event->type != ButtonPress)
     return;
   layer = cbs->event->xbutton.y * (max_copper_layer + 2) / lg_height;
diff --git a/src/misc.c b/src/misc.c
index 643730e..c7bdef2 100644
--- a/src/misc.c
+++ b/src/misc.c
@@ -96,7 +96,7 @@ static void GetGridLockCoordinates (int, void *, void *, void *,
 static struct
 {
   bool ElementOn, InvisibleObjectsOn, PinOn, ViaOn, RatOn;
-  int LayerStack[MAX_LAYER];
+  Cardinal LayerStack[MAX_LAYER];
   bool LayerOn[MAX_LAYER];
   int cnt;
 } SavedStack;
@@ -614,7 +614,7 @@ SetTextBoundingBox (FontType *FontPtr, TextType *Text)
 {
   SymbolType *symbol = FontPtr->Symbol;
   unsigned char *s = (unsigned char *) Text->TextString;
-  int i;
+  unsigned int i;
   int space;
 
   Coord minx, miny, maxx, maxy, tx;
@@ -775,7 +775,7 @@ IsLayerNumEmpty (int num)
 bool
 IsLayerGroupEmpty (int num)
 {
-  int i;
+  Cardinal i;
   for (i=0; i<PCB->LayerGroups.Number[num]; i++)
     if (!IsLayerNumEmpty (PCB->LayerGroups.Entries[num][i]))
       return false;
@@ -1107,10 +1107,10 @@ error:
  * comma separated layer numbers (1,2,b:4,6,8,t)
  */
 int
-ParseGroupString (char *group_string, LayerGroupType *LayerGroup, int *LayerN)
+ParseGroupString (char *group_string, LayerGroupType *LayerGroup, Cardinal *LayerN)
 {
   char *s;
-  int group, member, layer;
+  Cardinal group, member, layer;
   bool top_set = false,        /* flags for the two special layers to */
     bottom_set = false;           /* provide a default setting for old formats */
   int groupnum[MAX_LAYER];
@@ -1138,7 +1138,7 @@ ParseGroupString (char *group_string, LayerGroupType *LayerGroup, int *LayerN)
         default:
           if (!isdigit ((int) *s))
             goto error;
-          *LayerN = MAX (*LayerN, atoi (s));
+          *LayerN = MAX (*LayerN, (unsigned int)atoi (s));
           break;
         }
 
@@ -1396,10 +1396,10 @@ ExpandFilename (char *Dirname, char *Filename)
 /* ---------------------------------------------------------------------------
  * returns the layer number for the passed pointer
  */
-int
+Cardinal
 GetLayerNumber (DataType *Data, LayerType *Layer)
 {
-  int i;
+  Cardinal i;
 
   for (i = 0; i < MAX_LAYER + EXTRA_LAYERS; i++)
     if (Layer == &Data->Layer[i])
@@ -1411,9 +1411,9 @@ GetLayerNumber (DataType *Data, LayerType *Layer)
  * move layer (number is passed in) to top of layerstack
  */
 static void
-PushOnTopOfLayerStack (int NewTop)
+PushOnTopOfLayerStack (Cardinal NewTop)
 {
-  int i;
+  Cardinal i;
 
   /* ignore silk and other extra layers */
   if (NewTop < max_copper_layer)
@@ -1436,9 +1436,10 @@ PushOnTopOfLayerStack (int NewTop)
  * returns the number of changed layers
  */
 int
-ChangeGroupVisibility (int Layer, bool On, bool ChangeStackOrder)
+ChangeGroupVisibility (Cardinal Layer, bool On, bool ChangeStackOrder)
 {
-  int group, i, changed = 1;    /* at least the current layer changes */
+  Cardinal group, i;
+  int changed = 1;    /* at least the current layer changes */
 
   /* Warning: these special case values must agree with what gui-top-window.c
      |  thinks the are.
@@ -1452,7 +1453,7 @@ ChangeGroupVisibility (int Layer, bool On, bool ChangeStackOrder)
   group = GetLayerGroupNumberByNumber (Layer);
   for (i = PCB->LayerGroups.Number[group]; i;)
     {
-      int layer = PCB->LayerGroups.Entries[group][--i];
+      Cardinal layer = PCB->LayerGroups.Entries[group][--i];
 
       /* don't count the passed member of the group */
       if (layer != Layer && layer < max_copper_layer)
@@ -1487,7 +1488,8 @@ LayerStringToLayerStack (char *s)
   static int listed_layers = 0;
   int l = strlen (s);
   char **args;
-  int i, argn, lno;
+  Cardinal ci, lno;
+  int i, argn;
   int prev_sep = 1;
 
   s = strdup (s);
@@ -1514,11 +1516,11 @@ LayerStringToLayerStack (char *s)
 	}
     }
 
-  for (i = 0; i < max_copper_layer + EXTRA_LAYERS; i++)
+  for (ci = 0; ci < max_copper_layer + EXTRA_LAYERS; ci++)
     {
-      if (i < max_copper_layer)
-        LayerStack[i] = i;
-      PCB->Data->Layer[i].On = false;
+      if (ci < max_copper_layer)
+        LayerStack[ci] = ci;
+      PCB->Data->Layer[ci].On = false;
     }
   PCB->ElementOn = false;
   PCB->InvisibleObjectsOn = false;
@@ -1547,7 +1549,7 @@ LayerStringToLayerStack (char *s)
 	Settings.ShowBottomSide = 1;
       else if (isdigit ((int) args[i][0]))
 	{
-	  lno = atoi (args[i]);
+	  lno = (Cardinal)atoi (args[i]);
 	  ChangeGroupVisibility (lno, true, true);
 	}
       else
@@ -1580,7 +1582,7 @@ LayerStringToLayerStack (char *s)
 /* ---------------------------------------------------------------------------
  * returns the layergroup number for the passed pointer
  */
-int
+Cardinal
 GetLayerGroupNumberByPointer (LayerType *Layer)
 {
   return (GetLayerGroupNumberByNumber (GetLayerNumber (PCB->Data, Layer)));
@@ -1589,10 +1591,10 @@ GetLayerGroupNumberByPointer (LayerType *Layer)
 /* ---------------------------------------------------------------------------
  * returns the layergroup number for the passed layernumber
  */
-int
+Cardinal
 GetLayerGroupNumberByNumber (Cardinal Layer)
 {
-  int group, entry;
+  Cardinal group, entry;
 
   for (group = 0; group < max_group; group++)
     for (entry = 0; entry < PCB->LayerGroups.Number[group]; entry++)
@@ -1608,7 +1610,7 @@ GetLayerGroupNumberByNumber (Cardinal Layer)
 /* ---------------------------------------------------------------------------
  * returns the layergroup number for the passed side (TOP_LAYER or BOTTOM_LAYER)
  */
-int
+Cardinal
 GetLayerGroupNumberBySide (int side)
 {
   /* Find the relavant board side layer group by determining the
@@ -2178,10 +2180,10 @@ MaskFlags (FlagType flag, unsigned int flags)
  * Layer Group Functions
  */
 
-int
-MoveLayerToGroup (int layer, int group)
+Cardinal
+MoveLayerToGroup (Cardinal layer, Cardinal group)
 {
-  int prev, i, j;
+  Cardinal prev, i, j;
 
   assert (layer >= 0 && layer < max_copper_layer + 2);
   assert (group >= 0 && group < max_group);
@@ -2216,7 +2218,7 @@ LayerGroupsToString (LayerGroupType *lg)
 #endif
   char *cp = buf;
   char sep = 0;
-  int group, entry;
+  Cardinal group, entry;
   for (group = 0; group < max_group; group++)
     if (PCB->LayerGroups.Number[group])
       {
@@ -2225,7 +2227,7 @@ LayerGroupsToString (LayerGroupType *lg)
         sep = 1;
         for (entry = 0; entry < PCB->LayerGroups.Number[group]; entry++)
           {
-            int layer = PCB->LayerGroups.Entries[group][entry];
+            Cardinal layer = PCB->LayerGroups.Entries[group][entry];
             if (layer == top_silk_layer)
               {
                 if (entry != 0)
diff --git a/src/misc.h b/src/misc.h
index 84f62ed..7a5c135 100644
--- a/src/misc.h
+++ b/src/misc.h
@@ -66,7 +66,7 @@ BoxType * GetDataBoundingBox (DataType *);
 void CenterDisplay (Coord, Coord);
 void SetFontInfo (FontType *);
 char *make_route_string (RouteStyleType rs[], int n_styles);
-int ParseGroupString (char *, LayerGroupType *, int * /* LayerN */);
+int ParseGroupString (char *, LayerGroupType *, Cardinal * /* LayerN */);
 int ParseRouteString (char *, RouteStyleType *, const char *);
 void QuitApplication (void);
 char *EvaluateFilename (char *, char *, char *, char *);
@@ -74,11 +74,11 @@ char *ExpandFilename (char *, char *);
 void SetTextBoundingBox (FontType *, TextType *);
 
 void SaveOutputWindow (void);
-int GetLayerNumber (DataType *, LayerType *);
-int GetLayerGroupNumberByPointer (LayerType *);
-int GetLayerGroupNumberByNumber (Cardinal);
-int GetLayerGroupNumberBySide (int);
-int ChangeGroupVisibility (int, bool, bool);
+Cardinal GetLayerNumber (DataType *, LayerType *);
+Cardinal GetLayerGroupNumberByPointer (LayerType *);
+Cardinal GetLayerGroupNumberByNumber (Cardinal);
+Cardinal GetLayerGroupNumberBySide (int);
+int ChangeGroupVisibility (Cardinal, bool, bool);
 void LayerStringToLayerStack (char *);
 
 
@@ -126,7 +126,7 @@ FlagType MaskFlags (FlagType, unsigned int);
 /* Layer Group Functions */
 
 /* Returns group actually moved to (i.e. either group or previous) */
-int MoveLayerToGroup (int layer, int group);
+Cardinal MoveLayerToGroup (Cardinal layer, Cardinal group);
 /* returns pointer to private buffer */
 char *LayerGroupsToString (LayerGroupType *);
 /* Make the current layer groups the default.  */
diff --git a/src/polygon.c b/src/polygon.c
index f587028..ab4e944 100644
--- a/src/polygon.c
+++ b/src/polygon.c
@@ -354,7 +354,7 @@ original_poly (PolygonType * p)
   POLYAREA *np = NULL;
   Cardinal n;
   Vector v;
-  int hole = 0;
+  unsigned int hole = 0;
 
   if ((np = poly_Create ()) == NULL)
     return NULL;
