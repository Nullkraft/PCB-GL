Bottom: a6b31c1ae9a997740e1c7e0b651751e30c0584c3
Top:    a8cbdf2b9710c81703e1bfa15111d043ad7e9bff
Author: Peter Clifton <peter@clifton-electronics.co.uk>
Date:   2016-02-18 16:53:56 +0000

Adjust coordinate system GOODNES KNOWS WHETHER THE GEOMETRY IS CORRECT... IDA-STEP SEEMS TO COPE THOUGH


---

diff --git a/src/hid/common/object3d.c b/src/hid/common/object3d.c
index 2efc341..21b140f 100644
--- a/src/hid/common/object3d.c
+++ b/src/hid/common/object3d.c
@@ -21,7 +21,8 @@
 
 #include "pcb-printf.h"
 
-#define REVERSED_PCB_CONTOURS 1 /* PCB Contours are reversed from the expected CCW for outer ordering - once the Y-coordinate flip is taken into account */
+//#define REVERSED_PCB_CONTOURS 1 /* PCB Contours are reversed from the expected CCW for outer ordering - once the Y-coordinate flip is taken into account */
+#undef REVERSED_PCB_CONTOURS
 
 #ifdef REVERSED_PCB_CONTOURS
 #define COORD_TO_STEP_X(pcb, x) (COORD_TO_MM(                   (x)))
@@ -336,12 +337,20 @@ object3d_from_contours (const POLYAREA *contours,
     }
 
     faces[npoints] = make_face3d (); /* bottom_face */
+#ifdef REVERSED_PCB_CONTOURS
     face3d_set_normal (faces[npoints], 0., 0., -1.);
+#else
+    face3d_set_normal (faces[npoints], 0., 0., 1.);
+#endif
     face3d_set_appearance (faces[npoints], top_bot_appearance);
     object3d_add_face (object, faces[npoints]);
 
     faces[npoints + 1] = make_face3d (); /* top_face */
+#ifdef REVERSED_PCB_CONTOURS
     face3d_set_normal (faces[npoints + 1], 0., 0., 1.);
+#else
+    face3d_set_normal (faces[npoints + 1], 0., 0., -1.);
+#endif
     face3d_set_appearance (faces[npoints + 1], top_bot_appearance);
     object3d_add_face (object, faces[npoints + 1]);
 
@@ -925,8 +934,13 @@ old_object3d_from_board_outline (void)
 
       get_contour_coord_n_in_step_mm (ct, offset_in_ct, &x1, &y1);
 
+#ifdef REVERSED_PCB_CONTOURS
       vertices[i]           = make_vertex3d (x1, y1, -COORD_TO_STEP_Z (PCB, HACK_BOARD_THICKNESS)); /* Bottom */
       vertices[npoints + i] = make_vertex3d (x1, y1, 0);                                            /* Top */
+#else
+      vertices[i]           = make_vertex3d (x1, y1,  COORD_TO_STEP_Z (PCB, HACK_BOARD_THICKNESS) / 2.); /* Bottom */
+      vertices[npoints + i] = make_vertex3d (x1, y1, -COORD_TO_STEP_Z (PCB, HACK_BOARD_THICKNESS) / 2.); /* Top */
+#endif
 
       object3d_add_vertex (board_object, vertices[i]);
       object3d_add_vertex (board_object, vertices[npoints + i]);
@@ -953,12 +967,20 @@ old_object3d_from_board_outline (void)
     }
 
     faces[npoints] = make_face3d (); /* bottom_face */
+#ifdef REVERSED_PCB_CONTOURS
     face3d_set_normal (faces[npoints], 0., 0., -1.);
+#else
+    face3d_set_normal (faces[npoints], 0., 0., 1.);
+#endif
     face3d_set_appearance (faces[npoints], top_bot_appearance);
     object3d_add_face (board_object, faces[npoints]);
 
     faces[npoints + 1] = make_face3d (); /* top_face */
+#ifdef REVERSED_PCB_CONTOURS
     face3d_set_normal (faces[npoints + 1], 0., 0., 1.);
+#else
+    face3d_set_normal (faces[npoints + 1], 0., 0., -1.);
+#endif
     face3d_set_appearance (faces[npoints + 1], top_bot_appearance);
     object3d_add_face (board_object, faces[npoints + 1]);
 
@@ -1076,11 +1098,11 @@ old_object3d_from_board_outline (void)
                              0., 0., 1., /* Normal */ COORD_TO_MM (ct->radius)); /* NORMAL POINTING TO -VE Z MAKES CIRCLE CLOCKWISE */
 #else
         edge_info_set_round (UNDIR_DATA (edges[i]),
-                             COORD_TO_STEP_X (PCB, ct->cx), COORD_TO_STEP_Y (PCB, ct->cy), COORD_TO_STEP_Z (PCB, -HACK_BOARD_THICKNESS), /* Center of circle */
-                             0., 0., -1., /* Normal */ COORD_TO_MM (ct->radius)); /* NORMAL POINTING TO -VE Z MAKES CIRCLE CLOCKWISE */
+                             COORD_TO_STEP_X (PCB, ct->cx), COORD_TO_STEP_Y (PCB, ct->cy),  COORD_TO_STEP_Z (PCB, HACK_BOARD_THICKNESS) / 2., /* Center of circle */ /* BOTTOM */
+                             0., 0., 1., /* Normal */ COORD_TO_MM (ct->radius)); /* NORMAL POINTING TO -VE Z MAKES CIRCLE CLOCKWISE */
         edge_info_set_round (UNDIR_DATA (edges[npoints + i]),
-                             COORD_TO_STEP_X (PCB, ct->cx), COORD_TO_STEP_Y (PCB, ct->cy), 0., /* Center of circle */
-                             0., 0., -1., /* Normal */ COORD_TO_MM (ct->radius)); /* NORMAL POINTING TO -VE Z MAKES CIRCLE CLOCKWISE */
+                             COORD_TO_STEP_X (PCB, ct->cx), COORD_TO_STEP_Y (PCB, ct->cy), COORD_TO_STEP_Z (PCB, -HACK_BOARD_THICKNESS) / 2. , /* Center of circle */ /* TOP */
+                             0., 0., 1., /* Normal */ COORD_TO_MM (ct->radius)); /* NORMAL POINTING TO -VE Z MAKES CIRCLE CLOCKWISE */
 #endif
         edge_info_set_stitch (UNDIR_DATA (edges[2 * npoints + i]));
       }
diff --git a/src/hid/step/object3d_step.c b/src/hid/step/object3d_step.c
index aa2ee46..5b2cd40 100644
--- a/src/hid/step/object3d_step.c
+++ b/src/hid/step/object3d_step.c
@@ -25,7 +25,8 @@
 #include "object3d_step.h"
 
 
-#define REVERSED_PCB_CONTOURS 1 /* PCB Contours are reversed from the expected CCW for outer ordering - once the Y-coordinate flip is taken into account */
+//#define REVERSED_PCB_CONTOURS 1 /* PCB Contours are reversed from the expected CCW for outer ordering - once the Y-coordinate flip is taken into account */
+#undef REVERSED_PCB_CONTOURS
 
 #define EPSILON 1e-5 /* XXX: Unknown  what this needs to be */
